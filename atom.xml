<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>star</title>
  
  <subtitle>前端小白|java萌新|Geek精神</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://javastar.club/"/>
  <updated>2019-08-23T03:45:17.323Z</updated>
  <id>http://javastar.club/</id>
  
  <author>
    <name>stardust</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年下半年学习计划</title>
    <link href="http://javastar.club/archives/1a186561.html"/>
    <id>http://javastar.club/archives/1a186561.html</id>
    <published>2019-12-30T16:00:00.000Z</published>
    <updated>2019-08-23T03:45:17.323Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+Vx+bVMQKz7KrCeNMTsMKyhUVLuDRtaahmL3jxWIVLP1WUvbiy4OKBlA/DwIBxzRF5v9hu083XXnCNtjbh5DtRcqu5CWIpW9xIVMRmoQrqx7Eq6qLE58D4xu++3HPKVM+k3eDyva+6KoRADoeBwW7GY3wK1EejXgk/gTJwJSmiM2qzMvuCnQYIkZszZPCZ1MtEljyC22pCaSyFEfKERCavxYxCDMI42lRMsnt6OuLo21TPpvOf6scpeckiAGdlu+qEg8DwRRzEju/wQG5Q65kHMDZNK6rzYzuOGHOfZ7MLZ/H4sG5y+e7THltYpN8edLARqXSBr+EinE9RoIVf5DppRUFXigs2zFs=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="学习计划" scheme="http://javastar.club/categories/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="学习计划" scheme="http://javastar.club/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Java开发</title>
    <link href="http://javastar.club/archives/8c2959bc.html"/>
    <id>http://javastar.club/archives/8c2959bc.html</id>
    <published>2019-08-21T13:53:54.000Z</published>
    <updated>2019-08-23T03:26:34.888Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="Java基础" scheme="http://javastar.club/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java基础" scheme="http://javastar.club/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>前端学习笔记</title>
    <link href="http://javastar.club/archives/91ce7628.html"/>
    <id>http://javastar.club/archives/91ce7628.html</id>
    <published>2019-08-21T08:35:43.000Z</published>
    <updated>2019-08-23T03:45:30.011Z</updated>
    
    <content type="html"><![CDATA[<p>test</p><a id="more"></a><h3 id="常用浏览器内核"><a href="#常用浏览器内核" class="headerlink" title="常用浏览器内核"></a>常用浏览器内核</h3><ul>  <li>    <p>webkit内核(V8引擎)</p>  </li>  <li>    <p>Gecko</p>  </li>  <li>    <p>Presto</p>  </li>  <li>    <p>Trident</p>  </li></ul><h3 id="谷歌浏览器的控制台：-Fn-f12"><a href="#谷歌浏览器的控制台：-Fn-f12" class="headerlink" title="谷歌浏览器的控制台：(Fn+f12)"></a>谷歌浏览器的控制台：(Fn+f12)</h3><ul>  <li>    <p>Elements: 查看结构样式，可以修改这些内容</p>  </li>  <li>    <p>Console: 查看输出结果和报错信息，是JS调试的利器</p>  </li>  <li>    <p>Sources: 查看项目源码</p>  </li>  <li>    <p>Network: 查看当前网站所有资源的请求信息(包括和服务器传输的HTTP报文信息)，加载时间等(根据加载时间进行项目优化)</p>  </li>  <li>    <p>Application:查看当前网站的数据存储和资源文件(可以盗图) 防盗等技术</p>  </li></ul><h3 id="JS做客户端语言"><a href="#JS做客户端语言" class="headerlink" title="JS做客户端语言"></a>JS做客户端语言</h3><blockquote>  <p>按照相关的JS语法，去操作页面中的元素，有时还要操作浏览器里面的一些功能</p></blockquote><ul>  <li>    <p>ECMAScript3/5/6…: JS的语法规范(变量、数据类型、操作语句等)</p>  </li>  <li>    <p>DOM(document object model):文档对象模型，提供一些JS的属性和方法，用来操作页面的DOM元素</p>  </li>  <li>    <p>BOM(browser object model): 浏览器对象模型，提供一些JS的属性和方法，用来操作浏览器的</p>  </li></ul><h3 id="JS中的变量-variable"><a href="#JS中的变量-variable" class="headerlink" title="JS中的变量 variable"></a>JS中的变量  variable</h3><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//创建函数也相当于创建变量</span><br><span class="line">function fn()&#123;&#125;</span><br><span class="line">//创建类也相当于创建变量</span><br><span class="line">class A&#123;&#125;</span><br><span class="line">//ES6模块的导入也可以创建变量</span><br><span class="line">import B from &apos;./B.js&apos;;</span><br><span class="line">//Symbol创建唯一值</span><br><span class="line">let n=Symbol(100);</span><br><span class="line">let m=Symbol(100);</span><br></pre>      </td>    </tr>  </table></figure><h3 id="JS中的命名规范"><a href="#JS中的命名规范" class="headerlink" title="JS中的命名规范"></a>JS中的命名规范</h3><ul>  <li>严格区分大小写</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let Test=100;</span><br><span class="line">console.log(Test);</span><br></pre>      </td>    </tr>  </table></figure><ul>  <li>    <p>使用数字、字母、下划线、$，数字不能作为开头</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let $box;//一般用JQ获取的以$开头</span><br><span class="line">let _box;//一般公共变量都是_开头</span><br><span class="line">let 1box;//不可以，但是可以写box1</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>驼峰命名法： 首字母小写，其余每一个有意义的首字母都要大写(命名尽可能语义化明显，使用英文单词)</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let studentInformation;</span><br><span class="line">let studentInfo;</span><br><span class="line">//常用的缩写：add/insert/create/new,update, delete/del/remove/rm, sel/select/query/get,info</span><br></pre>          </td>        </tr>      </table>    </figure>  </li></ul><h3 id="JS中常用的数据类型"><a href="#JS中常用的数据类型" class="headerlink" title="JS中常用的数据类型"></a>JS中常用的数据类型</h3><ul>  <li>基本数据类型<ul>      <li>数字number<br>常规数字和NaN</li>      <li>字符串string<br>所有用单引号、双引号、反引号包起来的都是字符串</li>      <li>布尔 boolean<br>true/false</li>      <li>空对象指针null</li>      <li>未定义undefined</li>    </ul>  </li>  <li>引用数据类型<ul>      <li>对象数据类型object<ul>          <li>{} 普通对象</li>          <li>[] 数组对象</li>          <li>/^[+-]?(\d|([1-9]\d+))(\ .\d+)?$/ 正则对象</li>          <li>Math数学函数对象</li>          <li>日期对象</li>          <li>…</li>        </ul>      </li>      <li>函数数据类型function</li>    </ul>  </li></ul><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><blockquote>  <p>not a number:不是一个数，但他属于数字类型</p></blockquote><p>NaN和任何值包括自己都不相等，所以我们不能用相等的方式判断是否为有效数字</p><h3 id="isNaN"><a href="#isNaN" class="headerlink" title="isNaN"></a>isNaN</h3><blockquote>  <p>检测一个值是否为非有效数字</p></blockquote><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>      </td>      <td class="code">        <pre><span class="line">console.log(isNaN(10));</span><br><span class="line"></span><br><span class="line">console.log(isNaN(&apos;AA&apos;));</span><br><span class="line">=&gt; Number(&apos;AA&apos;)=&gt;NaN</span><br><span class="line">=&gt; isNaN(NaN)=&gt;TRUE</span><br></pre>      </td>    </tr>  </table></figure><p>在使用isNaN进行检测时，首先会验证检测的值是否为数字类型，如果不是，先基于Number()这个方法，</p><h3 id="把其他类型值转换为数字类型"><a href="#把其他类型值转换为数字类型" class="headerlink" title="把其他类型值转换为数字类型"></a>把其他类型值转换为数字类型</h3><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//把字符串转换为数字，只要字符串包含任意一个非有效数字字符(第一个点除外)，结果都是NaN</span><br><span class="line">console.log(Number(&apos;12.5&apos;));//=&gt;12.5</span><br><span class="line">console.log(Number(&apos;12.5px&apos;));//NaN</span><br><span class="line">console.log(Number(&apos;&apos;));//0</span><br><span class="line"></span><br><span class="line">//bool translate number</span><br><span class="line">console.log(Number(true));//=&gt;1</span><br><span class="line">console.log(Number(false));//=&gt;0</span><br><span class="line">console.log(isNaN(false));//=&gt;false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">console.log(Number(undefined));//=&gt;NaN</span><br><span class="line">console.log(Number(null));//=&gt;0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//把引用数据类型转换为数字，是先把他基于toString方法转换为字符串，然后再转换为数字</span><br><span class="line">console.log(Number(&#123;name:&apos;10&apos;&#125;));//NaN</span><br><span class="line">console.log(Number(&#123;&#125;));//NaN</span><br><span class="line"></span><br><span class="line">//&#123;&#125;/&#123;&apos;x&apos;:&apos;x&apos;&#125;.toString()=&gt;&quot;[object Object]&quot;=&gt;NaN</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;&apos;</span><br><span class="line">console.log(Number([]));// -&gt; 0</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;12&apos;</span><br><span class="line">console.log(Number([12]));// -&gt; 12</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;12,23&apos;</span><br><span class="line">console.log(Number([12,23]));// -&gt; NaN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let str=&apos;12.5px&apos;;</span><br><span class="line">console.log(Number(str));//=&gt;NaN</span><br><span class="line">console.log(parseInt(str));//=&gt;12</span><br><span class="line">console.log(parseFloat(str));//=&gt;12.5</span><br><span class="line">console.log(parseFloat(&apos;width:12.5px&apos;));//=&gt;NaN</span><br></pre>      </td>    </tr>  </table></figure><ul>  <li>    <p>Number([val])</p>  </li>  <li>    <p>      parseInt/parseFloat([val],[进制]):也是转换数字的方法，对于字符串来说，它是从左到右依次查找有效数字字符，直到遇到非有效数字字符，停止查找(不管后面是否还有数字，都不再找了)，把找到的当做数字返回    </p>  </li>  <li>    <p>==进行比较的时候，可能要出现把其他类型值转换为数字</p>  </li></ul><h2 id="String字符串数据类型"><a href="#String字符串数据类型" class="headerlink" title="String字符串数据类型"></a>String字符串数据类型</h2><blockquote>  <p>所有用单引号、双引号、反引号包起来的都是字符串</p></blockquote><h3 id="把其他类型值转换为字符串"><a href="#把其他类型值转换为字符串" class="headerlink" title="把其他类型值转换为字符串"></a>把其他类型值转换为字符串</h3><ul>  <li>[val].toString()</li>  <li>字符串拼接</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let a=12;</span><br><span class="line">console.log(a.toString());//=&gt;&apos;12&apos;</span><br><span class="line">console.log((NaN).toString());//=&gt;&apos;NaN&apos;</span><br><span class="line">/*</span><br><span class="line">null和undefined是禁止直接toString的</span><br><span class="line">(null).toString() =&gt; 报错</span><br><span class="line">但是和undefined一样转换为字符串的结果就是&apos;null&apos;/&apos;undefined&apos;</span><br><span class="line">*/ </span><br><span class="line"></span><br><span class="line">//普通对象.toString()的结果是&quot;[object Object]&quot;=&gt;?</span><br><span class="line">=&gt; Object.prototype.toString方法不是转换为字符串的，而是用来检测数据类型的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//字符串拼接：只有加法可能出现字符串拼接，一旦遇到字符串，则即是字符串拼接。</span><br><span class="line">console.log(&apos;10&apos;+10);//=&gt;&apos;1010&apos;</span><br><span class="line">console.log(&apos;10&apos;-10);//=&gt;0</span><br><span class="line">console.log(&apos;10px&apos;-10);//=&gt;NaN</span><br><span class="line"></span><br><span class="line">let a=10+null+true+[]+undefined+&apos;珠峰&apos;+null+[]+10+false;</span><br><span class="line"></span><br><span class="line">//10+null-&gt;0+true-&gt;1+[]-&gt;&apos;&apos; 空数组变为数字，先要经历变为空字符串，遇到字符串，直接变为字符串拼接。</span><br><span class="line"></span><br><span class="line">-&gt;&apos;11&apos;+undefined-&gt;&apos;11undefined&apos;</span><br><span class="line"></span><br><span class="line">-&gt;&apos;11undefined珠峰null10false&apos;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="boolean布尔数据类型"><a href="#boolean布尔数据类型" class="headerlink" title="boolean布尔数据类型"></a>boolean布尔数据类型</h2><blockquote>  <p>只有两个值 true/false</p></blockquote><h3 id="把其他类型值转换为布尔类型"><a href="#把其他类型值转换为布尔类型" class="headerlink" title="把其他类型值转换为布尔类型"></a>把其他类型值转换为布尔类型</h3><blockquote>  <p>只有0、NaN、’’、null、undefined五个值转换为FALSE，其余都转换为TRUE(而且没有任何特殊的情况)</p></blockquote><ul>  <li>Boolean([val])</li>  <li>!/!!</li>  <li>条件判断</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//!:取反(先转为布尔，然后取反)</span><br><span class="line">console.log(!1);//false</span><br><span class="line">console.log(!!1);//等价于Boolean !!:取反再取反，只相当于转换为布尔</span><br></pre>      </td>    </tr>  </table></figure><h2 id="null-undefined"><a href="#null-undefined" class="headerlink" title="null/ undefined"></a>null/  undefined</h2><blockquote>  <p>null和undefined都代表的是没有</p></blockquote><ul>  <li>    <p>null: 意料之中(一般都是开始不知道值，我们手动先设置为null，后期再给予赋值操作)</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let num=null;//=&gt;let num=0;  一般最好用null作为初始的空值，因为零不是空值，他在栈内存中有自己的存储空间(占了位置)</span><br><span class="line"></span><br><span class="line">num=12;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>undefined：意料之外(不是我能决定的)</p>  </li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let num;//=&gt;创建一个变量没有赋值，默认值是undefined</span><br><span class="line"></span><br><span class="line">num=12;</span><br></pre>      </td>    </tr>  </table></figure><h3 id="object对象数据类型-普通对象"><a href="#object对象数据类型-普通对象" class="headerlink" title="object对象数据类型-普通对象"></a>object对象数据类型-普通对象</h3><blockquote>  <p>{[key]:[value],…} 任何一个对象都是由零到多组键值对(属性名：属性值)组成的(并且属性名不能重复)</p></blockquote><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let person=&#123;</span><br><span class="line">    name: &apos;star&apos;,</span><br><span class="line">    age: 40,</span><br><span class="line">    height: &apos;18cm&apos;,</span><br><span class="line">    weight: &apos;40kg&apos;,</span><br><span class="line">    1: 100</span><br><span class="line">&#125;;</span><br><span class="line">//获取属性名对应的属性值</span><br><span class="line">//=&gt;对象.属性名</span><br><span class="line">//=&gt;对象[属性名] 属性名是数字或字符串格式的</span><br><span class="line">//=&gt;如果当前属性名不存在，默认的属性值时undefined</span><br><span class="line">//=&gt;如果属性名是数字，则不能使用点的方式获取属性值</span><br><span class="line">console.log(person.name);</span><br><span class="line"></span><br><span class="line">console.log(person[&apos;age&apos;]);</span><br><span class="line"></span><br><span class="line">console.log(person.sex); //=&gt;undefined</span><br><span class="line"></span><br><span class="line">console.log(person[&apos;height&apos;]);</span><br><span class="line"></span><br><span class="line">console.log(person[1]);</span><br><span class="line">//删除属性</span><br><span class="line">//=&gt;真删除：把属性彻底删掉</span><br><span class="line">//=&gt;假删除：属性还在，值为空</span><br><span class="line">delete person[1];</span><br><span class="line"></span><br><span class="line">person.weight=null;</span><br><span class="line">console.log(person);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//设置属性名属性值</span><br><span class="line">//=》属性名不能重复，如果属性名已经存在，不属于新增，属于修改属性值</span><br><span class="line">/*person.GF=&apos;TT&apos;;</span><br><span class="line">person.name=&apos;李易峰&apos;;</span><br><span class="line">console.log(person[&apos;GF&apos;]);</span><br><span class="line">console.log(person[&apos;name&apos;]);</span><br><span class="line">*/</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre>      </td>      <td class="code">        <pre><span class="line">function count(str)</span><br><span class="line">&#123;</span><br><span class="line">    if(isNaN(parseInt(str,10)))</span><br><span class="line">    &#123;</span><br><span class="line">        alert(&quot;该字符串完全由数字组成&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        alert(&quot;该字符串不完全由字符组成&quot;);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">   数组是特殊的对象</span><br><span class="line">   1. 我们中括号中设置的是属性值，它的属性名是默认生成的数字，从零开始递增，而且这个数字代表每一项的位置，我们把其称为“索引”=》从零开始，连续递增，代表每一项位置的数字属性名</span><br><span class="line">   2. 默认一个属性名length,存储数组的长度</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">let array=[12,&apos;test&apos;,true,41];</span><br><span class="line">console.log(array);</span><br><span class="line">console.log(array.length);</span><br><span class="line">console.log(array[&apos;length&apos;]);</span><br><span class="line">console.log(array[1]);</span><br><span class="line">console.log(array[array.length-1]);</span><br><span class="line">//向数组末尾增加内容</span><br><span class="line">array[array.length]=100;</span><br><span class="line">console.log(array);</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//怎么判断是否是字符</span><br><span class="line">/*function t(str)&#123;</span><br><span class="line">    if (/[^\x00-\xff]/g.test(str))//[^\x00-\xff]即ASCII 编码不在0-255的字符</span><br><span class="line"> alert(&quot;含有汉字&quot;);          </span><br><span class="line">else alert(&quot;全是字符&quot;);   </span><br><span class="line">&#125;</span><br><span class="line">console.log(t(&quot;你好&quot;));</span><br><span class="line">console.log(t(&quot;adsfa&quot;));</span><br><span class="line">console.log(t(&quot;测试&quot;));*/</span><br><span class="line"></span><br><span class="line">let n=&#123;</span><br><span class="line">    name: &apos;珠峰&apos;</span><br><span class="line">&#125;;</span><br><span class="line">let m=n;</span><br><span class="line">m.name=&apos;培训&apos;;</span><br><span class="line">console.log(n.name);</span><br><span class="line">console.log(m.name);</span><br></pre>      </td>    </tr>  </table></figure><blockquote>  <p>浏览器想要执行js代码：</p>  <ol>    <li>从电脑内存中分配存储一块内存，用来执行代码(栈内存=&gt;Stack)</li>    <li>分配一个主线程，用来自上而下执行js代码</li>  </ol></blockquote><p>栈内存： 变量存储空间、值存储空间。</p><p>例子： </p><p><strong>let a=12;</strong> 进栈执行<br> 执行完出栈，下一行代码才能进栈执行。</p><p> a. 创建变量a，放到当前栈内存变量存储区域中<br> b. 创建一个值12，把它存储到当前栈内存值区域中(复杂的引用类型值不是这样的)<br> c.  =为赋值，其实赋值是让变量和值相互关联的过程。</p><p><strong>let b=a;</strong></p><p> a和b均指向12</p><p><strong>b=13;</strong></p><p> b指向13，不指向12</p><h5 id="复杂值-引用类型值-的存储，又分成了三个步骤："><a href="#复杂值-引用类型值-的存储，又分成了三个步骤：" class="headerlink" title="复杂值(引用类型值)的存储，又分成了三个步骤："></a>复杂值(引用类型值)的存储，又分成了三个步骤：</h5><ol>  <li>在内存中分配出一块新内存，用来存储引用类型值(堆内存=&gt;heap) =&gt;内存中有一个16进制地址</li>  <li>把对象中的键值对依次存储到堆内存中</li>  <li>把堆内存地址和变量关联起来</li></ol><p>基本类型：按值操作(直接操作的是值)，所以也叫做值类型<br>引用类型：操作的是堆内存的地址(按引用地址操作的)</p><p>画图分析底层原理。<br><img src="https://github.com/starstarb/clouding/raw/master/js/js.png" alt></p><h3 id="JS中的数据类型检测"><a href="#JS中的数据类型检测" class="headerlink" title="JS中的数据类型检测"></a>JS中的数据类型检测</h3><ul>  <li>    <p>typeof[val] :用来检测数据类型的运算符</p>  </li>  <li>    <p>instanceof: 用来检测当前实例是否属于某个类</p>  </li>  <li>    <p>constructor: 基于构造函数检测数据类型(也是基于类的方式)</p>  </li>  <li>    <p>Object.prototye.toString.call(): 检测数据类型最好的办法<br><img src="https://github.com/starstarb/clouding/raw/master/js/%E9%98%BF%E9%87%8C%E9%9D%A2%E8%AF%95%E9%A2%98.png" alt>    </p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre>          </td>          <td class="code">            <pre><span class="line"></span><br><span class="line">// let n=[10,20];</span><br><span class="line">// let m=n;</span><br><span class="line">// let x=m;</span><br><span class="line">// m[0]=100;</span><br><span class="line">// x=[30,40];</span><br><span class="line">// x[0]=200;</span><br><span class="line">// m=x;</span><br><span class="line">// m[1]=300;</span><br><span class="line">// n[2]=400;</span><br><span class="line">// console.log(n,m,x);</span><br><span class="line"></span><br><span class="line">// let a=&#123;</span><br><span class="line">//     n:1</span><br><span class="line">// &#125;;</span><br><span class="line">// let b=a;</span><br><span class="line">// a.x=a=&#123;</span><br><span class="line">//     n:2</span><br><span class="line">// &#125;;</span><br><span class="line"></span><br><span class="line">// console.log(a.x);</span><br><span class="line">// console.log(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">   基于typeof检测出来的结果</span><br><span class="line">   1. 首先是一个字符串</span><br><span class="line">   2. 字符串中包含对应的类型</span><br><span class="line">   局限性：</span><br><span class="line">     1. typeof null-&gt; &quot;object&quot; ，但是null并不是对象</span><br><span class="line">     2. 基于typeof无法细分出当前值是普通对象还是数组对象，因为只要是对象数据类型，返回的结果都是“Object”</span><br><span class="line">*/</span><br><span class="line">// console.log(typeof 1);</span><br><span class="line">// let a=NaN;</span><br><span class="line">// console.log(typeof a);//=&gt;&apos;number&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">console.log(typeof typeof typeof []);</span><br><span class="line"></span><br><span class="line">//=&gt;typeof []=&gt;&quot;object&quot;</span><br><span class="line">//typeof &quot;object&quot; =&gt; &quot;string&quot;</span><br><span class="line">//因为typeof检测的结果都是字符串，所以只要两个及以上同时检测，最后结果必然是&quot;string&quot;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li></ul><p><img src="https://github.com/starstarb/clouding/raw/master/js/typeof.png" alt></p><h3 id="JS中的操作语句：判断、循环"><a href="#JS中的操作语句：判断、循环" class="headerlink" title="JS中的操作语句：判断、循环"></a>JS中的操作语句：判断、循环</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;test&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://javastar.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://javastar.club/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java设计模式学习(二)</title>
    <link href="http://javastar.club/archives/b4a8b758.html"/>
    <id>http://javastar.club/archives/b4a8b758.html</id>
    <published>2019-08-19T07:29:49.000Z</published>
    <updated>2019-08-23T03:45:52.239Z</updated>
    
    <content type="html"><![CDATA[<p>代码进阶</p><a id="more"></a><h3 id="相关面试题"><a href="#相关面试题" class="headerlink" title="相关面试题"></a>相关面试题</h3><p>原型设计模式问题：</p><ol>  <li>    <p>有请使用UML类图画出原型模式核心角色</p>  </li>  <li>    <p>原型设计模式的深拷贝和浅拷贝是什么，并写出深拷贝的两种方式的源码(重写clone方法来实现深拷贝、使用序列化来实现深拷贝)</p>  </li>  <li>    <p>在Spring框架中哪里使用到原型模式，并对源码进行分析。</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br></pre>          </td>          <td class="code">            <pre><span class="line">beans.xml</span><br><span class="line">&lt;bean id=&quot;id01&quot; class=&quot;com.atguigu.spring.bean.Monster&quot; scope=&quot;prototype&quot;/&gt;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>Spring中原型bean的创建，就是原型模式的应用。</p>  </li>  <li>    <p>代码分析+Debug源码</p>  </li>  <li>    <p>设计模式的七大原则：<br>要求：<br>a. 七大设计原则核心思想<br>b. 能够以类图的说明设计原则<br>c.      在项目实际开发中，你在哪里使用到了ocp原则。</p>  </li></ol><blockquote>  <p>设计模式常用的七大原则有：<br> 单一职责原则、接口隔离原则、依赖倒转原则、里氏替代原则、开闭原则ocp、迪米特原则、合成服用原则</p></blockquote><ol start="7">  <li>    <p>      金融借贷平台项目：<br>借贷平台的订单，有审核-发布-抢单等等步骤，随着操作的不同，会改变订单的状态，项目中的这个模块实现就会使用到状态模式，请你使用状态模式进行设计，并完成实际代码。    </p>    <p>问题分析：<br> 设计模式，实际开发经验。</p>  </li>  <li>    <p>解释器设计模式<br> a. 介绍解释器设计模式是什么？<br> b. 画出解释器设计模式的UML类图，分析设计模式中的各个角色是什么？<br>      c. 请说明Spring的框架中，哪里使用到了解释器设计模式，并做到源码级别的分析。</p>    <p> 源码剖析：</p>    <ul>      <li>Spring框架中SpelExpressionParser就使用到解释器模式</li>      <li>代码分析+Debug源码+模式角色分析说明</li>    </ul>  </li>  <li>    <p>单例设计模式一共有几种实现方式？请分别用代码实现，并说明各个实现方式的优点和缺点？</p>    <ul>      <li>饿汉式 两种</li>      <li>懒汉式 三种</li>      <li>双重检查 </li>      <li>静态内部类</li>      <li>枚举</li>    </ul>  </li></ol><h3 id="设计模式的重要性"><a href="#设计模式的重要性" class="headerlink" title="设计模式的重要性"></a>设计模式的重要性</h3><p> 软件工程中，design pattern 是对软件设计中普遍存在的各种问题，所提出的解决方案。</p><ol>  <li>客户提出新功能</li>  <li>项目开发完后，接手维护新项目</li>  <li>大厂面试</li>  <li>成为一名极客精神，独立开发</li>  <li>设计模式在软件中哪里？ 面向对象=&gt; 功能模块[设计模式+算法和数据结构]=&gt; 框架=&gt; 架构[服务器集群]</li></ol><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><p>  <strong>应用场景-&gt;设计模式-&gt;剖析原理-&gt;分析实现步骤(UML图解)-&gt;代码实现-&gt;框架或项目源码分析(找到使用的地方),对步骤进行个人讲解</strong></p><h3 id="设计模式的目的"><a href="#设计模式的目的" class="headerlink" title="设计模式的目的"></a>设计模式的目的</h3><ol>  <li>    <p>代码重用性</p>  </li>  <li>    <p>可读性(编程规范性，驼峰命名法)</p>  </li>  <li>    <p>可扩展性(增加新功能，不断改进重构设计模式)</p>  </li>  <li>    <p>可靠性</p>  </li>  <li>    <p>使程序呈现高内聚、低耦合的特性</p>  </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码进阶&lt;/p&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://javastar.club/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://javastar.club/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>VSCode快捷键</title>
    <link href="http://javastar.club/archives/1cfdae89.html"/>
    <id>http://javastar.club/archives/1cfdae89.html</id>
    <published>2019-08-18T08:10:52.000Z</published>
    <updated>2019-08-23T03:39:17.640Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="VSCode" scheme="http://javastar.club/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="http://javastar.club/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>WireShark学习</title>
    <link href="http://javastar.club/archives/6e2df76f.html"/>
    <id>http://javastar.club/archives/6e2df76f.html</id>
    <published>2019-08-18T03:34:41.000Z</published>
    <updated>2019-08-23T03:26:23.954Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+hEDOaRrZHnXGmHjIz/BI7u6iBExN04U9q0YeRvX9AZ26Z20kF+s72k9JqS9ZpFaNPdy33TVmLDl4ys8S+UQxDdD7s3JnfUZMb/Thy2I2qepH2dqJCxUvWzKMZuM4c2OHNiziRzT8Lmg4Xq0grpctDqOvWhCotg0c=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="wireshark" scheme="http://javastar.club/categories/wireshark/"/>
    
    
      <category term="wireshark" scheme="http://javastar.club/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>二进制安全基础学习</title>
    <link href="http://javastar.club/archives/217f25fc.html"/>
    <id>http://javastar.club/archives/217f25fc.html</id>
    <published>2019-08-15T07:52:20.000Z</published>
    <updated>2019-08-23T03:19:05.812Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="渗透学习" scheme="http://javastar.club/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="二进制" scheme="http://javastar.club/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>网络安全入门学习</title>
    <link href="http://javastar.club/archives/aadc8bfc.html"/>
    <id>http://javastar.club/archives/aadc8bfc.html</id>
    <published>2019-08-10T14:14:07.000Z</published>
    <updated>2019-08-16T03:09:17.687Z</updated>
    
    <content type="html"><![CDATA[<p>看雪<br><img src="https://github.com/starstarb/clouding/raw/master/head/9dd29ca8fff2fd1285d5fee5086d5dab.jpg" alt></p><a id="more"></a><p>图1：<br><img src="https://github.com/starstarb/clouding/raw/master/security/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" alt></p><p>图2：<br><img src="https://github.com/starstarb/clouding/raw/master/security/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E&amp;%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%8E%9F%E5%9B%BE%E5%8E%BB%E6%8E%89zip%E5%90%8E%E7%BC%80.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看雪&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/9dd29ca8fff2fd1285d5fee5086d5dab.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="网络安全" scheme="http://javastar.club/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://javastar.club/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>协同过滤算法</title>
    <link href="http://javastar.club/archives/a10feb4a.html"/>
    <id>http://javastar.club/archives/a10feb4a.html</id>
    <published>2019-08-10T08:09:37.000Z</published>
    <updated>2019-08-16T03:12:08.037Z</updated>
    
    <content type="html"><![CDATA[<p>协同过滤算法:<a href="https://blog.csdn.net/DanyHgc/article/details/78910379" rel="external nofollow noopener noreferrer" target="_blank">参考</a><br><img src="https://github.com/starstarb/clouding/raw/master/head/39c919dcb1e7359106750713718e02a4.jpg" alt></p><a id="more"></a><h3 id="什么是协同过滤"><a href="#什么是协同过滤" class="headerlink" title="什么是协同过滤"></a>什么是协同过滤</h3><p>协同过滤是利用集体智慧的一个典型方法。要理解什么是协同过滤 (Collaborative Filtering, 简称  CF)，首先想一个简单的问题，如果你现在想看个电影，但你不知道具体看哪部，你会怎么做？大部分的人会问问周围的朋友，看看最近有什么好看的电影推荐，而我们一般更倾向于从口味比较类似的朋友那里得到推荐。<br>这就是协同过滤的核心思想。<br>换句话说，就是借鉴和你相关人群的观点来进行推荐，很好理解。</p><h3 id="协同过滤的实现"><a href="#协同过滤的实现" class="headerlink" title="协同过滤的实现"></a>协同过滤的实现</h3><p>要实现协同过滤的推荐算法，要进行以下三个步骤：</p><ol>  <li>收集数据</li>  <li>找到相似用户和物品</li>  <li>进行推荐</li></ol><p><strong>1 收集数据</strong></p><p>  这里的数据指的都是用户的历史行为数据，比如用户的购买历史，关注，收藏行为，或者发表了某些评论，给某个物品打了多少分等等，这些都可以用来作为数据供推荐算法使用，服务于推荐算法。需要特别指出的在于，不同的数据准确性不同，粒度也不同，在使用时需要考虑到噪音所带来的影响。</p><p><strong>2 找到相似用户和物品</strong></p><p>这一步也很简单，其实就是计算用户间以及物品间的相似度。以下是几种计算相似度的方法：<br><img src="https://github.com/starstarb/clouding/raw/master/python/20171227113119804.png" alt></p><p><strong>3 进行推荐</strong></p><p>在知道了如何计算相似度后，就可以进行推荐了。</p><p>在协同过滤中，有两种主流方法：</p><ol>  <li>基于用户的协同过滤</li>  <li>基于物品的协同过滤<br>具体怎么来阐述他们的原理呢，看个图大家就明白了</li></ol><p>基于用户的 CF  的基本思想相当简单，基于用户对物品的偏好找到相邻邻居用户，然后将邻居用户喜欢的推荐给当前用户。计算上，就是将一个用户对所有物品的偏好作为一个向量来计算用户之间的相似度，找到  K 邻居后，根据邻居的相似度权重以及他们对物品的偏好，预测当前用户没有偏好的未涉及物品，计算得到一个排序的物品列表作为推荐。 下图给出了一个例子，对于用户  A，根据用户的历史偏好，这里只计算得到一个邻居 - 用户 C，然后将用户 C 喜欢的物品 D 推荐给用户 A。<br><img src="https://github.com/starstarb/clouding/raw/master/python/xitongguolv1.png" alt></p><p> 基于物品的 CF 的原理和基于用户的 CF  类似，只是在计算邻居时采用物品本身，而不是从用户的角度，即基于用户对物品的偏好找到相似的物品，然后根据用户的历史偏好，推荐相似的物品给他。从计算的角度看，就是将所有用户对某个物品的偏好作为一个向量来计算物品之间的相似度，得到物品的相似物品后，根据用户历史的偏好预测当前用户还没有表示偏好的物品，计算得到一个排序的物品列表作为推荐。下图给出了一个例子，对于物品  A，根据所有用户的历史偏好，喜欢物品 A 的用户都喜欢物品 C，得出物品 A 和物品 C 比较相似，而用户 C 喜欢物品 A，那么可以推断出用户 C  可能也喜欢物品 C。<br><img src="https://github.com/starstarb/clouding/raw/master/python/CF1.png" alt></p><h3 id="算法存在的问题"><a href="#算法存在的问题" class="headerlink" title="算法存在的问题"></a>算法存在的问题</h3><p>这个算法实现起来也比较简单，但是在实际应用中有时候也会有问题的。</p><p>比如一些非常流行的商品可能很多人都喜欢，这种商品推荐给你就没什么意义了，所以计算的时候需要对这种商品加一个权重或者把这种商品完全去掉也行。</p><p>再有，对于一些通用的东西，比如买书的时候的工具书，如现代汉语词典，新华字典神马的，通用性太强了，推荐也没什么必要了。</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>  　　在非社交网络的网站中，内容内在的联系是很重要的推荐原则，它比基于相似用户的推荐原则更加有效。比如在购书网站上，当你看一本书的时候，推荐引擎会给你推荐相关的书籍，这个推荐的重要性远远超过了网站首页对该用户的综合推荐。可以看到，在这种情况下，Item  CF 的推荐成为了引导用户浏览的重要手段。同时 Item CF  便于为推荐做出解释，在一个非社交网络的网站中，给某个用户推荐一本书，同时给出的解释是某某和你有相似兴趣的人也看了这本书，这很难让用户信服，因为用户可能根本不认识那个人；但如果解释说是因为这本书和你以前看的某本书相似，用户可能就觉得合理而采纳了此推荐。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre>      </td>      <td class="code">        <pre><span class="line">python2.7</span><br><span class="line"># -*- coding=utf-8 -*-</span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line">import sys</span><br><span class="line">from texttable import Texttable</span><br><span class="line"></span><br><span class="line">#   使用 |A&amp;B|/sqrt(|A || B |)计算余弦距离</span><br><span class="line"></span><br><span class="line">def calcCosDistSpe(user1,user2):</span><br><span class="line">    avg_x=0.0</span><br><span class="line">    avg_y=0.0</span><br><span class="line">    for key in user1:</span><br><span class="line">        avg_x+=key[1]</span><br><span class="line">    avg_x=avg_x/len(user1)</span><br><span class="line"></span><br><span class="line">    for key in user2:</span><br><span class="line">        avg_y+=key[1]</span><br><span class="line">    avg_y=avg_y/len(user2)</span><br><span class="line"></span><br><span class="line">    u1_u2=0.0</span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[1] &gt; avg_x and key2[1]&gt;avg_y and key1[0]==key2[0]:</span><br><span class="line">                u1_u2+=1</span><br><span class="line">    u1u2=len(user1)*len(user2)*1.0</span><br><span class="line">    sx_sy=u1_u2/math.sqrt(u1u2)</span><br><span class="line">    return sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   计算余弦距离</span><br><span class="line"></span><br><span class="line">def calcCosDist(user1,user2):</span><br><span class="line">    sum_x=0.0</span><br><span class="line">    sum_y=0.0</span><br><span class="line">    sum_xy=0.0</span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[0]==key2[0] :</span><br><span class="line">                sum_xy+=key1[1]*key2[1]</span><br><span class="line">                sum_y+=key2[1]*key2[1]</span><br><span class="line">                sum_x+=key1[1]*key1[1]</span><br><span class="line"></span><br><span class="line">    if sum_xy == 0.0 :</span><br><span class="line">        return 0</span><br><span class="line">    sx_sy=math.sqrt(sum_x*sum_y) </span><br><span class="line">    return sum_xy/sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   相似余弦距离</span><br><span class="line"></span><br><span class="line">def calcSimlaryCosDist(user1,user2):</span><br><span class="line">    sum_x=0.0</span><br><span class="line">    sum_y=0.0</span><br><span class="line">    sum_xy=0.0</span><br><span class="line">    avg_x=0.0</span><br><span class="line">    avg_y=0.0</span><br><span class="line">    for key in user1:</span><br><span class="line">        avg_x+=key[1]</span><br><span class="line">    avg_x=avg_x/len(user1)</span><br><span class="line"></span><br><span class="line">    for key in user2:</span><br><span class="line">        avg_y+=key[1]</span><br><span class="line">    avg_y=avg_y/len(user2)</span><br><span class="line"></span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[0]==key2[0] :</span><br><span class="line">                sum_xy+=(key1[1]-avg_x)*(key2[1]-avg_y)</span><br><span class="line">                sum_y+=(key2[1]-avg_y)*(key2[1]-avg_y)</span><br><span class="line">        sum_x+=(key1[1]-avg_x)*(key1[1]-avg_x)</span><br><span class="line"></span><br><span class="line">    if sum_xy == 0.0 :</span><br><span class="line">        return 0</span><br><span class="line">    sx_sy=math.sqrt(sum_x*sum_y) </span><br><span class="line">    return sum_xy/sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   读取文件</span><br><span class="line"></span><br><span class="line">def readFile(file_name):</span><br><span class="line">    contents_lines=[]</span><br><span class="line">    f=open(file_name,&quot;r&quot;)</span><br><span class="line">    contents_lines=f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    return contents_lines</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   解压rating信息，格式：用户id\t硬盘id\t用户rating\t时间</span><br><span class="line">#   输入：数据集合</span><br><span class="line">#   输出:已经解压的排名信息</span><br><span class="line">#</span><br><span class="line">def getRatingInformation(ratings):</span><br><span class="line">    rates=[]</span><br><span class="line">    for line in ratings:</span><br><span class="line">        rate=line.split(&quot;\t&quot;)</span><br><span class="line">        rates.append([int(rate[0]),int(rate[1]),int(rate[2])])</span><br><span class="line">    return rates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   生成用户评分的数据结构</span><br><span class="line">#   </span><br><span class="line">#   输入:所以数据 [[2,1,5],[2,4,2]...]</span><br><span class="line">#   输出:1.用户打分字典 2.电影字典</span><br><span class="line">#   使用字典，key是用户id，value是用户对电影的评价，</span><br><span class="line">#   rate_dic[2]=[(1,5),(4,2)].... 表示用户2对电影1的评分是5，对电影4的评分是2</span><br><span class="line"></span><br><span class="line">def createUserRankDic(rates):</span><br><span class="line">    user_rate_dic=&#123;&#125;</span><br><span class="line">    item_to_user=&#123;&#125;</span><br><span class="line">    for i in rates:</span><br><span class="line">        user_rank=(i[1],i[2])</span><br><span class="line">        if i[0] in user_rate_dic:</span><br><span class="line">            user_rate_dic[i[0]].append(user_rank)</span><br><span class="line">        else:</span><br><span class="line">            user_rate_dic[i[0]]=[user_rank]</span><br><span class="line"></span><br><span class="line">        if i[1] in item_to_user:</span><br><span class="line">            item_to_user[i[1]].append(i[0])</span><br><span class="line">        else:</span><br><span class="line">            item_to_user[i[1]]=[i[0]]</span><br><span class="line"></span><br><span class="line">    return user_rate_dic,item_to_user</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   计算与指定用户最相近的邻居</span><br><span class="line">#   输入:指定用户ID，所以用户数据，所以物品数据</span><br><span class="line">#   输出:与指定用户最相邻的邻居列表</span><br><span class="line">#</span><br><span class="line">def calcNearestNeighbor(userid,users_dic,item_dic):</span><br><span class="line">    neighbors=[]</span><br><span class="line">    #neighbors.append(userid)</span><br><span class="line">    for item in users_dic[userid]:</span><br><span class="line">        for neighbor in item_dic[item[0]]:</span><br><span class="line">            if neighbor != userid and neighbor not in neighbors: </span><br><span class="line">                neighbors.append(neighbor)</span><br><span class="line"></span><br><span class="line">    neighbors_dist=[]</span><br><span class="line">    for neighbor in neighbors:</span><br><span class="line">        dist=calcSimlaryCosDist(users_dic[userid],users_dic[neighbor])  #calcSimlaryCosDist  calcCosDist calcCosDistSpe</span><br><span class="line">        neighbors_dist.append([dist,neighbor])</span><br><span class="line">    neighbors_dist.sort(reverse=True)</span><br><span class="line">    #print neighbors_dist</span><br><span class="line">    return  neighbors_dist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   使用UserFC进行推荐</span><br><span class="line">#   输入：文件名,用户ID,邻居数量</span><br><span class="line">#   输出：推荐的电影ID,输入用户的电影列表,电影对应用户的反序表，邻居列表</span><br><span class="line">#</span><br><span class="line">def recommendByUserFC(file_name,userid,k=5):</span><br><span class="line"></span><br><span class="line">    #读取文件数据</span><br><span class="line">    test_contents=readFile(file_name)</span><br><span class="line"></span><br><span class="line">    #文件数据格式化成二维数组 List[[用户id,电影id,电影评分]...] </span><br><span class="line">    test_rates=getRatingInformation(test_contents)</span><br><span class="line"></span><br><span class="line">    #格式化成字典数据 </span><br><span class="line">    #    1.用户字典：dic[用户id]=[(电影id,电影评分)...]</span><br><span class="line">    #    2.电影字典：dic[电影id]=[用户id1,用户id2...]</span><br><span class="line">    test_dic,test_item_to_user=createUserRankDic(test_rates)</span><br><span class="line"></span><br><span class="line">    #寻找邻居</span><br><span class="line">    neighbors=calcNearestNeighbor(userid,test_dic,test_item_to_user)[:k]</span><br><span class="line"></span><br><span class="line">    recommend_dic=&#123;&#125;</span><br><span class="line">    for neighbor in neighbors:</span><br><span class="line">        neighbor_user_id=neighbor[1]</span><br><span class="line">        movies=test_dic[neighbor_user_id]</span><br><span class="line">        for movie in movies:</span><br><span class="line">            #print movie</span><br><span class="line">            if movie[0] not in recommend_dic:</span><br><span class="line">                recommend_dic[movie[0]]=neighbor[0]</span><br><span class="line">            else:</span><br><span class="line">                recommend_dic[movie[0]]+=neighbor[0]</span><br><span class="line">    #print len(recommend_dic)</span><br><span class="line"></span><br><span class="line">    #建立推荐列表</span><br><span class="line">    recommend_list=[]</span><br><span class="line">    for key in recommend_dic:</span><br><span class="line">        #print key</span><br><span class="line">        recommend_list.append([recommend_dic[key],key])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    recommend_list.sort(reverse=True)</span><br><span class="line">    #print recommend_list</span><br><span class="line">    user_movies = [ i[0] for i in test_dic[userid]]</span><br><span class="line"></span><br><span class="line">    return [i[1] for i in recommend_list],user_movies,test_item_to_user,neighbors</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   获取电影的列表</span><br><span class="line"></span><br><span class="line">def getMoviesList(file_name):</span><br><span class="line">    #print sys.getdefaultencoding()</span><br><span class="line">    movies_contents=readFile(file_name)</span><br><span class="line">    movies_info=&#123;&#125;</span><br><span class="line">    for movie in movies_contents:</span><br><span class="line">        movie_info=movie.split(&quot;|&quot;)</span><br><span class="line">        movies_info[int(movie_info[0])]=movie_info[1:]</span><br><span class="line">    return movies_info</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#主程序</span><br><span class="line">#输入 ： 测试数据集合</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    reload(sys)</span><br><span class="line">    sys.setdefaultencoding(&apos;utf-8&apos;)</span><br><span class="line">    movies=getMoviesList(&quot;/Users/wuyinghao/Downloads/ml-100k/u.item&quot;)</span><br><span class="line">    recommend_list,user_movie,items_movie,neighbors=recommendByUserFC(&quot;/Users/wuyinghao/Downloads/ml-100k/u.data&quot;,179,80)</span><br><span class="line">    neighbors_id=[ i[1] for i in neighbors]</span><br><span class="line">    table = Texttable()</span><br><span class="line">    table.set_deco(Texttable.HEADER)</span><br><span class="line">    table.set_cols_dtype([&apos;t&apos;,  # text </span><br><span class="line">                          &apos;t&apos;,  # float (decimal)</span><br><span class="line">                          &apos;t&apos;]) # automatic</span><br><span class="line">    table.set_cols_align([&quot;l&quot;, &quot;l&quot;, &quot;l&quot;])</span><br><span class="line">    rows=[]</span><br><span class="line">    rows.append([u&quot;movie name&quot;,u&quot;release&quot;, u&quot;from userid&quot;])</span><br><span class="line">    for movie_id in recommend_list[:20]:</span><br><span class="line">        from_user=[]</span><br><span class="line">        for user_id in items_movie[movie_id]:</span><br><span class="line">            if user_id in neighbors_id:</span><br><span class="line">                from_user.append(user_id)</span><br><span class="line">        rows.append([movies[movie_id][0],movies[movie_id][1],&quot;&quot;])</span><br><span class="line">    table.add_rows(rows)</span><br><span class="line">    print table.draw()</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre>      </td>      <td class="code">        <pre><span class="line">结果</span><br><span class="line">movie name                release     </span><br><span class="line">=======================================================</span><br><span class="line">Contact (1997)                11-Jul-1997               </span><br><span class="line">Scream (1996)                 20-Dec-1996               </span><br><span class="line">Liar Liar (1997)              21-Mar-1997               </span><br><span class="line">Saint, The (1997)             14-Mar-1997               </span><br><span class="line">English Patient, The (1996)   15-Nov-1996               </span><br><span class="line">Titanic (1997)                01-Jan-1997               </span><br><span class="line">Air Force One (1997)          01-Jan-1997               </span><br><span class="line">Star Wars (1977)              01-Jan-1977               </span><br><span class="line">Conspiracy Theory (1997)      08-Aug-1997               </span><br><span class="line">Toy Story (1995)              01-Jan-1995               </span><br><span class="line">Fargo (1996)                  14-Feb-1997</span><br></pre>      </td>    </tr>  </table></figure><p>数据集： <a href="http://files.grouplens.org/datasets/movielens/" rel="external nofollow noopener noreferrer" target="_blank">http://files.grouplens.org/datasets/movielens/</a></p><p>下载ml-100k.zip即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;协同过滤算法:&lt;a href=&quot;https://blog.csdn.net/DanyHgc/article/details/78910379&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;参考&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/39c919dcb1e7359106750713718e02a4.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://javastar.club/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>cmd快捷键</title>
    <link href="http://javastar.club/archives/d63050d8.html"/>
    <id>http://javastar.club/archives/d63050d8.html</id>
    <published>2019-08-10T02:58:29.000Z</published>
    <updated>2019-08-10T03:01:44.313Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/starstarb/clouding/raw/master/picture/5.jpg" alt></p><a id="more"></a><p>CMD命令：开始－&gt;运行－&gt;键入cmd或command（在命令行里可以看到系统版本、文件系统版本）<br>chcp  修改默认字符集<br>chcp 936默认中文<br>chcp 65001</p><ol>  <li>appwiz.cpl：程序和功能 </li>  <li>calc：启动计算器 </li></ol><ol start="5">  <li>    <p>chkdsk.exe：Chkdsk磁盘检查（管理员身份运行命令提示符） </p>  </li>  <li>    <p>cleanmgr: 打开磁盘清理工具 </p>  </li></ol><ol start="9">  <li>    <p>cmd.exe：CMD命令提示符 </p>  </li>  <li>    <p>自动关机命令<br>　 Shutdown -s -t 600：表示600秒后自动关机<br>　 shutdown -a ：可取消定时关机<br>　      Shutdown -r -t 600：表示600秒后自动重启      　</p>  </li>  <li>    <p>CompMgmtLauncher：计算机管理 </p>  </li>  <li>    <p>compmgmt.msc：计算机管理 </p>  </li>  <li>    <p>credwiz：备份或还原储存的用户名和密码 </p>  </li>  <li>    <p>control：控制面版 </p>  </li>  <li>    <p>dcomcnfg：打开系统组件服务 </p>  </li>  <li>    <p>devmgmt.msc：设备管理器 </p>  </li>  <li>    <p>desk.cpl：屏幕分辨率 </p>  </li>  <li>    <p>dfrgui：优化驱动器 Windows 7→dfrg.msc：磁盘碎片整理程序 </p>  </li>  <li>    <p>dialer：电话拨号程序 </p>  </li>  <li>    <p>diskmgmt.msc：磁盘管理 </p>  </li>  <li>    <p>dvdplay：DVD播放器 </p>  </li>  <li>    <p>dxdiag：检查DirectX信息 </p>  </li>  <li>    <p>eudcedit：造字程序 </p>  </li>  <li>    <p>eventvwr：事件查看器 </p>  </li>  <li>    <p>explorer：打开资源管理器 </p>  </li>  <li>    <p>Firewall.cpl：Windows防火墙 </p>  </li>  <li>    <p>fsmgmt.msc：共享文件夹管理器 </p>  </li>  <li>    <p>gpedit.msc：组策略 </p>  </li>  <li>    <p>hdwwiz.cpl：设备管理器 </p>  </li>  <li>    <p>inetcpl.cpl：Internet属性 </p>  </li>  <li>    <p>intl.cpl：区域 </p>  </li>  <li>    <p>iexpress：木马捆绑工具，系统自带 </p>  </li>  <li>    <p>joy.cpl：游戏控制器 </p>  </li>  <li>    <p>logoff：注销命令 </p>  </li>  <li>    <p>lusrmgr.msc：本地用户和组 </p>  </li>  <li>    <p>lpksetup：语言包安装/删除向导，安装向导会提示下载语言包 </p>  </li>  <li>    <p>lusrmgr.msc：本机用户和组 </p>  </li>  <li>    <p>main.cpl：鼠标属性 </p>  </li>  <li>    <p>mmsys.cpl：声音 </p>  </li>  <li>    <p>mem.exe：显示内存使用情况（如果直接运行无效，可以先管理员身份运行命令提示符，在命令提示符里输入mem.exe&gt;d:a.txt      即可打开d盘查看a.txt，里面的就是内存使用情况了。当然什么盘什么文件名可自己决定。） </p>  </li></ol><ol start="47">  <li>    <p>mmc：打开控制台 </p>  </li>  <li>    <p>mobsync：同步命令 </p>    <ol start="50">      <li>Msconfig.exe：系统配置实用程序 </li>    </ol>  </li>  <li>    <p>msdt：微软支持诊断工具 </p>  </li>  <li>    <p>msinfo32：系统信息 </p>  </li>  <li>    <p>mspaint：画图 </p>  </li>  <li>    <p>Msra：Windows远程协助 </p>  </li>  <li>    <p>mstsc：远程桌面连接 </p>  </li>  <li>    <p>NAPCLCFG.MSC：客户端配置 </p>  </li>  <li>    <p>ncpa.cpl：网络连接 </p>  </li>  <li>    <p>narrator：屏幕“讲述人” </p>  </li>  <li>    <p>Netplwiz：高级用户帐户控制面板，设置登陆安全相关的选项 </p>  </li>  <li>    <p>netstat : an(TC)命令检查接口 </p>  </li>  <li>    <p>notepad：打开记事本 </p>  </li>  <li>    <p>Nslookup：IP地址侦测器 </p>  </li>  <li>    <p>odbcad32：ODBC数据源管理器 </p>  </li>  <li>    <p>OptionalFeatures：打开“打开或关闭Windows功能”对话框 </p>  </li></ol><ol start="65">  <li>osk：打开屏幕键盘 </li>  <li>perfmon.msc：计算机性能监测器 </li>  <li>perfmon：计算机性能监测器 </li>  <li>PowerShell：提供强大远程处理能力 </li>  <li>printmanagement.msc：打印管理 </li>  <li>powercfg.cpl：电源选项 </li>  <li>psr：问题步骤记录器 </li>  <li>Rasphone：网络连接 </li>  <li>Recdisc：创建系统修复光盘 </li>  <li>Resmon：资源监视器 </li>  <li>Rstrui：系统还原 </li>  <li>regedit.exe：注册表 </li>  <li>regedt32：注册表编辑器 </li>  <li>rsop.msc：组策略结果集 </li>  <li>sdclt：备份状态与配置，就是查看系统是否已备份 </li>  <li>secpol.msc：本地安全策略 </li>  <li>services.msc：本地服务设置 </li>  <li>sfc /scannow：扫描错误并复原/windows文件保护 </li>  <li>sfc.exe：系统文件检查器 </li>  <li>shrpubw：创建共享文件夹 </li>  <li>sigverif：文件签名验证程序 </li>  <li>slui：Windows激活，查看系统激活信息 </li>  <li>slmgr.vbs -dlv ：显示详细的许可证信息<br>　 slmgr.vbs -dli ：显示许可证信息<br>　 slmgr.vbs    -xpr ：当前许可证截止日期<br>　 slmgr.vbs -dti ：显示安装ID 以进行脱机激<br>　 slmgr.vbs -ipk    ：(Product Key)安装产品密钥<br>　 slmgr.vbs -ato ：激活Windows<br>　 slmgr.vbs -cpky    ：从注册表中清除产品密钥（防止泄露引起的攻击）<br>　 slmgr.vbs -ilc ：(License file)安装许可证<br>　    slmgr.vbs -upk ：卸载产品密钥<br>　 slmgr.vbs -skms ：(name[ort] )批量授权 </li>  <li>snippingtool：截图工具，支持无规则截图 </li>  <li>soundrecorder：录音机，没有录音时间的限制 </li>  <li>StikyNot：便笺 </li>  <li>sysdm.cpl：系统属性 </li>  <li>sysedit：系统配置编辑器 </li>  <li>syskey：系统加密，一旦加密就不能解开，保护系统的双重密码 </li>  <li>taskmgr：任务管理器（旧版） </li>  <li>TM任务管理器（新版） </li>  <li>taskschd.msc：任务计划程序 </li>  <li>timedate.cpl：日期和时间 </li>  <li>UserAccountControlSettings用户账户控制设置 </li>  <li>utilman：辅助工具管理器 </li>  <li>wf.msc：高级安全Windows防火墙 </li>  <li>WFS：Windows传真和扫描 </li>  <li>wiaacmgr：扫描仪和照相机向导 </li>  <li>winver：关于Windows <ol start="104">      <li>wmimgmt.msc：打开windows管理体系结构(WMI) </li>      <li>write：写字板 </li>    </ol>  </li>  <li>wscui.cpl：操作中心 </li>  <li>wscript：windows脚本宿主设置 </li>  <li>wuapp：Windows更新</li></ol><p>　　1. gpedit.msc—–组策略</p><p>　　2. sndrec32——-录音机</p><p>　　3. Nslookup——-IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows  NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。</p><p>　　4. explorer——-打开资源管理器 </p><p>　　5. logoff———注销命令</p><p>　　6. shutdown——-60秒倒计时关机命令</p><p>　　7. lusrmgr.msc—-本机用户和组</p><p>　　8. services.msc—本地服务设置</p><p>　　9. oobe/msoobe /a—-检查XP是否激活</p><p>　　10. notepad——–打开记事本 </p><p>　　11. cleanmgr——-垃圾整理</p><p>　　12. net start messenger—-开始信使服务</p><p>　　13. compmgmt.msc—计算机管理</p><p>　　14. net stop messenger—–停止信使服务</p><p>　　15. conf———–启动netmeeting</p><p>　　16. dvdplay——–DVD播放器</p><p>　　17. charmap——–启动字符映射表</p><p>　　18. diskmgmt.msc—磁盘管理实用程序</p><p>　　19. calc———–启动计算器</p><p>　　20. dfrg.msc——-磁盘碎片整理程序</p><p>　　21. chkdsk.exe—–Chkdsk磁盘检查</p><p>　　22. devmgmt.msc— 设备管理器 </p><p>　　23. regsvr32 /u *.dll—-停止dll文件运行</p><p>　　24. drwtsn32—— 系统医生</p><p>　　25. rononce -p—-15秒关机</p><p>　　26. dxdiag———检查DirectX信息</p><p>　　27. regedt32——-注册表编辑器 </p><p>　　28. Msconfig.exe—系统配置实用程序</p><p>　　29. rsop.msc——-组策略结果集</p><p>　　30. mem.exe——–显示内存使用情况</p><p>　　31. regedit.exe—-注册表</p><p>　　32. winchat——–XP自带局域网聊天</p><p>　　33. progman——–程序管理器</p><p>　　34. winmsd———系统信息</p><p>　　35. perfmon.msc—-计算机性能监测程序</p><p>　　36. winver———检查Windows版本</p><p>　　37. sfc /scannow—–扫描错误并复原</p><p>　　38. taskmgr—–任务管理器（2000/xp/2003</p><p>　　39. winver———检查Windows版本</p><p>　　40. wmimgmt.msc—-打开windows管理体系结构(WMI)</p><p>　　41. wupdmgr——–windows更新程序</p><p>　　42. wscript——–windows脚本宿主设置</p><p>　　43. write———-写字板</p><p>　　44. winmsd———系统信息</p><p>　　45. wiaacmgr——-扫描仪和照相机向导</p><p>　　46. winchat——–XP自带局域网聊天</p><p>　　47. mem.exe——–显示内存使用情况</p><p>　　48. Msconfig.exe—系统配置实用程序</p><p>　　49. mplayer2——-简易widnows media player</p><p>　　50. mspaint——–画图板</p><p>　　51. mstsc———-远程桌面连接</p><p>　　52. mplayer2——-媒体播放机</p><p>　　53. magnify——–放大镜实用程序</p><p>　　54. mmc————打开控制台</p><p>　　55. mobsync——–同步命令</p><p>　　56. dxdiag———检查DirectX信息</p><p>　　57. iexpress——-木马捆绑工具，系统自带 58. fsmgmt.msc—–共享文件夹管理器</p><p>　　59. utilman——–辅助工具管理器</p><p>　　60. diskmgmt.msc—磁盘管理实用程序</p><p>　　61. dcomcnfg——-打开系统组件服务</p><p>　　62. ddeshare——-打开DDE共享设置</p><p>　　110. osk————打开屏幕键盘 </p><p>　　111. odbcad32——-ODBC数据源管理器</p><p>　　112. oobe/msoobe /a—-检查XP是否激活 114. logoff———注销命令</p><p>　　66. notepad——–打开记事本</p><p>　　67. nslookup——-网络管理的工具向导</p><p>　　68. ntbackup——-系统备份和还原</p><p>　　69. narrator——-屏幕“讲述人”</p><p>　　70. ntmsmgr.msc—-移动存储管理器</p><p>　　71. ntmsoprq.msc—移动存储管理员操作请求</p><p>　　72. netstat -an—-(TC)命令检查接口</p><p>　　73. syncapp——–创建一个公文包</p><p>　　74. sysedit——–系统配置编辑器</p><p>　　75. sigverif——-文件签名验证程序</p><p>　　76. ciadv.msc——索引服务程序</p><p>　　77. shrpubw——–创建共享文件夹</p><p>　　78. secpol.msc—–本地安全策略</p><p>　　79. syskey———系统加密，一旦加密就不能解开，保护windows xp系统的双重密码</p><p>　　80. services.msc—本地服务设置</p><p>　　81. Sndvol32——-音量控制程序</p><p>　　82. sfc.exe——–系统文件检查器</p><p>　　83. sfc /scannow—windows文件保护</p><p>　　84. ciadv.msc——索引服务程序</p><p>　　85. tourstart——xp简介（安装完成后出现的漫游xp程序）</p><p>　　86. taskmgr——–任务管理器</p><p>　　87. eventvwr——-事件查看器</p><p>　　88. eudcedit——-造字程序</p><p>　　89. compmgmt.msc—计算机管理</p><p>　　90. packager——-对象包装程序</p><p>　　91. perfmon.msc—-计算机性能监测程序</p><p>　　92. charmap——–启动字符映射表</p><p>　　93. cliconfg——-SQL SERVER 客户端网络实用程序</p><p>　　94. Clipbrd——–剪贴板查看器</p><p>　　95. conf———–启动netmeeting</p><p>　　96. certmgr.msc—-证书管理实用程序</p><p>　　97. regsvr32 /u *.dll—-停止dll文件运行</p><p>　　98. regsvr32 /u zipfldr.dll——取消ZIP支持</p><p>　　99. cmd.exe——–CMD命令提示符</p><p>　　100. chkdsk.exe—–Chkdsk磁盘检查</p><p>1.磁盘操作，<br>　　fdisk 隐含 参数 /mbr 重建主引导记录fdisk /mbr 重建主引导记录<br>　　fdisk  在DOS7.0以后增加了/cmbr参数，可在挂接多个物理硬盘时，重建排序在后面的硬盘的主引导记录，例如：fdisk /cmbr  2，可重写第二个硬盘的主引导记录。（在使用时要十分小心，避免把好的硬盘引导记录损坏）<br>　　format 参数： /q 快速格式化 /u 不可恢复  /autotest 不提示 /s 创建 MS-DOS 引导盘 format c: /q /u /autotest<br>2.目录操作<br>　　DIR  [目录名或文件名] [/S][/W][/P][/A] 列出目录 参数: /s 查找子目录/w 只显示文件名 /p 分页/a 显示隐藏文件 DIR  format.exe /s查找该盘的format.exe文件并报告位置<br>　　MD (MKDIR) [目录名] 创建目录 MKDIR  HELLOWORLD 创建HELLOWORLD目录<br>　　CD (CHDIR) [目录名] PS:可以使用相对目录或绝对目录 进入目录 CD AA  进入当前文件夹下的AA目录,cd .. 进入上一个文件夹cd \返回根目录;cd c:\windows 进入c:\windows文件夹<br>　　RD (  RMDIR) [目录名] 删除目录 RD HELLOWORLD 删除HELLOWORLD目录<br>3.文件操作<br>　　删除目录及其文件： rmdir  [目录名或文件名] [/S][/W][/P][/A] 。例 rmdir c:\qqdownload/s  删除C盘的qqdownload目录。<br>　　del [目录名或文件名] [/f][/s][/q] 删除 参数:/f 删除只读文件/s  删除该目录及其下的所有内容 /q 删除前不确认<br>　　del c:\del /s /q 自动删除c盘的del目录。<br>　　copy [源文件或目录]  [目标目录] 复制文件 copy d:\pwin98*.* c:\presetup  将d盘的pwin98的所有文件复制到c盘的presetup下。<br>　　attrib [参数][源文件或目录]  文件属性操作命令，attrib命令可以列出或修改磁盘上文件的属性，文件属性包括文档（A）、只读(R)、隐藏(H)、系统(S)，例如：attrib -h -r  -s io.sys  执行这一命令后，将把DOS系统文件io.sys文件的只读、隐藏、系统属性去掉，这时将可以直接通过dir命令看到io.sys文件。attrib +h +r  +s autoexec.bat将为自动批处理文件增加以上属性。<br>4.内存操作<br>　　debug 调试内存 参数 -w [文件名] 写入二进制文件  -o [地址1] [地址2] 输出内存 -q 退出 exp:o 70 10[return] o 71 01<br>　　[return] 01[return]  q[return] DOS下通过写70h/71h PORT改变BIOS密码在CMOS中存放的对应位置的值,用以清除AWARD BIOS密码.debug  还可以破解硬盘保护卡等,但只可以在纯DOS下用。<br>5.分区操作<br>　　给磁盘分区，一般都会分成四个区，磁盘分区由主分区、扩展分区、逻辑分区组成。<br>　　PQ和Acronis  Disk Director这两个工具都可以在不丢失数据的情况下对分区进行调整大小，以及合并等操作，XP系统的话你用PQ，WIN7系统的话用Acronis  Disk Director  操作基本一样，可以去网上找教程来看看，再不重装系统的情况下都能调整分区大小，但是建议你还是先备份下数据再调整，毕竟对硬盘直接进行的操作有一定的危险性。</p><p>　　net use ipipc$ “ “ /user:” “ 建立IPC空链接</p><p>　　net use ipipc$ “密码” /user:”用户名” 建立IPC非空链接</p><p>　　net use h: ipc$ “密码” /user:”用户名” 直接登陆后映射对方C：到本地为H:</p><p>　　net use h: ipc$ 登陆后映射对方C：到本地为H:</p><p>　　net use ipipc$ /del 删除IPC链接</p><p>　　net use h: /del 删除映射对方到本地的为H:的映射</p><p>　　net user 用户名　密码　/add 建立用户</p><p>　　net user guest /active:yes 激活guest用户</p><p>　　net user 查看有哪些用户</p><p>　　net user 帐户名 查看帐户的属性</p><p>　　net localgroup administrators 用户名 /add 把“用户”添加到管理员中使其具有管理员权限</p><p>　　net start 查看开启了哪些服务</p><p>　　net start 服务名　开启服务；(如:net start telnet， net start schedule)</p><p>　　net stop 服务名 停止某服务</p><p>　　net time 目标ip 查看对方时间</p><p>　　net time 目标ip /set 设置本地计算机时间与“目标IP”主机的时间同步,加上参数/yes可取消确认信息</p><p>　　net view 查看本地局域网内开启了哪些共享</p><p>　　net view ip 查看对方局域网内开启了哪些共享</p><p>　　net config 显示系统网络设置</p><p>　　net logoff 断开连接的共享</p><p>　　net pause 服务名 暂停某服务</p><p>　　net send ip “文本信息” 向对方发信息</p><p>　　net ver 局域网内正在使用的网络连接类型和信息</p><p>　　net share 查看本地开启的共享</p><p>　　net share ipc$ 开启ipc$共享</p><p>　　net share ipc$ /del 删除ipc$共享</p><p>　　net share c$ /del 删除C：共享</p><p>　　net user guest 12345 用guest用户登陆后用将密码改为12345</p><p>　　net password 密码 更改系统登陆密码</p><p>　　netstat -a 查看开启了哪些端口,常用netstat -an</p><p>　　netstat -n 查看端口的网络连接情况，常用netstat -an</p><p>　　netstat -v 查看正在进行的工作</p><p>　　netstat -p 协议名 例：netstat -p tcq/ip 查看某协议使用情况</p><p>　　netstat -s 查看正在使用的所有协议使用情况</p><p>　　nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名</p><p>　　tracert -参数 ip(或计算机名) 跟踪路由（数据包），参数：“-w数字”用于设置超时间隔。</p><p>　　ping ip(或域名) 向对方主机发送默认大小为32字节的数据，参数：“-l[空格]数据包大小”；“-n发送数据次数”；“-t”指一直ping。</p><p>　　ping -t -l 65550 ip 死亡之ping(发送大于64K的文件并一直ping就成了死亡之ping)</p><p>　　ipconfig (winipcfg) 用于windows NT及XP(windows 95  98)查看本地ip地址，ipconfig可用参数“/all”显示全部配置信息</p><p>　　tlist -t 以树行列表显示进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)</p><p>　　kill -F 进程名 加-F参数后强制结束某进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)</p><p>　　del -F 文件名  加-F参数后就可删除只读文件,/AR、/AH、/AS、/AA分别表示删除只读、隐藏、系统、存档文件，/A-R、/A-H、/A-S、/A-A表示删除除只读、隐藏、系统、存档以外的文件。例如“DEL/AR  <em>.</em>”表示删除当前目录下所有只读文件，“DEL/A-S <em>.</em>”表示删除当前目录下除系统文件以外的所有文件</p><p>　　del /S /Q 目录 或用：rmdir /s /Q 目录 /S删除目录及目录下的所有子目录和文件。同时使用参数/Q  可取消删除操作时的系统确认就直接删除。（二个命令作用相同）</p><p>　　move 盘符路径要移动的文件名　存放移动文件的路径移动后文件名 移动文件,用参数/y将取消确认移动目录存在相同文件的提示就直接覆盖</p><p>　　fc one.txt two.txt &gt; 3st.txt 对比二个文件并把不同之处输出到3st.txt文件中，”&gt; “和”&gt;  &gt;” 是重定向命令</p><p>　　at id号 开启已注册的某个计划任务</p><p>　　at /delete 停止所有计划任务，用参数/yes则不需要确认就直接停止</p><p>　　at id号 /delete 停止某个已注册的计划任务</p><p>　　at 查看所有的计划任务</p><p>　　at ip time 程序名(或一个命令) /r 在某时间运行对方某程序并重新启动计算机</p><p>　　finger username @host 查看最近有哪些用户登陆</p><p>　　telnet ip 端口 远和登陆服务器,默认端口为23</p><p>　　open ip 连接到IP（属telnet登陆后的命令）</p><p>　　telnet 在本机上直接键入telnet 将进入本机的telnet</p><p>　　copy 路径文件名1　路径文件名2 /y 复制文件1到指定的目录为文件2，用参数/y就同时取消确认你要改写一份现存目录文件</p><p>　　copy c:srv.exe ipadmin$ 复制本地c:srv.exe到对方的admin下</p><p>　　copy 1st.jpg/b+2st.txt/a 3st.jpg  将2st.txt的内容藏身到1st.jpg中生成3st.jpg新的文件，注：2st.txt文件头要空三排，参数：/b指二进制文件，/a指ASCLL格式文件</p><p>　　copy ipadmin$svv.exe c: 或:copyipadmin$<em>.</em>  复制对方admini$共享下的srv.exe文件（所有文件）至本地C：</p><p>　　xcopy 要复制的文件或目录树　目标地址目录名 复制文件和目录树，用参数/Y将不提示覆盖相同文件</p><p>　　用参数/e才可连目录下的子目录一起复制到目标地址下。</p><p>　　tftp -i 自己IP(用肉机作跳板时这用肉机IP) get server.exec:server.exe  登陆后，将“IP”的server.exe下载到目标主机c:server.exe 参数：-i指以二进制模式传送，如传送exe文件时用，如不加-i  则以ASCII模式（传送文本文件模式）进行传送</p><p>　　tftp -i 对方IP　put c:server.exe 登陆后，上传本地c:server.exe至主机</p><p>　　ftp ip 端口  用于上传文件至服务器或进行文件操作，默认端口为21。bin指用二进制方式传送（可执行文件进）；默认为ASCII格式传送(文本文件时)</p><p>　　route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway  addres，接口地址Interface</p><p>　　arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。arp -a将显示出全部信息</p><p>　　start 程序名或命令 /max 或/min 新开一个新窗口并最大化（最小化）运行某程序或命令</p><p>　　mem 查看cpu使用情况</p><p>　　attrib 文件名(目录名) 查看某文件（目录）的属性</p><p>　　attrib 文件名 -A -R -S -H 或 +A +R +S +H 去掉(添加)某文件的 存档，只读，系统，隐藏 属性；用+则是添加为某属性</p><p>　　dir 查看文件，参数：/Q显示文件及目录属系统哪个用户，/T:C显示文件创建时间，/T:A显示文件上次被访问时间，/T:W上次被修改时间</p><p>　　date /t 、 time /t 使用此参数即“DATE/T”、“TIME/T”将只显示当前日期和时间，而不必输入新日期和时间</p><p>　　set 指定环境变量名称=要指派给变量的字符 设置环境变量</p><p>　　set 显示当前所有的环境变量</p><p>　　set p(或其它字符) 显示出当前以字符p(或其它字符)开头的所有环境变量</p><p>　　pause 暂停批处理程序，并显示出：请按任意键继续….</p><p>　　if 在批处理程序中执行条件处理（更多说明见if命令及变量）</p><p>　　goto 标签 将cmd.exe导向到批处理程序中带标签的行（标签必须单独一行，且以冒号打头，例如：“：start”标签）</p><p>　　call 路径批处理文件名 从批处理程序中调用另一个批处理程序 （更多说明见call /?）</p><p>　　for 对一组文件中的每一个文件执行某个特定命令（更多说明见for命令及变量）</p><p>　　echo on或off 打开或关闭echo，仅用echo不加参数则显示当前echo设置</p><p>　　echo 信息 在屏幕上显示出信息</p><p>　　echo 信息 &gt;&gt; pass.txt 将”信息”保存到pass.txt文件中</p><p>　　findstr “Hello” aa.txt 在aa.txt文件中寻找字符串hello</p><p>　　find 文件名 查找某文件</p><p>　　title 标题名字 更改CMD窗口标题名字</p><p>　　color 颜色值  设置cmd控制台前景和背景颜色；0=黑、1=蓝、2=绿、3=浅绿、4=红、5=紫、6=黄、7=白、8=灰、9=淡蓝、A=淡绿、B=淡浅绿、C=淡红、D=淡紫、E=淡黄、F=亮白</p><p>　　prompt 名称 更改cmd.exe的显示的命令提示符(把C:、D:统一改为：EntSky )</p><p>　　ver 在DOS窗口下显示版本信息 </p><p>　　winver 弹出一个窗口显示版本信息（内存大小、系统版本、补丁版本、计算机名）</p><p>　　format 盘符 /FS:类型 格式化磁盘,类型:FAT、FAT32、NTFS ,例：Format D: /FS:NTFS</p><p>　　md　目录名 创建目录</p><p>　　replace 源文件　要替换文件的目录 替换文件</p><p>　　ren 原文件名　新文件名 重命名文件名</p><p>　　tree 以树形结构显示出目录，用参数-f 将列出第个文件夹中文件名称</p><p>　　type 文件名 显示文本文件的内容</p><p>　　more 文件名 逐屏显示输出文件</p><p>　　doskey 要锁定的命令=字符</p><p>　　doskey 要解锁命令= 为DOS提供的锁定命令(编辑命令行，重新调用win2k命令，并创建宏)。如：锁定dir命令：doskey  dir=entsky (不能用doskey dir=dir)；解锁：doskey dir=</p><p>　　taskmgr 调出任务管理器</p><p>　　chkdsk /F D: 检查磁盘D并显示状态报告；加参数/f并修复磁盘上的错误</p><p>　　tlntadmn telnt服务admn,键入tlntadmn选择3，再选择8,就可以更改telnet服务默认端口23为其它任何端口</p><p>　　exit 退出cmd.exe程序或目前，用参数/B则是退出当前批处理脚本而不是cmd.exe</p><p>　　path 路径可执行文件的文件名 为可执行文件设置一个路径。</p><p>　　cmd 启动一个win2K命令解释窗口。参数：/eff、/en 关闭、开启命令扩展；更我详细说明见cmd /?</p><p>　　regedit /s 注册表文件名 导入注册表；参数/S指安静模式导入，无任何提示；</p><p>　　regedit /e 注册表文件名 导出注册表</p><p>　　cacls 文件名　参数 显示或修改文件访问控制列表（ACL）——针对NTFS格式时。参数：/D 用户名:设定拒绝某用户访问；/P 用户名:perm  替换指定用户的访问权限；/G 用户名:perm 赋予指定用户访问权限；Perm 可以是: N 无，R 读取， W 写入， C 更改(写入)，F  完全控制；例：cacls D: est.txt /D pub 设定d: est.txt拒绝pub用户访问。</p><p>　　cacls 文件名 查看文件的访问用户权限列表</p><p>　　REM 文本内容 在批处理文件中添加注解</p><p>　　netsh 查看或更改本地网络配置情况</p><p>　　</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/picture/5.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="cmd" scheme="http://javastar.club/categories/cmd/"/>
    
    
      <category term="cmd" scheme="http://javastar.club/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>French</title>
    <link href="http://javastar.club/archives/a8d9cb68.html"/>
    <id>http://javastar.club/archives/a8d9cb68.html</id>
    <published>2019-08-10T02:58:02.000Z</published>
    <updated>2019-08-23T03:26:59.637Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+ewA0SuzhtjyAY/7T+S1UnAvje/1wb7h+72p8VxGqcMWAbmb7QZfsGxtdnrKk9jfIWrQWCWhQeLQuJ1D7mC7Ac2dIlDNPwI5LajPlanXvmmf3LuplnSlbo4Xg8+7ya9fqGAzCm/cjgEwDPF2NpLCaJFaAiBMAoX5nHtR2YevJ2ya5r3ABW2MfMBG/7VlUtIwmHac8QvNVFGBieIABcQZAFzUlczR+uHZdyIgVxo/o64jwHvlH+pxoJApKWtzYerHobG0LeLcumU4/8bE88OKSUyx2mEKZJ7GCfZvHkai8IAXq376Lsf79QrTH7/fS1RdVIyKtdfiGZPw==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="French" scheme="http://javastar.club/categories/French/"/>
    
    
      <category term="French" scheme="http://javastar.club/tags/French/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客记录</title>
    <link href="http://javastar.club/archives/5910dd1d.html"/>
    <id>http://javastar.club/archives/5910dd1d.html</id>
    <published>2019-08-10T01:27:16.000Z</published>
    <updated>2019-08-23T03:38:19.221Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="hexo" scheme="http://javastar.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://javastar.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>日语入门手册0</title>
    <link href="http://javastar.club/archives/37fae12e.html"/>
    <id>http://javastar.club/archives/37fae12e.html</id>
    <published>2019-08-09T13:00:13.000Z</published>
    <updated>2019-08-10T07:24:14.773Z</updated>
    
    <content type="html"><![CDATA[<p>  我是个俗气至顶的人，见山是山，见海是海，见花便是花。唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒。你无需开口，我和天地万物便通通奔向你。</p><a id="more"></a><h3 id="五十音清音发音学习笔记"><a href="#五十音清音发音学习笔记" class="headerlink" title="五十音清音发音学习笔记"></a>五十音清音发音学习笔记</h3><p>あア a 类似汉语“啊”，在日语中开口最大，双唇自然张开，口形比汉语“啊”小，声音洪亮<br>いイ i  类似汉语“衣”，比发“衣”时双唇略松，口角咧开较小，声音较尖<br>うウ u  类似汉语“乌”，双唇自然微启，嘴角微拉，双唇不突出，舌面较平，声音较弱。双唇不要象发“乌”那样向前突出，部分老师要求发音时后槽牙接触，以把握口型位置。<br>えエ  e 类似汉语“唉”，双唇稍向左右咧开，舌面放平，声音紧张<br>おオ o  类似汉语“欧”，嘴唇合拢略椭圆形，口型大小处于「あ」和「う」之间，舌面较平，声音圆浑<br>かカ ka 类似拼音“ka”<br>きキ ki  类似拼音“ki”<br>くク ku 类似拼音“ku”，嘴唇平的，双唇不突出。<br>けケ ke  类似英语音标“ke”，也就是单词care/ker/的前半部分<br>こコ ko 类似汉语“扣”，<br>さサ sa 类似汉语“仨”<br>しシshi  类似汉语“西”，注意是发音是“xi”。打字的时候打si也能打出来<br>すス su  发音难以描述，不能直接发成“苏”，像是用“丝”的口型发“苏”的样子。也有些时候直接读“丝”。只发了s的音，网上查到的说法是元音u被清化（即只保留元音的口形和舌位而不发声）<br>せセ  se 类似英语音标“se”，self/self/的前半部分<br>そソ so 类似英语单词“so”<br>たタ ta 类似汉语“他”<br>ちチchi  类似汉语“七”，注意是发音是“qi”。打字的时候打ti也能打出来<br>つツtsu  发音难以描述，像是用“呲”的口型发“粗”的样子。也有建议直接念“呲”的。大写的时候发音，小写的时候是促音不发音。同理打字可以打tu<br>てテ te  类似汉语“胎”<br>とト to 类似汉语“偷”<br>なナ na 类似汉语“那”，な行没什么特殊的，就是n和あ行拼在一起<br>にニ ni  类似汉语“你”<br>ぬヌ nu 类似汉语“奴”<br>ねネ ne 类似汉语“奶”<br>のノ no 类似英语单词“no”<br>はハ ha  类似汉语“哈”，两种读音，平时读ha，助词的时候读wa<br>ひヒ hi 类似英语单词“he”。He is a boy那个he。<br>ふフ fu  类似汉语“夫”，但是不咬唇，上齿接近下唇但有缝隙，不震动声带，只是气流摩擦。罗马音hu、fu都可以<br>へヘ he  类似汉语“嗨”。做助词的时读做e(え)<br>ほホ ho 类似汉语“吼”，类似hold住的ho。<br>まマ ma  类似汉语“马”，ま行没什么特殊的，就是m和あ行拼在一起<br>みミ mi 类似汉语“咪”<br>むム mu 类似汉语“木”<br>めメ me  类似汉语“买”<br>もモ mo 类似汉语“哞”<br>やヤ ya 类似汉语“呀”<br>ゆユ yu 类似英语单词“you”<br>よヨ yo  类似汉语“腰”<br>らラ ra 类似汉语“拉”，ら行r其实是汉语发音里的l，就是l和あ行拼在一起<br>りリ ri 类似汉语“哩”<br>るル ru  类似汉语“撸”<br>れレ re 类似英语音标“le”，let’s go的le<br>ろロ ro 类似汉语“唠”<br>わワ wa  类似汉语“哇”<br>をヲ wo 和おo同音，只做助词，所以不会在单词里出现。<br>んン n 用鼻腔通气发出的声音，不单用，也不出现在词首</p><h3 id="发音："><a href="#发音：" class="headerlink" title="发音："></a>发音：</h3><p><a href="https://jp.hjenglish.com/subject/pronounce_write/" rel="external nofollow noopener noreferrer" target="_blank">https://jp.hjenglish.com/subject/pronounce_write/</a></p><h3 id="记忆："><a href="#记忆：" class="headerlink" title="记忆："></a>记忆：</h3><p><a href="https://www.zhihu.com/question/20318161/answer/67015673" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/20318161/answer/67015673</a></p><p>电子版教材：</p><p>链接：<a href="https://pan.baidu.com/s/1NvpcbYvQWeghwvv_T7X8rg" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1NvpcbYvQWeghwvv_T7X8rg</a><br>提取码：0gx4<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
  我是个俗气至顶的人，见山是山，见海是海，见花便是花。唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒。你无需开口，我和天地万物便通通奔向你。
&lt;/p&gt;
    
    </summary>
    
      <category term="language" scheme="http://javastar.club/categories/language/"/>
    
    
      <category term="日语" scheme="http://javastar.club/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>第六次日记</title>
    <link href="http://javastar.club/archives/f7899fcc.html"/>
    <id>http://javastar.club/archives/f7899fcc.html</id>
    <published>2019-08-09T12:55:49.000Z</published>
    <updated>2019-08-23T03:18:19.918Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="日记" scheme="http://javastar.club/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="dairy" scheme="http://javastar.club/tags/dairy/"/>
    
  </entry>
  
  <entry>
    <title>哲学</title>
    <link href="http://javastar.club/archives/5da32671.html"/>
    <id>http://javastar.club/archives/5da32671.html</id>
    <published>2019-08-09T12:54:21.000Z</published>
    <updated>2019-08-23T03:18:30.781Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="哲学" scheme="http://javastar.club/categories/%E5%93%B2%E5%AD%A6/"/>
    
    
      <category term="哲学" scheme="http://javastar.club/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客备份</title>
    <link href="http://javastar.club/archives/b5d2c57b.html"/>
    <id>http://javastar.club/archives/b5d2c57b.html</id>
    <published>2019-08-08T07:10:35.000Z</published>
    <updated>2019-08-10T02:57:08.525Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客备份指南<br><img src="https://github.com/starstarb/clouding/raw/master/picture/4.jpg" alt></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  由于之前忘记备份Hexo博客的markdown文件，在重做系统时候还忘记备份博客了，导致现在不得不重新从网页上扒下来之前的文章重新写一遍，十分耗费精力。因此在网上找了下如何备份Hexo博客，在此记录下。</p><p>  目前假设Git和Github环境已经配置好了，如果没有配置好详见「Ubuntu16.04下Github配置」。<br>Git相关操作请参考廖雪峰的Git教程。</p><h3 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h3><p>目前假设本地Hexo博客已经初始化。</p><p>###创建新分支</p><p>在Github.io上建立博客时已经开了一个新仓库了，如果再开另一个仓库存放源代码有点浪费，因此采用建立新分支的方法备份博客。</p><p>虽然理论上什么时候创建新分支来备份都可以，但是还是建议在建立博客的时候就创建备份分支。（然而我中途才想起来-.-）</p><p>  不过在建立新分支前请确保仓库内已有master分支（Hexo本地建站后第一次上传时会自动生成），否则后期再添加master分支比较麻烦（请自行搜索git命令）。</p><p>本地Git建立新分支命令如下：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">$ git checkout -b BRANCHNAME</span><br></pre>      </td>    </tr>  </table></figure><p>BRANCHNAME是自定义的新分支的名字，建议起为hexo。<br>建立.gitignore</p><p>建立.gitignore文件将不需要备份的文件屏蔽。个人的.gitignore文件如下：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre>      </td>      <td class="code">        <pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre>      </td>    </tr>  </table></figure><p>在Github上备份</p><p>通过如下命令将本地文件备份到Github上。</p><p>假设目前在hexo博客的根目录下。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;Backup&quot;</span><br><span class="line">$ git push origin hexo</span><br></pre>      </td>    </tr>  </table></figure><p>这样就备份完博客了且在Github上能看到两个分支(master和hexo)。<br>设置默认分支</p><p>  在Github上你的github.io仓库中设置默认分支为hexo。这样有助于之后恢复博客。master分支时默认的博客静态页面分支，在之后恢复博客的时候并不需要。<br>个人备份习惯</p><p>个人而言习惯于先备份文件再生成博客。即先执行<strong>git add .,git commit -m “Backup”,git push    origin hexo</strong>将博客备份完成，然后执行<strong>hexo g -d</strong>发布博客。<br>恢复博客</p><p>目前假设本地Hexo博客基础环境已经搭好。<br>克隆项目到本地</p><p>输入下列命令克隆博客必须文件(hexo分支)：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ git clone https://github.com/yourgithubname/yourgithubname.github.io</span><br></pre>      </td>    </tr>  </table></figure><h3 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h3><p>在克隆的那个文件夹下输入如下命令恢复博客：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ npm install hexo-cli</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git</span><br></pre>      </td>    </tr>  </table></figure><p>在此不需要执行hexo init这条指令，因为不是从零搭建起新博客。</p><p>完成喵～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo博客备份指南&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/picture/4.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://javastar.club/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>python数据分析常用库</title>
    <link href="http://javastar.club/archives/460b5ed.html"/>
    <id>http://javastar.club/archives/460b5ed.html</id>
    <published>2019-08-08T07:09:19.000Z</published>
    <updated>2019-08-16T03:11:25.263Z</updated>
    
    <content type="html"><![CDATA[<p>sklearn/surprise<br><img src="https://github.com/starstarb/clouding/raw/master/head/f2deaa2d8bcb907b31c759089e262f09.jpg" alt></p><a id="more"></a><p>网上有很多关于sklearn的学习教程，大部分都是简单的讲清楚某一方面，其实最好的教程就是官方文档。</p><p>　　官方文档地址：<a href="https://scikit-learn.org/stable/" rel="external nofollow noopener noreferrer" target="_blank">https://scikit-learn.org/stable/</a></p><p>  （可是官方文档非常详细，同时许多人对官方文档的理解和结构上都不能很好地把握，我也打算好好学习sklearn，这可能是机器学习的神器），下面先简单介绍一下sklearn。</p><p>  　　自2007年发布以来，scikit-learn已经成为Python重要的机器学习库了，scikit-learn简称sklearn，支持包括分类，回归，降维和聚类四大机器学习算法。还包括了特征提取，数据处理和模型评估者三大模块。</p><p>　　sklearn是Scipy的扩展，建立在Numpy和matplolib库的基础上。利用这几大模块的优势，可以大大的提高机器学习的效率。</p><p>  　　sklearn拥有着完善的文档，上手容易，具有着丰富的API，在学术界颇受欢迎。sklearn已经封装了大量的机器学习算法，包括LIBSVM和LIBINEAR。同时sklearn内置了大量数据集，节省了获取和整理数据集的时间。</p><h4 id="安装surprise库报错"><a href="#安装surprise库报错" class="headerlink" title="安装surprise库报错"></a>安装surprise库报错</h4><p>Surprise是一个开源推荐系统，包含了常用的矩阵分解算法、包括SVD、SVD++，NMF等等，GitHub地址：<a href="https://github.com/NicolasHug/Surprise" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/NicolasHug/Surprise</a><br>参考官方安装方式<br>其中缺少Microsoft  Visual C++14，因此需要安装:<br><strong>安装地址</strong><br>链接：<a href="https://pan.baidu.com/s/1F2vTVhU8SQbMEoSBCk5jPw" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1F2vTVhU8SQbMEoSBCk5jPw</a><br>提取码：re39<br>我的windows10安装surprise报错如下：<br><img src="https://github.com/starstarb/clouding/raw/master/python/surprise%E6%8A%A5%E9%94%99.png" alt><br><strong>import    surprise库不报错，但是没有相关SVD    Dataset库</strong><br>cl.exe不存在环境路径配置好后，依然不行，打开cl.exe，报mspdb140.dll不存在，未解决。</p><h3 id="surprise库官方文档分析（一）"><a href="#surprise库官方文档分析（一）" class="headerlink" title="surprise库官方文档分析（一）"></a>surprise库官方文档分析（一）</h3><p><strong>一：入门</strong></p><p>　1、基本用法</p><p>　（1）、自动交叉验证</p><p>　　Surprise有一套内置的 算法和数据集供您使用。在最简单的形式中，只需几行代码即可运行交叉验证程序：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset (download it if needed),  </span><br><span class="line"># 加载movielens-100k数据集（如果需要，下载）</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># ＃我们将使用SVD算法。</span><br><span class="line"># We&apos;ll use the famous SVD algorithm.</span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">#运行5倍交叉验证并打印结果</span><br><span class="line"># Run 5-fold cross-validation and print results</span><br><span class="line">cross_validate(algo, data, measures=[&apos;RMSE&apos;, &apos;MAE&apos;], cv=5, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>输出结果：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">Evaluating RMSE, MAE of algorithm SVD on 5 split(s).</span><br><span class="line"></span><br><span class="line">                  Fold 1  Fold 2  Fold 3  Fold 4  Fold 5  Mean    Std     </span><br><span class="line">RMSE (testset)    0.9398  0.9321  0.9413  0.9349  0.9329  0.9362  0.0037  </span><br><span class="line">MAE (testset)     0.7400  0.7351  0.7400  0.7364  0.7370  0.7377  0.0020  </span><br><span class="line">Fit time          5.66    5.47    5.46    5.60    5.77    5.59    0.12    </span><br><span class="line">Test time         0.24    0.14    0.18    0.15    0.15    0.17    0.04</span><br></pre>      </td>    </tr>  </table></figure><p>  该load_builtin()方法将提供下载movielens-100k数据集（如果尚未下载），并将其保存.surprise_data在主目录的文件夹中（您也可以选择将其保存在其他位置）。</p><p>我们在这里使用众所周知的 SVD 算法，但是有许多其他算法可用。</p><p>该cross_validate()  函数根据cv参数运行交叉验证过程，并计算一些accuracy度量。我们在这里使用经典的5倍交叉验证，但可以使用更高级的迭代器</p><p>（2）、测试集分解和fit()方法</p><p>如果您不想运行完整的交叉验证程序，可以使用对 train_test_split()  给定大小的训练集和测试集进行采样，并使用您的选择。您将需要使用将在列车集上训练算法的方法，以及将返回从testset进行的预测的方法：accuracy  metricfit()test()</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import train_test_split</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset (download it if needed),</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># sample random trainset and testset #  随机测试集和训练集</span><br><span class="line"># test set is made of 25% of the ratings. # 将25%的数据设置成测试集</span><br><span class="line">trainset, testset = train_test_split(data, test_size=.25)</span><br><span class="line"></span><br><span class="line"># We&apos;ll use the famous SVD algorithm.</span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line"># Train the algorithm on the trainset, and predict ratings for the testset # 在训练集中训练算法，并预测数据</span><br><span class="line">algo.fit(trainset)</span><br><span class="line">predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line"># Then compute RMSE</span><br><span class="line">accuracy.rmse(predictions)</span><br></pre>      </td>    </tr>  </table></figure><p>执行结果：</p><p>RMSE: 0.9461</p><p>（3）、训练整个训练集和predict()方法</p><p>  显然，我们也可以简单地将算法拟合到整个数据集，而不是运行交叉验证。这可以通过使用build_full_trainset()将构建trainset对象的方法来完成  ：<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre>      </td>      <td class="code">        <pre><span class="line">from surprise import KNNBasic</span><br><span class="line">from surprise import Dataset</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># Retrieve the trainset.</span><br><span class="line"># 检索训练集</span><br><span class="line">trainset = data.build_full_trainset()</span><br><span class="line"></span><br><span class="line"># Build an algorithm, and train it.</span><br><span class="line"># 构建算法并训练</span><br><span class="line">algo = KNNBasic()</span><br><span class="line">algo.fit(trainset)</span><br><span class="line"></span><br><span class="line">uid = str(196)  # raw user id (as in the ratings file). They are **strings**!</span><br><span class="line">iid = str(302)  # raw item id (as in the ratings file). They are **strings**!</span><br><span class="line"></span><br><span class="line"># get a prediction for specific users and items.</span><br><span class="line"># ＃获取特定用户和项目的预测。</span><br><span class="line">pred = algo.predict(uid, iid, r_ui=4, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>预测结果：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">user: 196        item: 302        r_ui = 4.00   est = 4.06   &#123;&apos;actual_k&apos;: 40, &apos;was_impossible&apos;: False&#125;</span><br><span class="line"># est表示预测值</span><br></pre>      </td>    </tr>  </table></figure><p> 以上都是使用内置的数据集。</p><p>2、使用自定义数据集</p><p>Surprise有一组内置  数据集，但您当然可以使用自定义数据集。加载评级数据集可以从文件（例如csv文件）或从pandas数据帧完成。无论哪种方式，您都需要Reader为Surprise定义一个对象，以便能够解析文件或数据帧。<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># 要从文件（例如csv文件）加载数据集，您将需要以下 load_from_file()方法：</span><br><span class="line"></span><br><span class="line">from surprise import BaselineOnly</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"># path to dataset file</span><br><span class="line"># 数据集路径</span><br><span class="line">file_path = os.path.expanduser(r&apos;C:/Users/FELIX/.surprise_data/ml-100k/ml-100k/u.data&apos;)</span><br><span class="line"></span><br><span class="line"># As we&apos;re loading a custom dataset, we need to define a reader. In the</span><br><span class="line"># movielens-100k dataset, each line has the following format:</span><br><span class="line"># &apos;user item rating timestamp&apos;, separated by &apos;\t&apos; characters.</span><br><span class="line"># ＃当我们加载自定义数据集时，我们需要定义一个reader。在</span><br><span class="line"># ＃movielens-100k数据集中，每一行都具有以下格式：</span><br><span class="line"># ＃&apos;user item rating timestamp&apos;，以&apos;\ t&apos;字符分隔。</span><br><span class="line">reader = Reader(line_format=&apos;user item rating timestamp&apos;, sep=&apos;\t&apos;)</span><br><span class="line"></span><br><span class="line">data = Dataset.load_from_file(file_path, reader=reader)</span><br><span class="line"></span><br><span class="line"># We can now use this dataset as we please, e.g. calling cross_validate</span><br><span class="line"># ＃我们现在可以随意使用这个数据集，例如调用cross_validate</span><br><span class="line">cross_validate(BaselineOnly(), data, verbose=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 要从pandas数据框加载数据集，您将需要该 load_from_df()方法。您还需要一个Reader对象，但只能rating_scale指定参数。数据框必须有三列，对应于用户（原始）ID，项目（原始）ID以及此顺序中的评级。因此，每行对应于给定的评级。这不是限制性的，因为您可以轻松地重新排序数据框的列</span><br><span class="line"></span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">from surprise import NormalPredictor</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Creation of the dataframe. Column names are irrelevant.</span><br><span class="line"># ＃创建数据帧。列名无关紧要。</span><br><span class="line">ratings_dict = &#123;&apos;itemID&apos;: [1, 1, 1, 2, 2],</span><br><span class="line">                &apos;userID&apos;: [9, 32, 2, 45, &apos;user_foo&apos;],</span><br><span class="line">                &apos;rating&apos;: [3, 2, 4, 3, 1]&#125;</span><br><span class="line">df = pd.DataFrame(ratings_dict)</span><br><span class="line"></span><br><span class="line"># A reader is still needed but only the rating_scale param is requiered.</span><br><span class="line"># ＃仍然需要一个reader，但只需要rating_scale param。</span><br><span class="line">reader = Reader(rating_scale=(1, 5))</span><br><span class="line"></span><br><span class="line"># The columns must correspond to user id, item id and ratings (in that order).</span><br><span class="line"># ＃列必须对应于用户ID，项目ID和评级（按此顺序）。</span><br><span class="line">data = Dataset.load_from_df(df[[&apos;userID&apos;, &apos;itemID&apos;, &apos;rating&apos;]], reader)</span><br><span class="line"></span><br><span class="line"># We can now use this dataset as we please, e.g. calling cross_validate</span><br><span class="line"># ＃我们现在可以随意使用这个数据集，例如调用cross_validate </span><br><span class="line">cross_validate(NormalPredictor(), data, cv=2)</span><br></pre>      </td>    </tr>  </table></figure><p>3、使用交叉验证迭代器</p><p>  对于交叉验证，我们可以使用cross_validate()为我们完成所有艰苦工作的功能。但是为了更好地控制，我们还可以实现交叉验证迭代器，并使用split()迭代器的test()方法和算法的  方法对每个拆分进行预测 。这是一个例子，我们使用经典的K-fold交叉验证程序和3个拆分：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import KFold</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># define a cross-validation iterator</span><br><span class="line"># define一个交叉验证迭代器</span><br><span class="line">kf = KFold(n_splits=3)</span><br><span class="line"></span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">for trainset, testset in kf.split(data):</span><br><span class="line"></span><br><span class="line">    # train and test algorithm.</span><br><span class="line">    #训练和测试算法。</span><br><span class="line">    algo.fit(trainset)</span><br><span class="line">    predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line">    # Compute and print Root Mean Squared Error</span><br><span class="line">    # 计算并打印输出</span><br><span class="line">    accuracy.rmse(predictions, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>  可以使用其他交叉验证迭代器，如LeaveOneOut或ShuffleSplit。在这里查看所有可用的迭代器。Surprise的交叉验证工具的设计源于优秀的scikit-learn  API。</p><p>交叉验证的一个特例是当折叠已经被某些文件预定义时。例如，movielens-100K数据集已经提供了5个训练和测试文件（u1.base，u1.test …  u5.base，u5.test）。惊喜可以通过使用surprise.model_selection.split.PredefinedKFold  对象来处理这种情况：<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre>      </td>      <td class="code">        <pre><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import PredefinedKFold</span><br><span class="line"></span><br><span class="line"># path to dataset folder</span><br><span class="line">files_dir = os.path.expanduser(&apos;~/.surprise_data/ml-100k/ml-100k/&apos;)</span><br><span class="line"></span><br><span class="line"># This time, we&apos;ll use the built-in reader.</span><br><span class="line">reader = Reader(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># folds_files is a list of tuples containing file paths:</span><br><span class="line"># [(u1.base, u1.test), (u2.base, u2.test), ... (u5.base, u5.test)]</span><br><span class="line">train_file = files_dir + &apos;u%d.base&apos;</span><br><span class="line">test_file = files_dir + &apos;u%d.test&apos;</span><br><span class="line">folds_files = [(train_file % i, test_file % i) for i in (1, 2, 3, 4, 5)]</span><br><span class="line"></span><br><span class="line">data = Dataset.load_from_folds(folds_files, reader=reader)</span><br><span class="line">pkf = PredefinedKFold()</span><br><span class="line"></span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">for trainset, testset in pkf.split(data):</span><br><span class="line"></span><br><span class="line">    # train and test algorithm.</span><br><span class="line">    algo.fit(trainset)</span><br><span class="line">    predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line">    # Compute and print Root Mean Squared Error</span><br><span class="line">    accuracy.rmse(predictions, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>当然，也可以对单个文件进行训练和测试。但是folds_files参数仍然要列表的形式。</p><p>4、使用GridSearchCV调整算法参数</p><p>该cross_validate()函数报告针对给定参数集的交叉验证过程的准确度度量。如果你想知道哪个参数组合能产生最好的结果，那么这个  GridSearchCV类就可以解决了。给定一个dict参数，该类详尽地尝试所有参数组合并报告任何精度测量的最佳参数（在不同的分裂上取平均值）。它受到scikit-learn的GridSearchCV的启发。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise.model_selection import GridSearchCV</span><br><span class="line"></span><br><span class="line"># Use movielens-100K</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line">param_grid = &#123;&apos;n_epochs&apos;: [5, 10], &apos;lr_all&apos;: [0.002, 0.005],</span><br><span class="line">              &apos;reg_all&apos;: [0.4, 0.6]&#125;</span><br><span class="line">gs = GridSearchCV(SVD, param_grid, measures=[&apos;rmse&apos;, &apos;mae&apos;], cv=3)</span><br><span class="line"></span><br><span class="line">gs.fit(data)</span><br><span class="line"></span><br><span class="line"># best RMSE score</span><br><span class="line">print(gs.best_score[&apos;rmse&apos;]) # 输出最高的准确率的值</span><br><span class="line"></span><br><span class="line"># combination of parameters that gave the best RMSE score</span><br><span class="line">print(gs.best_params[&apos;rmse&apos;]) # 输出最好的批次，学习率参数</span><br></pre>      </td>    </tr>  </table></figure><p>通过上面操作得到最佳参数后就可以使用该参数的算法：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># We can now use the algorithm that yields the best rmse:</span><br><span class="line">algo = gs.best_estimator[&apos;rmse&apos;]</span><br><span class="line">algo.fit(data.build_full_trainset())</span><br></pre>      </td>    </tr>  </table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sklearn/surprise&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/f2deaa2d8bcb907b31c759089e262f09.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python机器学习笔记1</title>
    <link href="http://javastar.club/archives/3012948c.html"/>
    <id>http://javastar.club/archives/3012948c.html</id>
    <published>2019-08-08T07:09:03.000Z</published>
    <updated>2019-08-23T03:20:50.885Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+QrZ7HZFLH2+IUCtvRzAIV0sk6HZqh6jMVgbqF25xo1TC+8ozBTXbpI0nkbY2NLxWjYo39suDK3E5fgmanWM5jjBxiDOwDD6Y+psp6QHnCZQpWrZw4wjU6mJIm9nRA0ZEZ/pSQKYfcWp9hZ2CdYSV3AG/6RDSU6tanqqpzmDsAz6Mclg/xFrNeOJ2vDhR2wkyK7ekDv4yz4bGNw+v4G4WG306mJpoHTQLUpWj0U7BV/JkBK0JN3/TYg33xvc5RLrPVkcA+5dtzyPslMwtnjAWW3OVPGTWjvU2BScfDWPrklyukMrXvMnfwGks1Xle3niYTzHp9j+5ZUXJcfxXNKEv/MdUvH1uPxdssTwpOt/3YXHCiMjGW6vNv8/Li8kzKUKfCv6TVG5Uh+h2uKBsQqUXgXhZmKpwE8WX7u1gfp3Tq4vCo4DcjvGEMfFuCNoRuppTlUIma+1bqcotLQkiWjUgIbn/p245bI/bySi36FEJaf7VYn1j0KVSmkKsil4e16Gb7PFLsjgY5TpWPt9jhUx2GYLnkiWWXDx/g0/kSnHEZY9SEirdwuG9ib4O/k0TfZhRJv5482d2R66CtXjm7vduD8DcnBY50PNzXM2fMZyGrnJHi5usPam7+4+amuZYSmdX3LALah07RSqFB4Z5xG7DPQ1rP03z5+84bBEvJON8+3pfbbHRkbPdged1yPqmL0jWzmAVSOiNq8HMtioJuv9WxeP5ih1+ZhPHJQknvJCplKNPnRYbanw5iUoZ9R3xNrmsoXTvejreTOyDGhORbH6a4RsRNkTkIgTLvy+cvu608xcJTh0u+iJSy2zT435Ph+2bJGEuZI8Xm5LeuYR3048EBRPH05XkG1pvBUQorX74p/RA6sEvbdu+NOgZWYilWyHR2qqWrsLPUUf52cBxWx46vSYxquSiJdzsk6kqDCOYVVpPAF/RwQy15eTfYgRk5NPMg8YTq4Q4CVzqhcssHnrtObozJkTw8Ju1gF68ulnj1aK5l5tAa53hFrW2Eydi9gXW+j89YtNuLl3LdvdT4WQjiv7NkNMyR1mIrYysZzy8cjm9QcK5PziS46JhnnFbS8QwAA7r+YReI9KBpS7cVrvaZbuxVUCdWZowyOqvekjA4rfA+5gXpVzIICvr55Brj7jMuEYvjdHnvznVHoETUuj2WWdRmR4yE18na8L9U7y71OoVtoRrgvmh5gQ3V1B9NSfXOpUFeB2P3DsdKv3+wzhzvZlatsTEshkbCoqQ8QJSZ89DoXzEO8x9xhAMHy7+TMWarAEHpqdP6M3x/h/oKKI21Gu2ou2BS9fI80A+2dzML8iD5OnJ0ZHY+jksmPVp9e5vaxSx7DCwIIjBgmkQkkesEEVFXFArECr1FHe3KOs9vKmawvHHEuf9+n6/9Olgq1aTfuyA3L3VelazhNDyiFgfI2Yok62I1ZeGdIEm82M2apaYXJHiutOWXjk2LyKBrJHLWODd0FDmt4yunB8tUpNBe6r4WMFNoH5H8c0ChzpiKsmeBjKG3ScY1TBAp1gbE84r//Qtf7wMKGw==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python机器学习笔记</title>
    <link href="http://javastar.club/archives/a80115f8.html"/>
    <id>http://javastar.club/archives/a80115f8.html</id>
    <published>2019-08-08T07:08:46.000Z</published>
    <updated>2019-08-16T03:11:33.474Z</updated>
    
    <content type="html"><![CDATA[<p>随机森林算法，参考：<a href="https://www.cnblogs.com/wj-1314/p/9628303.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/wj-1314/p/9628303.html</a><br><img src="https://github.com/starstarb/clouding/raw/master/head/e7f428d6ca1cf376e564c5a45b13e431.jpg" alt></p><a id="more"></a><h3 id="随机森林算法的理论知识"><a href="#随机森林算法的理论知识" class="headerlink" title="随机森林算法的理论知识"></a>随机森林算法的理论知识</h3><p>  　　随机森林是一种有监督学习算法，是以决策树为基学习器的集成学习算法。随机森林非常简单，易于实现，计算开销也很小，但是它在分类和回归上表现出非常惊人的性能，因此，随机森林被誉为“代表集成学习技术水平的方法”。</p><h4 id="一，随机森林的随机性体现在哪几个方面？"><a href="#一，随机森林的随机性体现在哪几个方面？" class="headerlink" title="一，随机森林的随机性体现在哪几个方面？"></a>一，随机森林的随机性体现在哪几个方面？</h4><p><strong>1，数据集的随机选取</strong></p><p>  　　从原始的数据集中采取有放回的抽样（bagging），构造子数据集，子数据集的数据量是和原始数据集相同的。不同子数据集的元素可以重复，同一个子数据集中的元素也可以重复。</p><p><strong>2，待选特征的随机选取</strong></p><p>  　　与数据集的随机选取类似，随机森林中的子树的每一个分裂过程并未用到所有的待选特征，而是从所有的待选特征中随机选取一定的特征，之后再在随机选取的特征中选取最优的特征</p><h4 id="二，为什么使用随机森林？"><a href="#二，为什么使用随机森林？" class="headerlink" title="二，为什么使用随机森林？"></a>二，为什么使用随机森林？</h4><p>1，随机森林既可以用于分类问题，也可以用于回归问题</p><p>2，过拟合是个关键的问题，可能会让模型的结果变得糟糕，但是对于随机森林来说，如果随机森林的树足够多，那么分类器就不会过拟合模型</p><p>3，随机森林分类器可以处理缺失值</p><p>4，随机森林分类器可以用分类值建模</p><h4 id="三，随机森林的构建过程"><a href="#三，随机森林的构建过程" class="headerlink" title="三，随机森林的构建过程"></a>三，随机森林的构建过程</h4><p>1，从原始训练集中使用Bootstraping方法随机有放回采样取出m个样本，共进行n_tree次采样。生成n_tree个训练集</p><p>2，对n_tree个训练集，我们分别训练n_tree个决策树模型</p><p>3，对于单个决策树模型，假设训练样本特征的个数为n，那么每次分裂时根据信息增益/信息增益比/基尼指数 选择最好的特征进行分裂</p><p>4，每棵树都已知这样分裂下去，知道该节点的所有训练样例都属于同一类。在决策树的分裂过程中不需要剪枝</p><p>5，将生成的多颗决策树组成随机森林。对于分类问题，按照多棵树分类器投票决定最终分类结果；对于回归问题，由多颗树预测值的均值决定最终预测结果</p><p>注意：OOB（out-of-bag ）：每棵决策树的生成都需要自助采样，这时就有1/3的数据未被选中，这部分数据就称为袋外数据。<br><img src="https://github.com/starstarb/clouding/raw/master/python/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97.png" alt></p><h4 id="四，随机森林优缺点总结"><a href="#四，随机森林优缺点总结" class="headerlink" title="四，随机森林优缺点总结"></a>四，随机森林优缺点总结</h4><p><strong>优点</strong></p><ul>  <li>由于采用了集成算法，本身精度比大多数单个算法要好，所以准确性高</li>  <li>在测试集上表现良好，由于两个随机性的引入，使得随机森林不容易陷入过拟合（样本随机，特征随机）</li>  <li>在工业上，由于两个随机性的引入，使得随机森林具有一定的抗噪声能力，对比其他算法具有一定优势</li>  <li>由于树的组合，使得随机森林可以处理非线性数据，本身属于非线性分类（拟合）模型</li>  <li>它能够处理很高维度（feature很多）的数据，并且不用做特征选择，对数据集的适应能力强：既能处理离散型数据，也能处理连续型数据，数据集无需规范化  </li>  <li>训练速度快，可以运用在大规模数据集上</li>  <li>可以处理缺省值（单独作为一类），不用额外处理</li>  <li>由于有袋外数据（OOB），可以在模型生成过程中取得真实误差的无偏估计，且不损失训练数据量</li>  <li>在训练过程中，能够检测到feature间的互相影响，且可以得出feature的重要性，具有一定参考意义</li>  <li>由于每棵树可以独立、同时生成，容易做成并行化方法</li>  <li>由于实现简单、精度高、抗过拟合能力强，当面对非线性数据时，适于作为基准模型</li></ul><p><strong>缺点</strong></p><p>  当随机森林中的决策树个数很多时，训练时需要的空间和时间会比较大<br>随机森林中还有许多不好解释的地方，有点算是黑盒模型<br>在某些噪音比较大的样本集上，RF的模型容易陷入过拟合</p><h4 id="五，特征重要性评估"><a href="#五，特征重要性评估" class="headerlink" title="五，特征重要性评估"></a>五，特征重要性评估</h4><p>  　　现实情况下，一个数据集中往往有成百上千个特征，如何在其中选择比结果影响最大的那几个特征，以此来缩减建立模型时特征数是我们比较关心的问题。这样的方法其实很多，比如主成分分析，lasso等等。不过这里我们学习的是用随机森林来进行特征筛选。</p><p>　　用随机森林进行特征重要性评估的思想就是看每个特征在随机森林中的每棵树上做了多大的贡献，然后取个平均值，最后比一比特征之间的贡献大小。</p><p>　　贡献大小通常使用基尼指数（Gini index）或者袋外数据（OOB）错误率作为评估指标来衡量。这里我们再学习一下基尼指数来评价的方法。</p><p>　　我们将变量重要性评分（variable importance  measures）用VIM来表示，将Gini指数用GI来表示，假设m个特征X1，X2，X3，……Xc，现在要计算出每个特征Xj的Gini指数评分VIMj（Gini）,亦即第j个特征在RF所有决策树中节点分裂不纯度的平均改变量。</p><p>　　Gini指数的计算公式为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/Gini.png" alt><br>其中，K表示有K个类别。Pmk表示节点m中类列k所占的比例。</p><p>　　直观的说，就是随便从节点m中随机抽取两个样本，其类别标记不一致的概率。</p><p>　　特征Xj在节点m的重要性，即节点m分支前后的Gini指数变化量为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIM.png" alt><br>其中，GIl和GIr分别表示分枝后两个新节点的Gini指数。</p><p>　　如果，特征Xj在决策树i中出现的节点在集合M中，那么Xj在第i颗树的重要性为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMIT.png" alt><br>假设RF中共有n颗树，那么<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMij.png" alt><br>　最后，把所有求得的重要性评分做一个归一化处理即可。<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMsum.png" alt></p><h5 id="5-1-特征选择"><a href="#5-1-特征选择" class="headerlink" title="5.1 特征选择"></a>5.1  特征选择</h5><p><strong>5.1.1 特征选择的步骤</strong></p><p>　　在特征重要性的基础上，特征选择的步骤如下：</p><ul>  <li>计算每个特征的重要性，并按降序排序</li>  <li>确定要剔除的比例，依据特征重要性剔除相应比例的特征，得到一个新的特征集</li>  <li>用新的特征集重复上述过程，直到剩下m个特征（m为提前设定的值）</li>  <li>根据上述代码中得到的各个特征集合特征集对应的袋外误差率，选择袋外误差率最低的特征集</li>  <li><em>5.1.2 特征重要性的估计方法*</em></li></ul><p>  　　特征重要性的估计通常有两种方法：一是使用uniform或者gaussian抽取随机值替换原特征；一是通过permutation的方式将原来的所有N个样本的第i个特征值重新打乱分布，第二种方法更加科学，保证了特征替代值与原特征的分布是近似的。这种方法叫做permutation  test ，即在计算第i个特征的重要性的时候，将N 个特征的第i个特征重新洗牌，然后比较D和表现的差异性，如果差异很大，则表明第i个特征是重要的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随机森林算法，参考：&lt;a href=&quot;https://www.cnblogs.com/wj-1314/p/9628303.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/wj-1314/p/9628303.html&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/e7f428d6ca1cf376e564c5a45b13e431.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>debug技巧总结</title>
    <link href="http://javastar.club/archives/fe81e267.html"/>
    <id>http://javastar.club/archives/fe81e267.html</id>
    <published>2019-08-08T03:41:29.000Z</published>
    <updated>2019-08-23T03:28:34.442Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+UT1M+bftcLJeUGx8sTnC+hmrnT78aTicaCUPKA62jWwNdgVaWiR41UzJhZdA6lU3CPEvKVGbWkg==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
  </entry>
  
</feed>
