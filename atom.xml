<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>star</title>
  
  <subtitle>前端小白|java萌新|Geek精神</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://javastar.club/"/>
  <updated>2019-08-22T16:00:00.000Z</updated>
  <id>http://javastar.club/</id>
  
  <author>
    <name>stardust</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年下半年学习计划</title>
    <link href="http://javastar.club/archives/1a186561.html"/>
    <id>http://javastar.club/archives/1a186561.html</id>
    <published>2019-12-30T16:00:00.000Z</published>
    <updated>2019-08-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+krvj8kWOderOGTrhhK8afy01yQKlnPMr4r41XStf0M+pHC2+5suHW+1t0PSt9UV9h2IKWU/JzGJyjpDoYesu2zoAqgOQcQ61qLJfH/2/cgezT45aJkGQYJ9iPYdy7lAhXy8CahDmrrt4iiUtr8JTTepI36JvIDf/PC4yYHV0ZWXBIo+JriGoLhfLLR+QNBOtLoh447KU+wiRojqM3q33K1+SMrIJ28nkdjiJjPbcVtvDfUz4+4rJwSG9t3R6zcY5Vk5nSrBNECdz0tqVj4YSzOeS2fDDHHAq/EnShBu4LfYYNpwI2mnv0UAq8wnnYM9wisKFAVLoNfDS+zeDZ9hkkk6qip1iyPvw=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="学习计划" scheme="http://javastar.club/categories/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="学习计划" scheme="http://javastar.club/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Java开发</title>
    <link href="http://javastar.club/archives/8c2959bc.html"/>
    <id>http://javastar.club/archives/8c2959bc.html</id>
    <published>2019-08-21T13:53:54.000Z</published>
    <updated>2019-08-23T03:26:34.888Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="Java基础" scheme="http://javastar.club/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java基础" scheme="http://javastar.club/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>前端学习笔记</title>
    <link href="http://javastar.club/archives/91ce7628.html"/>
    <id>http://javastar.club/archives/91ce7628.html</id>
    <published>2019-08-21T08:35:43.000Z</published>
    <updated>2019-08-23T12:32:04.543Z</updated>
    
    <content type="html"><![CDATA[<p>test</p><a id="more"></a><h3 id="常用浏览器内核"><a href="#常用浏览器内核" class="headerlink" title="常用浏览器内核"></a>常用浏览器内核</h3><ul>  <li>    <p>webkit内核(V8引擎)</p>  </li>  <li>    <p>Gecko</p>  </li>  <li>    <p>Presto</p>  </li>  <li>    <p>Trident</p>  </li></ul><h3 id="谷歌浏览器的控制台：-Fn-f12"><a href="#谷歌浏览器的控制台：-Fn-f12" class="headerlink" title="谷歌浏览器的控制台：(Fn+f12)"></a>谷歌浏览器的控制台：(Fn+f12)</h3><ul>  <li>    <p>Elements: 查看结构样式，可以修改这些内容</p>  </li>  <li>    <p>Console: 查看输出结果和报错信息，是JS调试的利器</p>  </li>  <li>    <p>Sources: 查看项目源码</p>  </li>  <li>    <p>Network: 查看当前网站所有资源的请求信息(包括和服务器传输的HTTP报文信息)，加载时间等(根据加载时间进行项目优化)</p>  </li>  <li>    <p>Application:查看当前网站的数据存储和资源文件(可以盗图) 防盗等技术</p>  </li></ul><h3 id="JS做客户端语言"><a href="#JS做客户端语言" class="headerlink" title="JS做客户端语言"></a>JS做客户端语言</h3><blockquote>  <p>按照相关的JS语法，去操作页面中的元素，有时还要操作浏览器里面的一些功能</p></blockquote><ul>  <li>    <p>ECMAScript3/5/6…: JS的语法规范(变量、数据类型、操作语句等)</p>  </li>  <li>    <p>DOM(document object model):文档对象模型，提供一些JS的属性和方法，用来操作页面的DOM元素</p>  </li>  <li>    <p>BOM(browser object model): 浏览器对象模型，提供一些JS的属性和方法，用来操作浏览器的</p>  </li></ul><h3 id="JS中的变量-variable"><a href="#JS中的变量-variable" class="headerlink" title="JS中的变量 variable"></a>JS中的变量  variable</h3><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//创建函数也相当于创建变量</span><br><span class="line">function fn()&#123;&#125;</span><br><span class="line">//创建类也相当于创建变量</span><br><span class="line">class A&#123;&#125;</span><br><span class="line">//ES6模块的导入也可以创建变量</span><br><span class="line">import B from &apos;./B.js&apos;;</span><br><span class="line">//Symbol创建唯一值</span><br><span class="line">let n=Symbol(100);</span><br><span class="line">let m=Symbol(100);</span><br></pre>      </td>    </tr>  </table></figure><h3 id="JS中的命名规范"><a href="#JS中的命名规范" class="headerlink" title="JS中的命名规范"></a>JS中的命名规范</h3><ul>  <li>严格区分大小写</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let Test=100;</span><br><span class="line">console.log(Test);</span><br></pre>      </td>    </tr>  </table></figure><ul>  <li>    <p>使用数字、字母、下划线、$，数字不能作为开头</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let $box;//一般用JQ获取的以$开头</span><br><span class="line">let _box;//一般公共变量都是_开头</span><br><span class="line">let 1box;//不可以，但是可以写box1</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>驼峰命名法： 首字母小写，其余每一个有意义的首字母都要大写(命名尽可能语义化明显，使用英文单词)</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let studentInformation;</span><br><span class="line">let studentInfo;</span><br><span class="line">//常用的缩写：add/insert/create/new,update, delete/del/remove/rm, sel/select/query/get,info</span><br></pre>          </td>        </tr>      </table>    </figure>  </li></ul><h3 id="JS中常用的数据类型"><a href="#JS中常用的数据类型" class="headerlink" title="JS中常用的数据类型"></a>JS中常用的数据类型</h3><ul>  <li>基本数据类型<ul>      <li>数字number<br>常规数字和NaN</li>      <li>字符串string<br>所有用单引号、双引号、反引号包起来的都是字符串</li>      <li>布尔 boolean<br>true/false</li>      <li>空对象指针null</li>      <li>未定义undefined</li>    </ul>  </li>  <li>引用数据类型<ul>      <li>对象数据类型object<ul>          <li>{} 普通对象</li>          <li>[] 数组对象</li>          <li>/^[+-]?(\d|([1-9]\d+))(\ .\d+)?$/ 正则对象</li>          <li>Math数学函数对象</li>          <li>日期对象</li>          <li>…</li>        </ul>      </li>      <li>函数数据类型function</li>    </ul>  </li></ul><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><blockquote>  <p>not a number:不是一个数，但他属于数字类型</p></blockquote><p>NaN和任何值包括自己都不相等，所以我们不能用相等的方式判断是否为有效数字</p><h3 id="isNaN"><a href="#isNaN" class="headerlink" title="isNaN"></a>isNaN</h3><blockquote>  <p>检测一个值是否为非有效数字</p></blockquote><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>      </td>      <td class="code">        <pre><span class="line">console.log(isNaN(10));</span><br><span class="line"></span><br><span class="line">console.log(isNaN(&apos;AA&apos;));</span><br><span class="line">=&gt; Number(&apos;AA&apos;)=&gt;NaN</span><br><span class="line">=&gt; isNaN(NaN)=&gt;TRUE</span><br></pre>      </td>    </tr>  </table></figure><p>在使用isNaN进行检测时，首先会验证检测的值是否为数字类型，如果不是，先基于Number()这个方法，</p><h3 id="把其他类型值转换为数字类型"><a href="#把其他类型值转换为数字类型" class="headerlink" title="把其他类型值转换为数字类型"></a>把其他类型值转换为数字类型</h3><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//把字符串转换为数字，只要字符串包含任意一个非有效数字字符(第一个点除外)，结果都是NaN</span><br><span class="line">console.log(Number(&apos;12.5&apos;));//=&gt;12.5</span><br><span class="line">console.log(Number(&apos;12.5px&apos;));//NaN</span><br><span class="line">console.log(Number(&apos;&apos;));//0</span><br><span class="line"></span><br><span class="line">//bool translate number</span><br><span class="line">console.log(Number(true));//=&gt;1</span><br><span class="line">console.log(Number(false));//=&gt;0</span><br><span class="line">console.log(isNaN(false));//=&gt;false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">console.log(Number(undefined));//=&gt;NaN</span><br><span class="line">console.log(Number(null));//=&gt;0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//把引用数据类型转换为数字，是先把他基于toString方法转换为字符串，然后再转换为数字</span><br><span class="line">console.log(Number(&#123;name:&apos;10&apos;&#125;));//NaN</span><br><span class="line">console.log(Number(&#123;&#125;));//NaN</span><br><span class="line"></span><br><span class="line">//&#123;&#125;/&#123;&apos;x&apos;:&apos;x&apos;&#125;.toString()=&gt;&quot;[object Object]&quot;=&gt;NaN</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;&apos;</span><br><span class="line">console.log(Number([]));// -&gt; 0</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;12&apos;</span><br><span class="line">console.log(Number([12]));// -&gt; 12</span><br><span class="line"></span><br><span class="line">//[].toString()=&gt;&apos;12,23&apos;</span><br><span class="line">console.log(Number([12,23]));// -&gt; NaN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let str=&apos;12.5px&apos;;</span><br><span class="line">console.log(Number(str));//=&gt;NaN</span><br><span class="line">console.log(parseInt(str));//=&gt;12</span><br><span class="line">console.log(parseFloat(str));//=&gt;12.5</span><br><span class="line">console.log(parseFloat(&apos;width:12.5px&apos;));//=&gt;NaN</span><br></pre>      </td>    </tr>  </table></figure><ul>  <li>    <p>Number([val])</p>  </li>  <li>    <p>      parseInt/parseFloat([val],[进制]):也是转换数字的方法，对于字符串来说，它是从左到右依次查找有效数字字符，直到遇到非有效数字字符，停止查找(不管后面是否还有数字，都不再找了)，把找到的当做数字返回    </p>  </li>  <li>    <p>==进行比较的时候，可能要出现把其他类型值转换为数字</p>  </li></ul><h2 id="String字符串数据类型"><a href="#String字符串数据类型" class="headerlink" title="String字符串数据类型"></a>String字符串数据类型</h2><blockquote>  <p>所有用单引号、双引号、反引号包起来的都是字符串</p></blockquote><h3 id="把其他类型值转换为字符串"><a href="#把其他类型值转换为字符串" class="headerlink" title="把其他类型值转换为字符串"></a>把其他类型值转换为字符串</h3><ul>  <li>[val].toString()</li>  <li>字符串拼接</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let a=12;</span><br><span class="line">console.log(a.toString());//=&gt;&apos;12&apos;</span><br><span class="line">console.log((NaN).toString());//=&gt;&apos;NaN&apos;</span><br><span class="line">/*</span><br><span class="line">null和undefined是禁止直接toString的</span><br><span class="line">(null).toString() =&gt; 报错</span><br><span class="line">但是和undefined一样转换为字符串的结果就是&apos;null&apos;/&apos;undefined&apos;</span><br><span class="line">*/ </span><br><span class="line"></span><br><span class="line">//普通对象.toString()的结果是&quot;[object Object]&quot;=&gt;?</span><br><span class="line">=&gt; Object.prototype.toString方法不是转换为字符串的，而是用来检测数据类型的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//字符串拼接：只有加法可能出现字符串拼接，一旦遇到字符串，则即是字符串拼接。</span><br><span class="line">console.log(&apos;10&apos;+10);//=&gt;&apos;1010&apos;</span><br><span class="line">console.log(&apos;10&apos;-10);//=&gt;0</span><br><span class="line">console.log(&apos;10px&apos;-10);//=&gt;NaN</span><br><span class="line"></span><br><span class="line">let a=10+null+true+[]+undefined+&apos;珠峰&apos;+null+[]+10+false;</span><br><span class="line"></span><br><span class="line">//10+null-&gt;0+true-&gt;1+[]-&gt;&apos;&apos; 空数组变为数字，先要经历变为空字符串，遇到字符串，直接变为字符串拼接。</span><br><span class="line"></span><br><span class="line">-&gt;&apos;11&apos;+undefined-&gt;&apos;11undefined&apos;</span><br><span class="line"></span><br><span class="line">-&gt;&apos;11undefined珠峰null10false&apos;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="boolean布尔数据类型"><a href="#boolean布尔数据类型" class="headerlink" title="boolean布尔数据类型"></a>boolean布尔数据类型</h2><blockquote>  <p>只有两个值 true/false</p></blockquote><h3 id="把其他类型值转换为布尔类型"><a href="#把其他类型值转换为布尔类型" class="headerlink" title="把其他类型值转换为布尔类型"></a>把其他类型值转换为布尔类型</h3><blockquote>  <p>只有0、NaN、’’、null、undefined五个值转换为FALSE，其余都转换为TRUE(而且没有任何特殊的情况)</p></blockquote><ul>  <li>Boolean([val])</li>  <li>!/!!</li>  <li>条件判断</li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">//!:取反(先转为布尔，然后取反)</span><br><span class="line">console.log(!1);//false</span><br><span class="line">console.log(!!1);//等价于Boolean !!:取反再取反，只相当于转换为布尔</span><br></pre>      </td>    </tr>  </table></figure><h2 id="null-undefined"><a href="#null-undefined" class="headerlink" title="null/ undefined"></a>null/  undefined</h2><blockquote>  <p>null和undefined都代表的是没有</p></blockquote><ul>  <li>    <p>null: 意料之中(一般都是开始不知道值，我们手动先设置为null，后期再给予赋值操作)</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">let num=null;//=&gt;let num=0;  一般最好用null作为初始的空值，因为零不是空值，他在栈内存中有自己的存储空间(占了位置)</span><br><span class="line"></span><br><span class="line">num=12;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>undefined：意料之外(不是我能决定的)</p>  </li></ul><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let num;//=&gt;创建一个变量没有赋值，默认值是undefined</span><br><span class="line"></span><br><span class="line">num=12;</span><br></pre>      </td>    </tr>  </table></figure><h3 id="object对象数据类型-普通对象"><a href="#object对象数据类型-普通对象" class="headerlink" title="object对象数据类型-普通对象"></a>object对象数据类型-普通对象</h3><blockquote>  <p>{[key]:[value],…} 任何一个对象都是由零到多组键值对(属性名：属性值)组成的(并且属性名不能重复)</p></blockquote><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre>      </td>      <td class="code">        <pre><span class="line">let person=&#123;</span><br><span class="line">    name: &apos;star&apos;,</span><br><span class="line">    age: 40,</span><br><span class="line">    height: &apos;18cm&apos;,</span><br><span class="line">    weight: &apos;40kg&apos;,</span><br><span class="line">    1: 100</span><br><span class="line">&#125;;</span><br><span class="line">//获取属性名对应的属性值</span><br><span class="line">//=&gt;对象.属性名</span><br><span class="line">//=&gt;对象[属性名] 属性名是数字或字符串格式的</span><br><span class="line">//=&gt;如果当前属性名不存在，默认的属性值时undefined</span><br><span class="line">//=&gt;如果属性名是数字，则不能使用点的方式获取属性值</span><br><span class="line">console.log(person.name);</span><br><span class="line"></span><br><span class="line">console.log(person[&apos;age&apos;]);</span><br><span class="line"></span><br><span class="line">console.log(person.sex); //=&gt;undefined</span><br><span class="line"></span><br><span class="line">console.log(person[&apos;height&apos;]);</span><br><span class="line"></span><br><span class="line">console.log(person[1]);</span><br><span class="line">//删除属性</span><br><span class="line">//=&gt;真删除：把属性彻底删掉</span><br><span class="line">//=&gt;假删除：属性还在，值为空</span><br><span class="line">delete person[1];</span><br><span class="line"></span><br><span class="line">person.weight=null;</span><br><span class="line">console.log(person);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//设置属性名属性值</span><br><span class="line">//=》属性名不能重复，如果属性名已经存在，不属于新增，属于修改属性值</span><br><span class="line">/*person.GF=&apos;TT&apos;;</span><br><span class="line">person.name=&apos;李易峰&apos;;</span><br><span class="line">console.log(person[&apos;GF&apos;]);</span><br><span class="line">console.log(person[&apos;name&apos;]);</span><br><span class="line">*/</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre>      </td>      <td class="code">        <pre><span class="line">function count(str)</span><br><span class="line">&#123;</span><br><span class="line">    if(isNaN(parseInt(str,10)))</span><br><span class="line">    &#123;</span><br><span class="line">        alert(&quot;该字符串完全由数字组成&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        alert(&quot;该字符串不完全由字符组成&quot;);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">   数组是特殊的对象</span><br><span class="line">   1. 我们中括号中设置的是属性值，它的属性名是默认生成的数字，从零开始递增，而且这个数字代表每一项的位置，我们把其称为“索引”=》从零开始，连续递增，代表每一项位置的数字属性名</span><br><span class="line">   2. 默认一个属性名length,存储数组的长度</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">let array=[12,&apos;test&apos;,true,41];</span><br><span class="line">console.log(array);</span><br><span class="line">console.log(array.length);</span><br><span class="line">console.log(array[&apos;length&apos;]);</span><br><span class="line">console.log(array[1]);</span><br><span class="line">console.log(array[array.length-1]);</span><br><span class="line">//向数组末尾增加内容</span><br><span class="line">array[array.length]=100;</span><br><span class="line">console.log(array);</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//怎么判断是否是字符</span><br><span class="line">/*function t(str)&#123;</span><br><span class="line">    if (/[^\x00-\xff]/g.test(str))//[^\x00-\xff]即ASCII 编码不在0-255的字符</span><br><span class="line"> alert(&quot;含有汉字&quot;);          </span><br><span class="line">else alert(&quot;全是字符&quot;);   </span><br><span class="line">&#125;</span><br><span class="line">console.log(t(&quot;你好&quot;));</span><br><span class="line">console.log(t(&quot;adsfa&quot;));</span><br><span class="line">console.log(t(&quot;测试&quot;));*/</span><br><span class="line"></span><br><span class="line">let n=&#123;</span><br><span class="line">    name: &apos;珠峰&apos;</span><br><span class="line">&#125;;</span><br><span class="line">let m=n;</span><br><span class="line">m.name=&apos;培训&apos;;</span><br><span class="line">console.log(n.name);</span><br><span class="line">console.log(m.name);</span><br></pre>      </td>    </tr>  </table></figure><blockquote>  <p>浏览器想要执行js代码：</p>  <ol>    <li>从电脑内存中分配存储一块内存，用来执行代码(栈内存=&gt;Stack)</li>    <li>分配一个主线程，用来自上而下执行js代码</li>  </ol></blockquote><p>栈内存： 变量存储空间、值存储空间。</p><p>例子： </p><p><strong>let a=12;</strong> 进栈执行<br> 执行完出栈，下一行代码才能进栈执行。</p><p> a. 创建变量a，放到当前栈内存变量存储区域中<br> b. 创建一个值12，把它存储到当前栈内存值区域中(复杂的引用类型值不是这样的)<br> c.  =为赋值，其实赋值是让变量和值相互关联的过程。</p><p><strong>let b=a;</strong></p><p> a和b均指向12</p><p><strong>b=13;</strong></p><p> b指向13，不指向12</p><h5 id="复杂值-引用类型值-的存储，又分成了三个步骤："><a href="#复杂值-引用类型值-的存储，又分成了三个步骤：" class="headerlink" title="复杂值(引用类型值)的存储，又分成了三个步骤："></a>复杂值(引用类型值)的存储，又分成了三个步骤：</h5><ol>  <li>在内存中分配出一块新内存，用来存储引用类型值(堆内存=&gt;heap) =&gt;内存中有一个16进制地址</li>  <li>把对象中的键值对依次存储到堆内存中</li>  <li>把堆内存地址和变量关联起来</li></ol><p>基本类型：按值操作(直接操作的是值)，所以也叫做值类型<br>引用类型：操作的是堆内存的地址(按引用地址操作的)</p><p>画图分析底层原理。<br><img src="https://github.com/starstarb/clouding/raw/master/js/js.png" alt></p><h3 id="JS中的数据类型检测"><a href="#JS中的数据类型检测" class="headerlink" title="JS中的数据类型检测"></a>JS中的数据类型检测</h3><ul>  <li>    <p>typeof[val] :用来检测数据类型的运算符</p>  </li>  <li>    <p>instanceof: 用来检测当前实例是否属于某个类</p>  </li>  <li>    <p>constructor: 基于构造函数检测数据类型(也是基于类的方式)</p>  </li>  <li>    <p>Object.prototye.toString.call(): 检测数据类型最好的办法<br><img src="https://github.com/starstarb/clouding/raw/master/js/%E9%98%BF%E9%87%8C%E9%9D%A2%E8%AF%95%E9%A2%98.png" alt>    </p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre>          </td>          <td class="code">            <pre><span class="line"></span><br><span class="line">// let n=[10,20];</span><br><span class="line">// let m=n;</span><br><span class="line">// let x=m;</span><br><span class="line">// m[0]=100;</span><br><span class="line">// x=[30,40];</span><br><span class="line">// x[0]=200;</span><br><span class="line">// m=x;</span><br><span class="line">// m[1]=300;</span><br><span class="line">// n[2]=400;</span><br><span class="line">// console.log(n,m,x);</span><br><span class="line"></span><br><span class="line">// let a=&#123;</span><br><span class="line">//     n:1</span><br><span class="line">// &#125;;</span><br><span class="line">// let b=a;</span><br><span class="line">// a.x=a=&#123;</span><br><span class="line">//     n:2</span><br><span class="line">// &#125;;</span><br><span class="line"></span><br><span class="line">// console.log(a.x);</span><br><span class="line">// console.log(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">   基于typeof检测出来的结果</span><br><span class="line">   1. 首先是一个字符串</span><br><span class="line">   2. 字符串中包含对应的类型</span><br><span class="line">   局限性：</span><br><span class="line">     1. typeof null-&gt; &quot;object&quot; ，但是null并不是对象</span><br><span class="line">     2. 基于typeof无法细分出当前值是普通对象还是数组对象，因为只要是对象数据类型，返回的结果都是“Object”</span><br><span class="line">*/</span><br><span class="line">// console.log(typeof 1);</span><br><span class="line">// let a=NaN;</span><br><span class="line">// console.log(typeof a);//=&gt;&apos;number&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">console.log(typeof typeof typeof []);</span><br><span class="line"></span><br><span class="line">//=&gt;typeof []=&gt;&quot;object&quot;</span><br><span class="line">//typeof &quot;object&quot; =&gt; &quot;string&quot;</span><br><span class="line">//因为typeof检测的结果都是字符串，所以只要两个及以上同时检测，最后结果必然是&quot;string&quot;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li></ul><p><img src="https://github.com/starstarb/clouding/raw/master/js/typeof.png" alt></p><h3 id="JS中的操作语句：判断、循环"><a href="#JS中的操作语句：判断、循环" class="headerlink" title="JS中的操作语句：判断、循环"></a>JS中的操作语句：判断、循环</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;test&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://javastar.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://javastar.club/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java设计模式学习(二)</title>
    <link href="http://javastar.club/archives/b4a8b758.html"/>
    <id>http://javastar.club/archives/b4a8b758.html</id>
    <published>2019-08-19T07:29:49.000Z</published>
    <updated>2019-08-23T03:45:52.239Z</updated>
    
    <content type="html"><![CDATA[<p>代码进阶</p><a id="more"></a><h3 id="相关面试题"><a href="#相关面试题" class="headerlink" title="相关面试题"></a>相关面试题</h3><p>原型设计模式问题：</p><ol>  <li>    <p>有请使用UML类图画出原型模式核心角色</p>  </li>  <li>    <p>原型设计模式的深拷贝和浅拷贝是什么，并写出深拷贝的两种方式的源码(重写clone方法来实现深拷贝、使用序列化来实现深拷贝)</p>  </li>  <li>    <p>在Spring框架中哪里使用到原型模式，并对源码进行分析。</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br></pre>          </td>          <td class="code">            <pre><span class="line">beans.xml</span><br><span class="line">&lt;bean id=&quot;id01&quot; class=&quot;com.atguigu.spring.bean.Monster&quot; scope=&quot;prototype&quot;/&gt;</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>Spring中原型bean的创建，就是原型模式的应用。</p>  </li>  <li>    <p>代码分析+Debug源码</p>  </li>  <li>    <p>设计模式的七大原则：<br>要求：<br>a. 七大设计原则核心思想<br>b. 能够以类图的说明设计原则<br>c.      在项目实际开发中，你在哪里使用到了ocp原则。</p>  </li></ol><blockquote>  <p>设计模式常用的七大原则有：<br> 单一职责原则、接口隔离原则、依赖倒转原则、里氏替代原则、开闭原则ocp、迪米特原则、合成服用原则</p></blockquote><ol start="7">  <li>    <p>      金融借贷平台项目：<br>借贷平台的订单，有审核-发布-抢单等等步骤，随着操作的不同，会改变订单的状态，项目中的这个模块实现就会使用到状态模式，请你使用状态模式进行设计，并完成实际代码。    </p>    <p>问题分析：<br> 设计模式，实际开发经验。</p>  </li>  <li>    <p>解释器设计模式<br> a. 介绍解释器设计模式是什么？<br> b. 画出解释器设计模式的UML类图，分析设计模式中的各个角色是什么？<br>      c. 请说明Spring的框架中，哪里使用到了解释器设计模式，并做到源码级别的分析。</p>    <p> 源码剖析：</p>    <ul>      <li>Spring框架中SpelExpressionParser就使用到解释器模式</li>      <li>代码分析+Debug源码+模式角色分析说明</li>    </ul>  </li>  <li>    <p>单例设计模式一共有几种实现方式？请分别用代码实现，并说明各个实现方式的优点和缺点？</p>    <ul>      <li>饿汉式 两种</li>      <li>懒汉式 三种</li>      <li>双重检查 </li>      <li>静态内部类</li>      <li>枚举</li>    </ul>  </li></ol><h3 id="设计模式的重要性"><a href="#设计模式的重要性" class="headerlink" title="设计模式的重要性"></a>设计模式的重要性</h3><p> 软件工程中，design pattern 是对软件设计中普遍存在的各种问题，所提出的解决方案。</p><ol>  <li>客户提出新功能</li>  <li>项目开发完后，接手维护新项目</li>  <li>大厂面试</li>  <li>成为一名极客精神，独立开发</li>  <li>设计模式在软件中哪里？ 面向对象=&gt; 功能模块[设计模式+算法和数据结构]=&gt; 框架=&gt; 架构[服务器集群]</li></ol><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><p>  <strong>应用场景-&gt;设计模式-&gt;剖析原理-&gt;分析实现步骤(UML图解)-&gt;代码实现-&gt;框架或项目源码分析(找到使用的地方),对步骤进行个人讲解</strong></p><h3 id="设计模式的目的"><a href="#设计模式的目的" class="headerlink" title="设计模式的目的"></a>设计模式的目的</h3><ol>  <li>    <p>代码重用性</p>  </li>  <li>    <p>可读性(编程规范性，驼峰命名法)</p>  </li>  <li>    <p>可扩展性(增加新功能，不断改进重构设计模式)</p>  </li>  <li>    <p>可靠性</p>  </li>  <li>    <p>使程序呈现高内聚、低耦合的特性</p>  </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码进阶&lt;/p&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://javastar.club/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://javastar.club/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>VSCode快捷键</title>
    <link href="http://javastar.club/archives/1cfdae89.html"/>
    <id>http://javastar.club/archives/1cfdae89.html</id>
    <published>2019-08-18T08:10:52.000Z</published>
    <updated>2019-08-23T03:39:17.640Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="VSCode" scheme="http://javastar.club/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="http://javastar.club/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>WireShark学习</title>
    <link href="http://javastar.club/archives/6e2df76f.html"/>
    <id>http://javastar.club/archives/6e2df76f.html</id>
    <published>2019-08-18T03:34:41.000Z</published>
    <updated>2019-08-23T03:26:23.954Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX18x8rlnW9hvuHzCkToXQO8FaCOgJYGfXCUYb70Q6887azdChRpYRpiiQA2uZC24C0cRLqwqZBko9fD3VMkS4CpfiVhfOd0v8PPNgQ45fuOtJSULG7Ad9BlA/sLGwkTQF3v+V08nv60qqSBAVbZQiBNrrMic8bsTxHw=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="wireshark" scheme="http://javastar.club/categories/wireshark/"/>
    
    
      <category term="wireshark" scheme="http://javastar.club/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>二进制安全基础学习</title>
    <link href="http://javastar.club/archives/217f25fc.html"/>
    <id>http://javastar.club/archives/217f25fc.html</id>
    <published>2019-08-15T07:52:20.000Z</published>
    <updated>2019-08-23T03:19:05.812Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="渗透学习" scheme="http://javastar.club/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="二进制" scheme="http://javastar.club/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>网络安全入门学习</title>
    <link href="http://javastar.club/archives/aadc8bfc.html"/>
    <id>http://javastar.club/archives/aadc8bfc.html</id>
    <published>2019-08-10T14:14:07.000Z</published>
    <updated>2019-08-16T03:09:17.687Z</updated>
    
    <content type="html"><![CDATA[<p>看雪<br><img src="https://github.com/starstarb/clouding/raw/master/head/9dd29ca8fff2fd1285d5fee5086d5dab.jpg" alt></p><a id="more"></a><p>图1：<br><img src="https://github.com/starstarb/clouding/raw/master/security/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" alt></p><p>图2：<br><img src="https://github.com/starstarb/clouding/raw/master/security/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E&amp;%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%8E%9F%E5%9B%BE%E5%8E%BB%E6%8E%89zip%E5%90%8E%E7%BC%80.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看雪&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/9dd29ca8fff2fd1285d5fee5086d5dab.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="网络安全" scheme="http://javastar.club/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://javastar.club/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>协同过滤算法</title>
    <link href="http://javastar.club/archives/a10feb4a.html"/>
    <id>http://javastar.club/archives/a10feb4a.html</id>
    <published>2019-08-10T08:09:37.000Z</published>
    <updated>2019-08-16T03:12:08.037Z</updated>
    
    <content type="html"><![CDATA[<p>协同过滤算法:<a href="https://blog.csdn.net/DanyHgc/article/details/78910379" rel="external nofollow noopener noreferrer" target="_blank">参考</a><br><img src="https://github.com/starstarb/clouding/raw/master/head/39c919dcb1e7359106750713718e02a4.jpg" alt></p><a id="more"></a><h3 id="什么是协同过滤"><a href="#什么是协同过滤" class="headerlink" title="什么是协同过滤"></a>什么是协同过滤</h3><p>协同过滤是利用集体智慧的一个典型方法。要理解什么是协同过滤 (Collaborative Filtering, 简称  CF)，首先想一个简单的问题，如果你现在想看个电影，但你不知道具体看哪部，你会怎么做？大部分的人会问问周围的朋友，看看最近有什么好看的电影推荐，而我们一般更倾向于从口味比较类似的朋友那里得到推荐。<br>这就是协同过滤的核心思想。<br>换句话说，就是借鉴和你相关人群的观点来进行推荐，很好理解。</p><h3 id="协同过滤的实现"><a href="#协同过滤的实现" class="headerlink" title="协同过滤的实现"></a>协同过滤的实现</h3><p>要实现协同过滤的推荐算法，要进行以下三个步骤：</p><ol>  <li>收集数据</li>  <li>找到相似用户和物品</li>  <li>进行推荐</li></ol><p><strong>1 收集数据</strong></p><p>  这里的数据指的都是用户的历史行为数据，比如用户的购买历史，关注，收藏行为，或者发表了某些评论，给某个物品打了多少分等等，这些都可以用来作为数据供推荐算法使用，服务于推荐算法。需要特别指出的在于，不同的数据准确性不同，粒度也不同，在使用时需要考虑到噪音所带来的影响。</p><p><strong>2 找到相似用户和物品</strong></p><p>这一步也很简单，其实就是计算用户间以及物品间的相似度。以下是几种计算相似度的方法：<br><img src="https://github.com/starstarb/clouding/raw/master/python/20171227113119804.png" alt></p><p><strong>3 进行推荐</strong></p><p>在知道了如何计算相似度后，就可以进行推荐了。</p><p>在协同过滤中，有两种主流方法：</p><ol>  <li>基于用户的协同过滤</li>  <li>基于物品的协同过滤<br>具体怎么来阐述他们的原理呢，看个图大家就明白了</li></ol><p>基于用户的 CF  的基本思想相当简单，基于用户对物品的偏好找到相邻邻居用户，然后将邻居用户喜欢的推荐给当前用户。计算上，就是将一个用户对所有物品的偏好作为一个向量来计算用户之间的相似度，找到  K 邻居后，根据邻居的相似度权重以及他们对物品的偏好，预测当前用户没有偏好的未涉及物品，计算得到一个排序的物品列表作为推荐。 下图给出了一个例子，对于用户  A，根据用户的历史偏好，这里只计算得到一个邻居 - 用户 C，然后将用户 C 喜欢的物品 D 推荐给用户 A。<br><img src="https://github.com/starstarb/clouding/raw/master/python/xitongguolv1.png" alt></p><p> 基于物品的 CF 的原理和基于用户的 CF  类似，只是在计算邻居时采用物品本身，而不是从用户的角度，即基于用户对物品的偏好找到相似的物品，然后根据用户的历史偏好，推荐相似的物品给他。从计算的角度看，就是将所有用户对某个物品的偏好作为一个向量来计算物品之间的相似度，得到物品的相似物品后，根据用户历史的偏好预测当前用户还没有表示偏好的物品，计算得到一个排序的物品列表作为推荐。下图给出了一个例子，对于物品  A，根据所有用户的历史偏好，喜欢物品 A 的用户都喜欢物品 C，得出物品 A 和物品 C 比较相似，而用户 C 喜欢物品 A，那么可以推断出用户 C  可能也喜欢物品 C。<br><img src="https://github.com/starstarb/clouding/raw/master/python/CF1.png" alt></p><h3 id="算法存在的问题"><a href="#算法存在的问题" class="headerlink" title="算法存在的问题"></a>算法存在的问题</h3><p>这个算法实现起来也比较简单，但是在实际应用中有时候也会有问题的。</p><p>比如一些非常流行的商品可能很多人都喜欢，这种商品推荐给你就没什么意义了，所以计算的时候需要对这种商品加一个权重或者把这种商品完全去掉也行。</p><p>再有，对于一些通用的东西，比如买书的时候的工具书，如现代汉语词典，新华字典神马的，通用性太强了，推荐也没什么必要了。</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>  　　在非社交网络的网站中，内容内在的联系是很重要的推荐原则，它比基于相似用户的推荐原则更加有效。比如在购书网站上，当你看一本书的时候，推荐引擎会给你推荐相关的书籍，这个推荐的重要性远远超过了网站首页对该用户的综合推荐。可以看到，在这种情况下，Item  CF 的推荐成为了引导用户浏览的重要手段。同时 Item CF  便于为推荐做出解释，在一个非社交网络的网站中，给某个用户推荐一本书，同时给出的解释是某某和你有相似兴趣的人也看了这本书，这很难让用户信服，因为用户可能根本不认识那个人；但如果解释说是因为这本书和你以前看的某本书相似，用户可能就觉得合理而采纳了此推荐。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre>      </td>      <td class="code">        <pre><span class="line">python2.7</span><br><span class="line"># -*- coding=utf-8 -*-</span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line">import sys</span><br><span class="line">from texttable import Texttable</span><br><span class="line"></span><br><span class="line">#   使用 |A&amp;B|/sqrt(|A || B |)计算余弦距离</span><br><span class="line"></span><br><span class="line">def calcCosDistSpe(user1,user2):</span><br><span class="line">    avg_x=0.0</span><br><span class="line">    avg_y=0.0</span><br><span class="line">    for key in user1:</span><br><span class="line">        avg_x+=key[1]</span><br><span class="line">    avg_x=avg_x/len(user1)</span><br><span class="line"></span><br><span class="line">    for key in user2:</span><br><span class="line">        avg_y+=key[1]</span><br><span class="line">    avg_y=avg_y/len(user2)</span><br><span class="line"></span><br><span class="line">    u1_u2=0.0</span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[1] &gt; avg_x and key2[1]&gt;avg_y and key1[0]==key2[0]:</span><br><span class="line">                u1_u2+=1</span><br><span class="line">    u1u2=len(user1)*len(user2)*1.0</span><br><span class="line">    sx_sy=u1_u2/math.sqrt(u1u2)</span><br><span class="line">    return sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   计算余弦距离</span><br><span class="line"></span><br><span class="line">def calcCosDist(user1,user2):</span><br><span class="line">    sum_x=0.0</span><br><span class="line">    sum_y=0.0</span><br><span class="line">    sum_xy=0.0</span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[0]==key2[0] :</span><br><span class="line">                sum_xy+=key1[1]*key2[1]</span><br><span class="line">                sum_y+=key2[1]*key2[1]</span><br><span class="line">                sum_x+=key1[1]*key1[1]</span><br><span class="line"></span><br><span class="line">    if sum_xy == 0.0 :</span><br><span class="line">        return 0</span><br><span class="line">    sx_sy=math.sqrt(sum_x*sum_y) </span><br><span class="line">    return sum_xy/sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   相似余弦距离</span><br><span class="line"></span><br><span class="line">def calcSimlaryCosDist(user1,user2):</span><br><span class="line">    sum_x=0.0</span><br><span class="line">    sum_y=0.0</span><br><span class="line">    sum_xy=0.0</span><br><span class="line">    avg_x=0.0</span><br><span class="line">    avg_y=0.0</span><br><span class="line">    for key in user1:</span><br><span class="line">        avg_x+=key[1]</span><br><span class="line">    avg_x=avg_x/len(user1)</span><br><span class="line"></span><br><span class="line">    for key in user2:</span><br><span class="line">        avg_y+=key[1]</span><br><span class="line">    avg_y=avg_y/len(user2)</span><br><span class="line"></span><br><span class="line">    for key1 in user1:</span><br><span class="line">        for key2 in user2:</span><br><span class="line">            if key1[0]==key2[0] :</span><br><span class="line">                sum_xy+=(key1[1]-avg_x)*(key2[1]-avg_y)</span><br><span class="line">                sum_y+=(key2[1]-avg_y)*(key2[1]-avg_y)</span><br><span class="line">        sum_x+=(key1[1]-avg_x)*(key1[1]-avg_x)</span><br><span class="line"></span><br><span class="line">    if sum_xy == 0.0 :</span><br><span class="line">        return 0</span><br><span class="line">    sx_sy=math.sqrt(sum_x*sum_y) </span><br><span class="line">    return sum_xy/sx_sy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   读取文件</span><br><span class="line"></span><br><span class="line">def readFile(file_name):</span><br><span class="line">    contents_lines=[]</span><br><span class="line">    f=open(file_name,&quot;r&quot;)</span><br><span class="line">    contents_lines=f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    return contents_lines</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   解压rating信息，格式：用户id\t硬盘id\t用户rating\t时间</span><br><span class="line">#   输入：数据集合</span><br><span class="line">#   输出:已经解压的排名信息</span><br><span class="line">#</span><br><span class="line">def getRatingInformation(ratings):</span><br><span class="line">    rates=[]</span><br><span class="line">    for line in ratings:</span><br><span class="line">        rate=line.split(&quot;\t&quot;)</span><br><span class="line">        rates.append([int(rate[0]),int(rate[1]),int(rate[2])])</span><br><span class="line">    return rates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   生成用户评分的数据结构</span><br><span class="line">#   </span><br><span class="line">#   输入:所以数据 [[2,1,5],[2,4,2]...]</span><br><span class="line">#   输出:1.用户打分字典 2.电影字典</span><br><span class="line">#   使用字典，key是用户id，value是用户对电影的评价，</span><br><span class="line">#   rate_dic[2]=[(1,5),(4,2)].... 表示用户2对电影1的评分是5，对电影4的评分是2</span><br><span class="line"></span><br><span class="line">def createUserRankDic(rates):</span><br><span class="line">    user_rate_dic=&#123;&#125;</span><br><span class="line">    item_to_user=&#123;&#125;</span><br><span class="line">    for i in rates:</span><br><span class="line">        user_rank=(i[1],i[2])</span><br><span class="line">        if i[0] in user_rate_dic:</span><br><span class="line">            user_rate_dic[i[0]].append(user_rank)</span><br><span class="line">        else:</span><br><span class="line">            user_rate_dic[i[0]]=[user_rank]</span><br><span class="line"></span><br><span class="line">        if i[1] in item_to_user:</span><br><span class="line">            item_to_user[i[1]].append(i[0])</span><br><span class="line">        else:</span><br><span class="line">            item_to_user[i[1]]=[i[0]]</span><br><span class="line"></span><br><span class="line">    return user_rate_dic,item_to_user</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   计算与指定用户最相近的邻居</span><br><span class="line">#   输入:指定用户ID，所以用户数据，所以物品数据</span><br><span class="line">#   输出:与指定用户最相邻的邻居列表</span><br><span class="line">#</span><br><span class="line">def calcNearestNeighbor(userid,users_dic,item_dic):</span><br><span class="line">    neighbors=[]</span><br><span class="line">    #neighbors.append(userid)</span><br><span class="line">    for item in users_dic[userid]:</span><br><span class="line">        for neighbor in item_dic[item[0]]:</span><br><span class="line">            if neighbor != userid and neighbor not in neighbors: </span><br><span class="line">                neighbors.append(neighbor)</span><br><span class="line"></span><br><span class="line">    neighbors_dist=[]</span><br><span class="line">    for neighbor in neighbors:</span><br><span class="line">        dist=calcSimlaryCosDist(users_dic[userid],users_dic[neighbor])  #calcSimlaryCosDist  calcCosDist calcCosDistSpe</span><br><span class="line">        neighbors_dist.append([dist,neighbor])</span><br><span class="line">    neighbors_dist.sort(reverse=True)</span><br><span class="line">    #print neighbors_dist</span><br><span class="line">    return  neighbors_dist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   使用UserFC进行推荐</span><br><span class="line">#   输入：文件名,用户ID,邻居数量</span><br><span class="line">#   输出：推荐的电影ID,输入用户的电影列表,电影对应用户的反序表，邻居列表</span><br><span class="line">#</span><br><span class="line">def recommendByUserFC(file_name,userid,k=5):</span><br><span class="line"></span><br><span class="line">    #读取文件数据</span><br><span class="line">    test_contents=readFile(file_name)</span><br><span class="line"></span><br><span class="line">    #文件数据格式化成二维数组 List[[用户id,电影id,电影评分]...] </span><br><span class="line">    test_rates=getRatingInformation(test_contents)</span><br><span class="line"></span><br><span class="line">    #格式化成字典数据 </span><br><span class="line">    #    1.用户字典：dic[用户id]=[(电影id,电影评分)...]</span><br><span class="line">    #    2.电影字典：dic[电影id]=[用户id1,用户id2...]</span><br><span class="line">    test_dic,test_item_to_user=createUserRankDic(test_rates)</span><br><span class="line"></span><br><span class="line">    #寻找邻居</span><br><span class="line">    neighbors=calcNearestNeighbor(userid,test_dic,test_item_to_user)[:k]</span><br><span class="line"></span><br><span class="line">    recommend_dic=&#123;&#125;</span><br><span class="line">    for neighbor in neighbors:</span><br><span class="line">        neighbor_user_id=neighbor[1]</span><br><span class="line">        movies=test_dic[neighbor_user_id]</span><br><span class="line">        for movie in movies:</span><br><span class="line">            #print movie</span><br><span class="line">            if movie[0] not in recommend_dic:</span><br><span class="line">                recommend_dic[movie[0]]=neighbor[0]</span><br><span class="line">            else:</span><br><span class="line">                recommend_dic[movie[0]]+=neighbor[0]</span><br><span class="line">    #print len(recommend_dic)</span><br><span class="line"></span><br><span class="line">    #建立推荐列表</span><br><span class="line">    recommend_list=[]</span><br><span class="line">    for key in recommend_dic:</span><br><span class="line">        #print key</span><br><span class="line">        recommend_list.append([recommend_dic[key],key])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    recommend_list.sort(reverse=True)</span><br><span class="line">    #print recommend_list</span><br><span class="line">    user_movies = [ i[0] for i in test_dic[userid]]</span><br><span class="line"></span><br><span class="line">    return [i[1] for i in recommend_list],user_movies,test_item_to_user,neighbors</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#   获取电影的列表</span><br><span class="line"></span><br><span class="line">def getMoviesList(file_name):</span><br><span class="line">    #print sys.getdefaultencoding()</span><br><span class="line">    movies_contents=readFile(file_name)</span><br><span class="line">    movies_info=&#123;&#125;</span><br><span class="line">    for movie in movies_contents:</span><br><span class="line">        movie_info=movie.split(&quot;|&quot;)</span><br><span class="line">        movies_info[int(movie_info[0])]=movie_info[1:]</span><br><span class="line">    return movies_info</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#主程序</span><br><span class="line">#输入 ： 测试数据集合</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    reload(sys)</span><br><span class="line">    sys.setdefaultencoding(&apos;utf-8&apos;)</span><br><span class="line">    movies=getMoviesList(&quot;/Users/wuyinghao/Downloads/ml-100k/u.item&quot;)</span><br><span class="line">    recommend_list,user_movie,items_movie,neighbors=recommendByUserFC(&quot;/Users/wuyinghao/Downloads/ml-100k/u.data&quot;,179,80)</span><br><span class="line">    neighbors_id=[ i[1] for i in neighbors]</span><br><span class="line">    table = Texttable()</span><br><span class="line">    table.set_deco(Texttable.HEADER)</span><br><span class="line">    table.set_cols_dtype([&apos;t&apos;,  # text </span><br><span class="line">                          &apos;t&apos;,  # float (decimal)</span><br><span class="line">                          &apos;t&apos;]) # automatic</span><br><span class="line">    table.set_cols_align([&quot;l&quot;, &quot;l&quot;, &quot;l&quot;])</span><br><span class="line">    rows=[]</span><br><span class="line">    rows.append([u&quot;movie name&quot;,u&quot;release&quot;, u&quot;from userid&quot;])</span><br><span class="line">    for movie_id in recommend_list[:20]:</span><br><span class="line">        from_user=[]</span><br><span class="line">        for user_id in items_movie[movie_id]:</span><br><span class="line">            if user_id in neighbors_id:</span><br><span class="line">                from_user.append(user_id)</span><br><span class="line">        rows.append([movies[movie_id][0],movies[movie_id][1],&quot;&quot;])</span><br><span class="line">    table.add_rows(rows)</span><br><span class="line">    print table.draw()</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre>      </td>      <td class="code">        <pre><span class="line">结果</span><br><span class="line">movie name                release     </span><br><span class="line">=======================================================</span><br><span class="line">Contact (1997)                11-Jul-1997               </span><br><span class="line">Scream (1996)                 20-Dec-1996               </span><br><span class="line">Liar Liar (1997)              21-Mar-1997               </span><br><span class="line">Saint, The (1997)             14-Mar-1997               </span><br><span class="line">English Patient, The (1996)   15-Nov-1996               </span><br><span class="line">Titanic (1997)                01-Jan-1997               </span><br><span class="line">Air Force One (1997)          01-Jan-1997               </span><br><span class="line">Star Wars (1977)              01-Jan-1977               </span><br><span class="line">Conspiracy Theory (1997)      08-Aug-1997               </span><br><span class="line">Toy Story (1995)              01-Jan-1995               </span><br><span class="line">Fargo (1996)                  14-Feb-1997</span><br></pre>      </td>    </tr>  </table></figure><p>数据集： <a href="http://files.grouplens.org/datasets/movielens/" rel="external nofollow noopener noreferrer" target="_blank">http://files.grouplens.org/datasets/movielens/</a></p><p>下载ml-100k.zip即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;协同过滤算法:&lt;a href=&quot;https://blog.csdn.net/DanyHgc/article/details/78910379&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;参考&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/39c919dcb1e7359106750713718e02a4.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://javastar.club/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>cmd快捷键</title>
    <link href="http://javastar.club/archives/d63050d8.html"/>
    <id>http://javastar.club/archives/d63050d8.html</id>
    <published>2019-08-10T02:58:29.000Z</published>
    <updated>2019-08-10T03:01:44.313Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/starstarb/clouding/raw/master/picture/5.jpg" alt></p><a id="more"></a><p>CMD命令：开始－&gt;运行－&gt;键入cmd或command（在命令行里可以看到系统版本、文件系统版本）<br>chcp  修改默认字符集<br>chcp 936默认中文<br>chcp 65001</p><ol>  <li>appwiz.cpl：程序和功能 </li>  <li>calc：启动计算器 </li></ol><ol start="5">  <li>    <p>chkdsk.exe：Chkdsk磁盘检查（管理员身份运行命令提示符） </p>  </li>  <li>    <p>cleanmgr: 打开磁盘清理工具 </p>  </li></ol><ol start="9">  <li>    <p>cmd.exe：CMD命令提示符 </p>  </li>  <li>    <p>自动关机命令<br>　 Shutdown -s -t 600：表示600秒后自动关机<br>　 shutdown -a ：可取消定时关机<br>　      Shutdown -r -t 600：表示600秒后自动重启      　</p>  </li>  <li>    <p>CompMgmtLauncher：计算机管理 </p>  </li>  <li>    <p>compmgmt.msc：计算机管理 </p>  </li>  <li>    <p>credwiz：备份或还原储存的用户名和密码 </p>  </li>  <li>    <p>control：控制面版 </p>  </li>  <li>    <p>dcomcnfg：打开系统组件服务 </p>  </li>  <li>    <p>devmgmt.msc：设备管理器 </p>  </li>  <li>    <p>desk.cpl：屏幕分辨率 </p>  </li>  <li>    <p>dfrgui：优化驱动器 Windows 7→dfrg.msc：磁盘碎片整理程序 </p>  </li>  <li>    <p>dialer：电话拨号程序 </p>  </li>  <li>    <p>diskmgmt.msc：磁盘管理 </p>  </li>  <li>    <p>dvdplay：DVD播放器 </p>  </li>  <li>    <p>dxdiag：检查DirectX信息 </p>  </li>  <li>    <p>eudcedit：造字程序 </p>  </li>  <li>    <p>eventvwr：事件查看器 </p>  </li>  <li>    <p>explorer：打开资源管理器 </p>  </li>  <li>    <p>Firewall.cpl：Windows防火墙 </p>  </li>  <li>    <p>fsmgmt.msc：共享文件夹管理器 </p>  </li>  <li>    <p>gpedit.msc：组策略 </p>  </li>  <li>    <p>hdwwiz.cpl：设备管理器 </p>  </li>  <li>    <p>inetcpl.cpl：Internet属性 </p>  </li>  <li>    <p>intl.cpl：区域 </p>  </li>  <li>    <p>iexpress：木马捆绑工具，系统自带 </p>  </li>  <li>    <p>joy.cpl：游戏控制器 </p>  </li>  <li>    <p>logoff：注销命令 </p>  </li>  <li>    <p>lusrmgr.msc：本地用户和组 </p>  </li>  <li>    <p>lpksetup：语言包安装/删除向导，安装向导会提示下载语言包 </p>  </li>  <li>    <p>lusrmgr.msc：本机用户和组 </p>  </li>  <li>    <p>main.cpl：鼠标属性 </p>  </li>  <li>    <p>mmsys.cpl：声音 </p>  </li>  <li>    <p>mem.exe：显示内存使用情况（如果直接运行无效，可以先管理员身份运行命令提示符，在命令提示符里输入mem.exe&gt;d:a.txt      即可打开d盘查看a.txt，里面的就是内存使用情况了。当然什么盘什么文件名可自己决定。） </p>  </li></ol><ol start="47">  <li>    <p>mmc：打开控制台 </p>  </li>  <li>    <p>mobsync：同步命令 </p>    <ol start="50">      <li>Msconfig.exe：系统配置实用程序 </li>    </ol>  </li>  <li>    <p>msdt：微软支持诊断工具 </p>  </li>  <li>    <p>msinfo32：系统信息 </p>  </li>  <li>    <p>mspaint：画图 </p>  </li>  <li>    <p>Msra：Windows远程协助 </p>  </li>  <li>    <p>mstsc：远程桌面连接 </p>  </li>  <li>    <p>NAPCLCFG.MSC：客户端配置 </p>  </li>  <li>    <p>ncpa.cpl：网络连接 </p>  </li>  <li>    <p>narrator：屏幕“讲述人” </p>  </li>  <li>    <p>Netplwiz：高级用户帐户控制面板，设置登陆安全相关的选项 </p>  </li>  <li>    <p>netstat : an(TC)命令检查接口 </p>  </li>  <li>    <p>notepad：打开记事本 </p>  </li>  <li>    <p>Nslookup：IP地址侦测器 </p>  </li>  <li>    <p>odbcad32：ODBC数据源管理器 </p>  </li>  <li>    <p>OptionalFeatures：打开“打开或关闭Windows功能”对话框 </p>  </li></ol><ol start="65">  <li>osk：打开屏幕键盘 </li>  <li>perfmon.msc：计算机性能监测器 </li>  <li>perfmon：计算机性能监测器 </li>  <li>PowerShell：提供强大远程处理能力 </li>  <li>printmanagement.msc：打印管理 </li>  <li>powercfg.cpl：电源选项 </li>  <li>psr：问题步骤记录器 </li>  <li>Rasphone：网络连接 </li>  <li>Recdisc：创建系统修复光盘 </li>  <li>Resmon：资源监视器 </li>  <li>Rstrui：系统还原 </li>  <li>regedit.exe：注册表 </li>  <li>regedt32：注册表编辑器 </li>  <li>rsop.msc：组策略结果集 </li>  <li>sdclt：备份状态与配置，就是查看系统是否已备份 </li>  <li>secpol.msc：本地安全策略 </li>  <li>services.msc：本地服务设置 </li>  <li>sfc /scannow：扫描错误并复原/windows文件保护 </li>  <li>sfc.exe：系统文件检查器 </li>  <li>shrpubw：创建共享文件夹 </li>  <li>sigverif：文件签名验证程序 </li>  <li>slui：Windows激活，查看系统激活信息 </li>  <li>slmgr.vbs -dlv ：显示详细的许可证信息<br>　 slmgr.vbs -dli ：显示许可证信息<br>　 slmgr.vbs    -xpr ：当前许可证截止日期<br>　 slmgr.vbs -dti ：显示安装ID 以进行脱机激<br>　 slmgr.vbs -ipk    ：(Product Key)安装产品密钥<br>　 slmgr.vbs -ato ：激活Windows<br>　 slmgr.vbs -cpky    ：从注册表中清除产品密钥（防止泄露引起的攻击）<br>　 slmgr.vbs -ilc ：(License file)安装许可证<br>　    slmgr.vbs -upk ：卸载产品密钥<br>　 slmgr.vbs -skms ：(name[ort] )批量授权 </li>  <li>snippingtool：截图工具，支持无规则截图 </li>  <li>soundrecorder：录音机，没有录音时间的限制 </li>  <li>StikyNot：便笺 </li>  <li>sysdm.cpl：系统属性 </li>  <li>sysedit：系统配置编辑器 </li>  <li>syskey：系统加密，一旦加密就不能解开，保护系统的双重密码 </li>  <li>taskmgr：任务管理器（旧版） </li>  <li>TM任务管理器（新版） </li>  <li>taskschd.msc：任务计划程序 </li>  <li>timedate.cpl：日期和时间 </li>  <li>UserAccountControlSettings用户账户控制设置 </li>  <li>utilman：辅助工具管理器 </li>  <li>wf.msc：高级安全Windows防火墙 </li>  <li>WFS：Windows传真和扫描 </li>  <li>wiaacmgr：扫描仪和照相机向导 </li>  <li>winver：关于Windows <ol start="104">      <li>wmimgmt.msc：打开windows管理体系结构(WMI) </li>      <li>write：写字板 </li>    </ol>  </li>  <li>wscui.cpl：操作中心 </li>  <li>wscript：windows脚本宿主设置 </li>  <li>wuapp：Windows更新</li></ol><p>　　1. gpedit.msc—–组策略</p><p>　　2. sndrec32——-录音机</p><p>　　3. Nslookup——-IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows  NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。</p><p>　　4. explorer——-打开资源管理器 </p><p>　　5. logoff———注销命令</p><p>　　6. shutdown——-60秒倒计时关机命令</p><p>　　7. lusrmgr.msc—-本机用户和组</p><p>　　8. services.msc—本地服务设置</p><p>　　9. oobe/msoobe /a—-检查XP是否激活</p><p>　　10. notepad——–打开记事本 </p><p>　　11. cleanmgr——-垃圾整理</p><p>　　12. net start messenger—-开始信使服务</p><p>　　13. compmgmt.msc—计算机管理</p><p>　　14. net stop messenger—–停止信使服务</p><p>　　15. conf———–启动netmeeting</p><p>　　16. dvdplay——–DVD播放器</p><p>　　17. charmap——–启动字符映射表</p><p>　　18. diskmgmt.msc—磁盘管理实用程序</p><p>　　19. calc———–启动计算器</p><p>　　20. dfrg.msc——-磁盘碎片整理程序</p><p>　　21. chkdsk.exe—–Chkdsk磁盘检查</p><p>　　22. devmgmt.msc— 设备管理器 </p><p>　　23. regsvr32 /u *.dll—-停止dll文件运行</p><p>　　24. drwtsn32—— 系统医生</p><p>　　25. rononce -p—-15秒关机</p><p>　　26. dxdiag———检查DirectX信息</p><p>　　27. regedt32——-注册表编辑器 </p><p>　　28. Msconfig.exe—系统配置实用程序</p><p>　　29. rsop.msc——-组策略结果集</p><p>　　30. mem.exe——–显示内存使用情况</p><p>　　31. regedit.exe—-注册表</p><p>　　32. winchat——–XP自带局域网聊天</p><p>　　33. progman——–程序管理器</p><p>　　34. winmsd———系统信息</p><p>　　35. perfmon.msc—-计算机性能监测程序</p><p>　　36. winver———检查Windows版本</p><p>　　37. sfc /scannow—–扫描错误并复原</p><p>　　38. taskmgr—–任务管理器（2000/xp/2003</p><p>　　39. winver———检查Windows版本</p><p>　　40. wmimgmt.msc—-打开windows管理体系结构(WMI)</p><p>　　41. wupdmgr——–windows更新程序</p><p>　　42. wscript——–windows脚本宿主设置</p><p>　　43. write———-写字板</p><p>　　44. winmsd———系统信息</p><p>　　45. wiaacmgr——-扫描仪和照相机向导</p><p>　　46. winchat——–XP自带局域网聊天</p><p>　　47. mem.exe——–显示内存使用情况</p><p>　　48. Msconfig.exe—系统配置实用程序</p><p>　　49. mplayer2——-简易widnows media player</p><p>　　50. mspaint——–画图板</p><p>　　51. mstsc———-远程桌面连接</p><p>　　52. mplayer2——-媒体播放机</p><p>　　53. magnify——–放大镜实用程序</p><p>　　54. mmc————打开控制台</p><p>　　55. mobsync——–同步命令</p><p>　　56. dxdiag———检查DirectX信息</p><p>　　57. iexpress——-木马捆绑工具，系统自带 58. fsmgmt.msc—–共享文件夹管理器</p><p>　　59. utilman——–辅助工具管理器</p><p>　　60. diskmgmt.msc—磁盘管理实用程序</p><p>　　61. dcomcnfg——-打开系统组件服务</p><p>　　62. ddeshare——-打开DDE共享设置</p><p>　　110. osk————打开屏幕键盘 </p><p>　　111. odbcad32——-ODBC数据源管理器</p><p>　　112. oobe/msoobe /a—-检查XP是否激活 114. logoff———注销命令</p><p>　　66. notepad——–打开记事本</p><p>　　67. nslookup——-网络管理的工具向导</p><p>　　68. ntbackup——-系统备份和还原</p><p>　　69. narrator——-屏幕“讲述人”</p><p>　　70. ntmsmgr.msc—-移动存储管理器</p><p>　　71. ntmsoprq.msc—移动存储管理员操作请求</p><p>　　72. netstat -an—-(TC)命令检查接口</p><p>　　73. syncapp——–创建一个公文包</p><p>　　74. sysedit——–系统配置编辑器</p><p>　　75. sigverif——-文件签名验证程序</p><p>　　76. ciadv.msc——索引服务程序</p><p>　　77. shrpubw——–创建共享文件夹</p><p>　　78. secpol.msc—–本地安全策略</p><p>　　79. syskey———系统加密，一旦加密就不能解开，保护windows xp系统的双重密码</p><p>　　80. services.msc—本地服务设置</p><p>　　81. Sndvol32——-音量控制程序</p><p>　　82. sfc.exe——–系统文件检查器</p><p>　　83. sfc /scannow—windows文件保护</p><p>　　84. ciadv.msc——索引服务程序</p><p>　　85. tourstart——xp简介（安装完成后出现的漫游xp程序）</p><p>　　86. taskmgr——–任务管理器</p><p>　　87. eventvwr——-事件查看器</p><p>　　88. eudcedit——-造字程序</p><p>　　89. compmgmt.msc—计算机管理</p><p>　　90. packager——-对象包装程序</p><p>　　91. perfmon.msc—-计算机性能监测程序</p><p>　　92. charmap——–启动字符映射表</p><p>　　93. cliconfg——-SQL SERVER 客户端网络实用程序</p><p>　　94. Clipbrd——–剪贴板查看器</p><p>　　95. conf———–启动netmeeting</p><p>　　96. certmgr.msc—-证书管理实用程序</p><p>　　97. regsvr32 /u *.dll—-停止dll文件运行</p><p>　　98. regsvr32 /u zipfldr.dll——取消ZIP支持</p><p>　　99. cmd.exe——–CMD命令提示符</p><p>　　100. chkdsk.exe—–Chkdsk磁盘检查</p><p>1.磁盘操作，<br>　　fdisk 隐含 参数 /mbr 重建主引导记录fdisk /mbr 重建主引导记录<br>　　fdisk  在DOS7.0以后增加了/cmbr参数，可在挂接多个物理硬盘时，重建排序在后面的硬盘的主引导记录，例如：fdisk /cmbr  2，可重写第二个硬盘的主引导记录。（在使用时要十分小心，避免把好的硬盘引导记录损坏）<br>　　format 参数： /q 快速格式化 /u 不可恢复  /autotest 不提示 /s 创建 MS-DOS 引导盘 format c: /q /u /autotest<br>2.目录操作<br>　　DIR  [目录名或文件名] [/S][/W][/P][/A] 列出目录 参数: /s 查找子目录/w 只显示文件名 /p 分页/a 显示隐藏文件 DIR  format.exe /s查找该盘的format.exe文件并报告位置<br>　　MD (MKDIR) [目录名] 创建目录 MKDIR  HELLOWORLD 创建HELLOWORLD目录<br>　　CD (CHDIR) [目录名] PS:可以使用相对目录或绝对目录 进入目录 CD AA  进入当前文件夹下的AA目录,cd .. 进入上一个文件夹cd \返回根目录;cd c:\windows 进入c:\windows文件夹<br>　　RD (  RMDIR) [目录名] 删除目录 RD HELLOWORLD 删除HELLOWORLD目录<br>3.文件操作<br>　　删除目录及其文件： rmdir  [目录名或文件名] [/S][/W][/P][/A] 。例 rmdir c:\qqdownload/s  删除C盘的qqdownload目录。<br>　　del [目录名或文件名] [/f][/s][/q] 删除 参数:/f 删除只读文件/s  删除该目录及其下的所有内容 /q 删除前不确认<br>　　del c:\del /s /q 自动删除c盘的del目录。<br>　　copy [源文件或目录]  [目标目录] 复制文件 copy d:\pwin98*.* c:\presetup  将d盘的pwin98的所有文件复制到c盘的presetup下。<br>　　attrib [参数][源文件或目录]  文件属性操作命令，attrib命令可以列出或修改磁盘上文件的属性，文件属性包括文档（A）、只读(R)、隐藏(H)、系统(S)，例如：attrib -h -r  -s io.sys  执行这一命令后，将把DOS系统文件io.sys文件的只读、隐藏、系统属性去掉，这时将可以直接通过dir命令看到io.sys文件。attrib +h +r  +s autoexec.bat将为自动批处理文件增加以上属性。<br>4.内存操作<br>　　debug 调试内存 参数 -w [文件名] 写入二进制文件  -o [地址1] [地址2] 输出内存 -q 退出 exp:o 70 10[return] o 71 01<br>　　[return] 01[return]  q[return] DOS下通过写70h/71h PORT改变BIOS密码在CMOS中存放的对应位置的值,用以清除AWARD BIOS密码.debug  还可以破解硬盘保护卡等,但只可以在纯DOS下用。<br>5.分区操作<br>　　给磁盘分区，一般都会分成四个区，磁盘分区由主分区、扩展分区、逻辑分区组成。<br>　　PQ和Acronis  Disk Director这两个工具都可以在不丢失数据的情况下对分区进行调整大小，以及合并等操作，XP系统的话你用PQ，WIN7系统的话用Acronis  Disk Director  操作基本一样，可以去网上找教程来看看，再不重装系统的情况下都能调整分区大小，但是建议你还是先备份下数据再调整，毕竟对硬盘直接进行的操作有一定的危险性。</p><p>　　net use ipipc$ “ “ /user:” “ 建立IPC空链接</p><p>　　net use ipipc$ “密码” /user:”用户名” 建立IPC非空链接</p><p>　　net use h: ipc$ “密码” /user:”用户名” 直接登陆后映射对方C：到本地为H:</p><p>　　net use h: ipc$ 登陆后映射对方C：到本地为H:</p><p>　　net use ipipc$ /del 删除IPC链接</p><p>　　net use h: /del 删除映射对方到本地的为H:的映射</p><p>　　net user 用户名　密码　/add 建立用户</p><p>　　net user guest /active:yes 激活guest用户</p><p>　　net user 查看有哪些用户</p><p>　　net user 帐户名 查看帐户的属性</p><p>　　net localgroup administrators 用户名 /add 把“用户”添加到管理员中使其具有管理员权限</p><p>　　net start 查看开启了哪些服务</p><p>　　net start 服务名　开启服务；(如:net start telnet， net start schedule)</p><p>　　net stop 服务名 停止某服务</p><p>　　net time 目标ip 查看对方时间</p><p>　　net time 目标ip /set 设置本地计算机时间与“目标IP”主机的时间同步,加上参数/yes可取消确认信息</p><p>　　net view 查看本地局域网内开启了哪些共享</p><p>　　net view ip 查看对方局域网内开启了哪些共享</p><p>　　net config 显示系统网络设置</p><p>　　net logoff 断开连接的共享</p><p>　　net pause 服务名 暂停某服务</p><p>　　net send ip “文本信息” 向对方发信息</p><p>　　net ver 局域网内正在使用的网络连接类型和信息</p><p>　　net share 查看本地开启的共享</p><p>　　net share ipc$ 开启ipc$共享</p><p>　　net share ipc$ /del 删除ipc$共享</p><p>　　net share c$ /del 删除C：共享</p><p>　　net user guest 12345 用guest用户登陆后用将密码改为12345</p><p>　　net password 密码 更改系统登陆密码</p><p>　　netstat -a 查看开启了哪些端口,常用netstat -an</p><p>　　netstat -n 查看端口的网络连接情况，常用netstat -an</p><p>　　netstat -v 查看正在进行的工作</p><p>　　netstat -p 协议名 例：netstat -p tcq/ip 查看某协议使用情况</p><p>　　netstat -s 查看正在使用的所有协议使用情况</p><p>　　nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名</p><p>　　tracert -参数 ip(或计算机名) 跟踪路由（数据包），参数：“-w数字”用于设置超时间隔。</p><p>　　ping ip(或域名) 向对方主机发送默认大小为32字节的数据，参数：“-l[空格]数据包大小”；“-n发送数据次数”；“-t”指一直ping。</p><p>　　ping -t -l 65550 ip 死亡之ping(发送大于64K的文件并一直ping就成了死亡之ping)</p><p>　　ipconfig (winipcfg) 用于windows NT及XP(windows 95  98)查看本地ip地址，ipconfig可用参数“/all”显示全部配置信息</p><p>　　tlist -t 以树行列表显示进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)</p><p>　　kill -F 进程名 加-F参数后强制结束某进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)</p><p>　　del -F 文件名  加-F参数后就可删除只读文件,/AR、/AH、/AS、/AA分别表示删除只读、隐藏、系统、存档文件，/A-R、/A-H、/A-S、/A-A表示删除除只读、隐藏、系统、存档以外的文件。例如“DEL/AR  <em>.</em>”表示删除当前目录下所有只读文件，“DEL/A-S <em>.</em>”表示删除当前目录下除系统文件以外的所有文件</p><p>　　del /S /Q 目录 或用：rmdir /s /Q 目录 /S删除目录及目录下的所有子目录和文件。同时使用参数/Q  可取消删除操作时的系统确认就直接删除。（二个命令作用相同）</p><p>　　move 盘符路径要移动的文件名　存放移动文件的路径移动后文件名 移动文件,用参数/y将取消确认移动目录存在相同文件的提示就直接覆盖</p><p>　　fc one.txt two.txt &gt; 3st.txt 对比二个文件并把不同之处输出到3st.txt文件中，”&gt; “和”&gt;  &gt;” 是重定向命令</p><p>　　at id号 开启已注册的某个计划任务</p><p>　　at /delete 停止所有计划任务，用参数/yes则不需要确认就直接停止</p><p>　　at id号 /delete 停止某个已注册的计划任务</p><p>　　at 查看所有的计划任务</p><p>　　at ip time 程序名(或一个命令) /r 在某时间运行对方某程序并重新启动计算机</p><p>　　finger username @host 查看最近有哪些用户登陆</p><p>　　telnet ip 端口 远和登陆服务器,默认端口为23</p><p>　　open ip 连接到IP（属telnet登陆后的命令）</p><p>　　telnet 在本机上直接键入telnet 将进入本机的telnet</p><p>　　copy 路径文件名1　路径文件名2 /y 复制文件1到指定的目录为文件2，用参数/y就同时取消确认你要改写一份现存目录文件</p><p>　　copy c:srv.exe ipadmin$ 复制本地c:srv.exe到对方的admin下</p><p>　　copy 1st.jpg/b+2st.txt/a 3st.jpg  将2st.txt的内容藏身到1st.jpg中生成3st.jpg新的文件，注：2st.txt文件头要空三排，参数：/b指二进制文件，/a指ASCLL格式文件</p><p>　　copy ipadmin$svv.exe c: 或:copyipadmin$<em>.</em>  复制对方admini$共享下的srv.exe文件（所有文件）至本地C：</p><p>　　xcopy 要复制的文件或目录树　目标地址目录名 复制文件和目录树，用参数/Y将不提示覆盖相同文件</p><p>　　用参数/e才可连目录下的子目录一起复制到目标地址下。</p><p>　　tftp -i 自己IP(用肉机作跳板时这用肉机IP) get server.exec:server.exe  登陆后，将“IP”的server.exe下载到目标主机c:server.exe 参数：-i指以二进制模式传送，如传送exe文件时用，如不加-i  则以ASCII模式（传送文本文件模式）进行传送</p><p>　　tftp -i 对方IP　put c:server.exe 登陆后，上传本地c:server.exe至主机</p><p>　　ftp ip 端口  用于上传文件至服务器或进行文件操作，默认端口为21。bin指用二进制方式传送（可执行文件进）；默认为ASCII格式传送(文本文件时)</p><p>　　route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway  addres，接口地址Interface</p><p>　　arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。arp -a将显示出全部信息</p><p>　　start 程序名或命令 /max 或/min 新开一个新窗口并最大化（最小化）运行某程序或命令</p><p>　　mem 查看cpu使用情况</p><p>　　attrib 文件名(目录名) 查看某文件（目录）的属性</p><p>　　attrib 文件名 -A -R -S -H 或 +A +R +S +H 去掉(添加)某文件的 存档，只读，系统，隐藏 属性；用+则是添加为某属性</p><p>　　dir 查看文件，参数：/Q显示文件及目录属系统哪个用户，/T:C显示文件创建时间，/T:A显示文件上次被访问时间，/T:W上次被修改时间</p><p>　　date /t 、 time /t 使用此参数即“DATE/T”、“TIME/T”将只显示当前日期和时间，而不必输入新日期和时间</p><p>　　set 指定环境变量名称=要指派给变量的字符 设置环境变量</p><p>　　set 显示当前所有的环境变量</p><p>　　set p(或其它字符) 显示出当前以字符p(或其它字符)开头的所有环境变量</p><p>　　pause 暂停批处理程序，并显示出：请按任意键继续….</p><p>　　if 在批处理程序中执行条件处理（更多说明见if命令及变量）</p><p>　　goto 标签 将cmd.exe导向到批处理程序中带标签的行（标签必须单独一行，且以冒号打头，例如：“：start”标签）</p><p>　　call 路径批处理文件名 从批处理程序中调用另一个批处理程序 （更多说明见call /?）</p><p>　　for 对一组文件中的每一个文件执行某个特定命令（更多说明见for命令及变量）</p><p>　　echo on或off 打开或关闭echo，仅用echo不加参数则显示当前echo设置</p><p>　　echo 信息 在屏幕上显示出信息</p><p>　　echo 信息 &gt;&gt; pass.txt 将”信息”保存到pass.txt文件中</p><p>　　findstr “Hello” aa.txt 在aa.txt文件中寻找字符串hello</p><p>　　find 文件名 查找某文件</p><p>　　title 标题名字 更改CMD窗口标题名字</p><p>　　color 颜色值  设置cmd控制台前景和背景颜色；0=黑、1=蓝、2=绿、3=浅绿、4=红、5=紫、6=黄、7=白、8=灰、9=淡蓝、A=淡绿、B=淡浅绿、C=淡红、D=淡紫、E=淡黄、F=亮白</p><p>　　prompt 名称 更改cmd.exe的显示的命令提示符(把C:、D:统一改为：EntSky )</p><p>　　ver 在DOS窗口下显示版本信息 </p><p>　　winver 弹出一个窗口显示版本信息（内存大小、系统版本、补丁版本、计算机名）</p><p>　　format 盘符 /FS:类型 格式化磁盘,类型:FAT、FAT32、NTFS ,例：Format D: /FS:NTFS</p><p>　　md　目录名 创建目录</p><p>　　replace 源文件　要替换文件的目录 替换文件</p><p>　　ren 原文件名　新文件名 重命名文件名</p><p>　　tree 以树形结构显示出目录，用参数-f 将列出第个文件夹中文件名称</p><p>　　type 文件名 显示文本文件的内容</p><p>　　more 文件名 逐屏显示输出文件</p><p>　　doskey 要锁定的命令=字符</p><p>　　doskey 要解锁命令= 为DOS提供的锁定命令(编辑命令行，重新调用win2k命令，并创建宏)。如：锁定dir命令：doskey  dir=entsky (不能用doskey dir=dir)；解锁：doskey dir=</p><p>　　taskmgr 调出任务管理器</p><p>　　chkdsk /F D: 检查磁盘D并显示状态报告；加参数/f并修复磁盘上的错误</p><p>　　tlntadmn telnt服务admn,键入tlntadmn选择3，再选择8,就可以更改telnet服务默认端口23为其它任何端口</p><p>　　exit 退出cmd.exe程序或目前，用参数/B则是退出当前批处理脚本而不是cmd.exe</p><p>　　path 路径可执行文件的文件名 为可执行文件设置一个路径。</p><p>　　cmd 启动一个win2K命令解释窗口。参数：/eff、/en 关闭、开启命令扩展；更我详细说明见cmd /?</p><p>　　regedit /s 注册表文件名 导入注册表；参数/S指安静模式导入，无任何提示；</p><p>　　regedit /e 注册表文件名 导出注册表</p><p>　　cacls 文件名　参数 显示或修改文件访问控制列表（ACL）——针对NTFS格式时。参数：/D 用户名:设定拒绝某用户访问；/P 用户名:perm  替换指定用户的访问权限；/G 用户名:perm 赋予指定用户访问权限；Perm 可以是: N 无，R 读取， W 写入， C 更改(写入)，F  完全控制；例：cacls D: est.txt /D pub 设定d: est.txt拒绝pub用户访问。</p><p>　　cacls 文件名 查看文件的访问用户权限列表</p><p>　　REM 文本内容 在批处理文件中添加注解</p><p>　　netsh 查看或更改本地网络配置情况</p><p>　　</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/picture/5.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="cmd" scheme="http://javastar.club/categories/cmd/"/>
    
    
      <category term="cmd" scheme="http://javastar.club/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>French</title>
    <link href="http://javastar.club/archives/a8d9cb68.html"/>
    <id>http://javastar.club/archives/a8d9cb68.html</id>
    <published>2019-08-10T02:58:02.000Z</published>
    <updated>2019-08-23T03:26:59.637Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+pZrxMUwgUO1fupnSEfeMIOBmWtbek80he29oJYtVcxcaRkjl3WMn5ONY0l0Bl6BvtPWCb+QUPfd06vERQro+l1+3JId7sL5iMXFIUX3wSUeYuBjRMS1WE8wW+tT5a7to3LCA9umKIiDYTYLTPTO59x850nOhtYW5pK2fX0xpaCuKE3R9TE0PDyLl3DVH27G6ZpfZuzj+0GhQEan0Oj0ZnLp4G06iEA0lb25B6/fnSBieja0nj8ATpkA9HxkEJtRuG6FerrQgFSCmQHuS5jjHupEfJJ0UhtaCnhXarShc6bX92upz1ThmgGGtulYXagn0o2NjeCmtd0A==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="French" scheme="http://javastar.club/categories/French/"/>
    
    
      <category term="French" scheme="http://javastar.club/tags/French/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客记录</title>
    <link href="http://javastar.club/archives/5910dd1d.html"/>
    <id>http://javastar.club/archives/5910dd1d.html</id>
    <published>2019-08-10T01:27:16.000Z</published>
    <updated>2019-08-23T03:38:19.221Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="hexo" scheme="http://javastar.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://javastar.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>日语入门手册0</title>
    <link href="http://javastar.club/archives/37fae12e.html"/>
    <id>http://javastar.club/archives/37fae12e.html</id>
    <published>2019-08-09T13:00:13.000Z</published>
    <updated>2019-08-10T07:24:14.773Z</updated>
    
    <content type="html"><![CDATA[<p>  我是个俗气至顶的人，见山是山，见海是海，见花便是花。唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒。你无需开口，我和天地万物便通通奔向你。</p><a id="more"></a><h3 id="五十音清音发音学习笔记"><a href="#五十音清音发音学习笔记" class="headerlink" title="五十音清音发音学习笔记"></a>五十音清音发音学习笔记</h3><p>あア a 类似汉语“啊”，在日语中开口最大，双唇自然张开，口形比汉语“啊”小，声音洪亮<br>いイ i  类似汉语“衣”，比发“衣”时双唇略松，口角咧开较小，声音较尖<br>うウ u  类似汉语“乌”，双唇自然微启，嘴角微拉，双唇不突出，舌面较平，声音较弱。双唇不要象发“乌”那样向前突出，部分老师要求发音时后槽牙接触，以把握口型位置。<br>えエ  e 类似汉语“唉”，双唇稍向左右咧开，舌面放平，声音紧张<br>おオ o  类似汉语“欧”，嘴唇合拢略椭圆形，口型大小处于「あ」和「う」之间，舌面较平，声音圆浑<br>かカ ka 类似拼音“ka”<br>きキ ki  类似拼音“ki”<br>くク ku 类似拼音“ku”，嘴唇平的，双唇不突出。<br>けケ ke  类似英语音标“ke”，也就是单词care/ker/的前半部分<br>こコ ko 类似汉语“扣”，<br>さサ sa 类似汉语“仨”<br>しシshi  类似汉语“西”，注意是发音是“xi”。打字的时候打si也能打出来<br>すス su  发音难以描述，不能直接发成“苏”，像是用“丝”的口型发“苏”的样子。也有些时候直接读“丝”。只发了s的音，网上查到的说法是元音u被清化（即只保留元音的口形和舌位而不发声）<br>せセ  se 类似英语音标“se”，self/self/的前半部分<br>そソ so 类似英语单词“so”<br>たタ ta 类似汉语“他”<br>ちチchi  类似汉语“七”，注意是发音是“qi”。打字的时候打ti也能打出来<br>つツtsu  发音难以描述，像是用“呲”的口型发“粗”的样子。也有建议直接念“呲”的。大写的时候发音，小写的时候是促音不发音。同理打字可以打tu<br>てテ te  类似汉语“胎”<br>とト to 类似汉语“偷”<br>なナ na 类似汉语“那”，な行没什么特殊的，就是n和あ行拼在一起<br>にニ ni  类似汉语“你”<br>ぬヌ nu 类似汉语“奴”<br>ねネ ne 类似汉语“奶”<br>のノ no 类似英语单词“no”<br>はハ ha  类似汉语“哈”，两种读音，平时读ha，助词的时候读wa<br>ひヒ hi 类似英语单词“he”。He is a boy那个he。<br>ふフ fu  类似汉语“夫”，但是不咬唇，上齿接近下唇但有缝隙，不震动声带，只是气流摩擦。罗马音hu、fu都可以<br>へヘ he  类似汉语“嗨”。做助词的时读做e(え)<br>ほホ ho 类似汉语“吼”，类似hold住的ho。<br>まマ ma  类似汉语“马”，ま行没什么特殊的，就是m和あ行拼在一起<br>みミ mi 类似汉语“咪”<br>むム mu 类似汉语“木”<br>めメ me  类似汉语“买”<br>もモ mo 类似汉语“哞”<br>やヤ ya 类似汉语“呀”<br>ゆユ yu 类似英语单词“you”<br>よヨ yo  类似汉语“腰”<br>らラ ra 类似汉语“拉”，ら行r其实是汉语发音里的l，就是l和あ行拼在一起<br>りリ ri 类似汉语“哩”<br>るル ru  类似汉语“撸”<br>れレ re 类似英语音标“le”，let’s go的le<br>ろロ ro 类似汉语“唠”<br>わワ wa  类似汉语“哇”<br>をヲ wo 和おo同音，只做助词，所以不会在单词里出现。<br>んン n 用鼻腔通气发出的声音，不单用，也不出现在词首</p><h3 id="发音："><a href="#发音：" class="headerlink" title="发音："></a>发音：</h3><p><a href="https://jp.hjenglish.com/subject/pronounce_write/" rel="external nofollow noopener noreferrer" target="_blank">https://jp.hjenglish.com/subject/pronounce_write/</a></p><h3 id="记忆："><a href="#记忆：" class="headerlink" title="记忆："></a>记忆：</h3><p><a href="https://www.zhihu.com/question/20318161/answer/67015673" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/20318161/answer/67015673</a></p><p>电子版教材：</p><p>链接：<a href="https://pan.baidu.com/s/1NvpcbYvQWeghwvv_T7X8rg" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1NvpcbYvQWeghwvv_T7X8rg</a><br>提取码：0gx4<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
  我是个俗气至顶的人，见山是山，见海是海，见花便是花。唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒。你无需开口，我和天地万物便通通奔向你。
&lt;/p&gt;
    
    </summary>
    
      <category term="language" scheme="http://javastar.club/categories/language/"/>
    
    
      <category term="日语" scheme="http://javastar.club/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>第六次日记</title>
    <link href="http://javastar.club/archives/f7899fcc.html"/>
    <id>http://javastar.club/archives/f7899fcc.html</id>
    <published>2019-08-09T12:55:49.000Z</published>
    <updated>2019-08-23T03:18:19.918Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="日记" scheme="http://javastar.club/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="dairy" scheme="http://javastar.club/tags/dairy/"/>
    
  </entry>
  
  <entry>
    <title>哲学</title>
    <link href="http://javastar.club/archives/5da32671.html"/>
    <id>http://javastar.club/archives/5da32671.html</id>
    <published>2019-08-09T12:54:21.000Z</published>
    <updated>2019-08-23T03:18:30.781Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="哲学" scheme="http://javastar.club/categories/%E5%93%B2%E5%AD%A6/"/>
    
    
      <category term="哲学" scheme="http://javastar.club/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客备份</title>
    <link href="http://javastar.club/archives/b5d2c57b.html"/>
    <id>http://javastar.club/archives/b5d2c57b.html</id>
    <published>2019-08-08T07:10:35.000Z</published>
    <updated>2019-08-10T02:57:08.525Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客备份指南<br><img src="https://github.com/starstarb/clouding/raw/master/picture/4.jpg" alt></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  由于之前忘记备份Hexo博客的markdown文件，在重做系统时候还忘记备份博客了，导致现在不得不重新从网页上扒下来之前的文章重新写一遍，十分耗费精力。因此在网上找了下如何备份Hexo博客，在此记录下。</p><p>  目前假设Git和Github环境已经配置好了，如果没有配置好详见「Ubuntu16.04下Github配置」。<br>Git相关操作请参考廖雪峰的Git教程。</p><h3 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h3><p>目前假设本地Hexo博客已经初始化。</p><p>###创建新分支</p><p>在Github.io上建立博客时已经开了一个新仓库了，如果再开另一个仓库存放源代码有点浪费，因此采用建立新分支的方法备份博客。</p><p>虽然理论上什么时候创建新分支来备份都可以，但是还是建议在建立博客的时候就创建备份分支。（然而我中途才想起来-.-）</p><p>  不过在建立新分支前请确保仓库内已有master分支（Hexo本地建站后第一次上传时会自动生成），否则后期再添加master分支比较麻烦（请自行搜索git命令）。</p><p>本地Git建立新分支命令如下：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">$ git checkout -b BRANCHNAME</span><br></pre>      </td>    </tr>  </table></figure><p>BRANCHNAME是自定义的新分支的名字，建议起为hexo。<br>建立.gitignore</p><p>建立.gitignore文件将不需要备份的文件屏蔽。个人的.gitignore文件如下：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre>      </td>      <td class="code">        <pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre>      </td>    </tr>  </table></figure><p>在Github上备份</p><p>通过如下命令将本地文件备份到Github上。</p><p>假设目前在hexo博客的根目录下。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;Backup&quot;</span><br><span class="line">$ git push origin hexo</span><br></pre>      </td>    </tr>  </table></figure><p>这样就备份完博客了且在Github上能看到两个分支(master和hexo)。<br>设置默认分支</p><p>  在Github上你的github.io仓库中设置默认分支为hexo。这样有助于之后恢复博客。master分支时默认的博客静态页面分支，在之后恢复博客的时候并不需要。<br>个人备份习惯</p><p>个人而言习惯于先备份文件再生成博客。即先执行<strong>git add .,git commit -m “Backup”,git push    origin hexo</strong>将博客备份完成，然后执行<strong>hexo g -d</strong>发布博客。<br>恢复博客</p><p>目前假设本地Hexo博客基础环境已经搭好。<br>克隆项目到本地</p><p>输入下列命令克隆博客必须文件(hexo分支)：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ git clone https://github.com/yourgithubname/yourgithubname.github.io</span><br></pre>      </td>    </tr>  </table></figure><h3 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h3><p>在克隆的那个文件夹下输入如下命令恢复博客：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">$ npm install hexo-cli</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git</span><br></pre>      </td>    </tr>  </table></figure><p>在此不需要执行hexo init这条指令，因为不是从零搭建起新博客。</p><p>完成喵～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo博客备份指南&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/picture/4.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://javastar.club/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>python数据分析常用库</title>
    <link href="http://javastar.club/archives/460b5ed.html"/>
    <id>http://javastar.club/archives/460b5ed.html</id>
    <published>2019-08-08T07:09:19.000Z</published>
    <updated>2019-08-16T03:11:25.263Z</updated>
    
    <content type="html"><![CDATA[<p>sklearn/surprise<br><img src="https://github.com/starstarb/clouding/raw/master/head/f2deaa2d8bcb907b31c759089e262f09.jpg" alt></p><a id="more"></a><p>网上有很多关于sklearn的学习教程，大部分都是简单的讲清楚某一方面，其实最好的教程就是官方文档。</p><p>　　官方文档地址：<a href="https://scikit-learn.org/stable/" rel="external nofollow noopener noreferrer" target="_blank">https://scikit-learn.org/stable/</a></p><p>  （可是官方文档非常详细，同时许多人对官方文档的理解和结构上都不能很好地把握，我也打算好好学习sklearn，这可能是机器学习的神器），下面先简单介绍一下sklearn。</p><p>  　　自2007年发布以来，scikit-learn已经成为Python重要的机器学习库了，scikit-learn简称sklearn，支持包括分类，回归，降维和聚类四大机器学习算法。还包括了特征提取，数据处理和模型评估者三大模块。</p><p>　　sklearn是Scipy的扩展，建立在Numpy和matplolib库的基础上。利用这几大模块的优势，可以大大的提高机器学习的效率。</p><p>  　　sklearn拥有着完善的文档，上手容易，具有着丰富的API，在学术界颇受欢迎。sklearn已经封装了大量的机器学习算法，包括LIBSVM和LIBINEAR。同时sklearn内置了大量数据集，节省了获取和整理数据集的时间。</p><h4 id="安装surprise库报错"><a href="#安装surprise库报错" class="headerlink" title="安装surprise库报错"></a>安装surprise库报错</h4><p>Surprise是一个开源推荐系统，包含了常用的矩阵分解算法、包括SVD、SVD++，NMF等等，GitHub地址：<a href="https://github.com/NicolasHug/Surprise" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/NicolasHug/Surprise</a><br>参考官方安装方式<br>其中缺少Microsoft  Visual C++14，因此需要安装:<br><strong>安装地址</strong><br>链接：<a href="https://pan.baidu.com/s/1F2vTVhU8SQbMEoSBCk5jPw" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1F2vTVhU8SQbMEoSBCk5jPw</a><br>提取码：re39<br>我的windows10安装surprise报错如下：<br><img src="https://github.com/starstarb/clouding/raw/master/python/surprise%E6%8A%A5%E9%94%99.png" alt><br><strong>import    surprise库不报错，但是没有相关SVD    Dataset库</strong><br>cl.exe不存在环境路径配置好后，依然不行，打开cl.exe，报mspdb140.dll不存在，未解决。</p><h3 id="surprise库官方文档分析（一）"><a href="#surprise库官方文档分析（一）" class="headerlink" title="surprise库官方文档分析（一）"></a>surprise库官方文档分析（一）</h3><p><strong>一：入门</strong></p><p>　1、基本用法</p><p>　（1）、自动交叉验证</p><p>　　Surprise有一套内置的 算法和数据集供您使用。在最简单的形式中，只需几行代码即可运行交叉验证程序：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset (download it if needed),  </span><br><span class="line"># 加载movielens-100k数据集（如果需要，下载）</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># ＃我们将使用SVD算法。</span><br><span class="line"># We&apos;ll use the famous SVD algorithm.</span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">#运行5倍交叉验证并打印结果</span><br><span class="line"># Run 5-fold cross-validation and print results</span><br><span class="line">cross_validate(algo, data, measures=[&apos;RMSE&apos;, &apos;MAE&apos;], cv=5, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>输出结果：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">Evaluating RMSE, MAE of algorithm SVD on 5 split(s).</span><br><span class="line"></span><br><span class="line">                  Fold 1  Fold 2  Fold 3  Fold 4  Fold 5  Mean    Std     </span><br><span class="line">RMSE (testset)    0.9398  0.9321  0.9413  0.9349  0.9329  0.9362  0.0037  </span><br><span class="line">MAE (testset)     0.7400  0.7351  0.7400  0.7364  0.7370  0.7377  0.0020  </span><br><span class="line">Fit time          5.66    5.47    5.46    5.60    5.77    5.59    0.12    </span><br><span class="line">Test time         0.24    0.14    0.18    0.15    0.15    0.17    0.04</span><br></pre>      </td>    </tr>  </table></figure><p>  该load_builtin()方法将提供下载movielens-100k数据集（如果尚未下载），并将其保存.surprise_data在主目录的文件夹中（您也可以选择将其保存在其他位置）。</p><p>我们在这里使用众所周知的 SVD 算法，但是有许多其他算法可用。</p><p>该cross_validate()  函数根据cv参数运行交叉验证过程，并计算一些accuracy度量。我们在这里使用经典的5倍交叉验证，但可以使用更高级的迭代器</p><p>（2）、测试集分解和fit()方法</p><p>如果您不想运行完整的交叉验证程序，可以使用对 train_test_split()  给定大小的训练集和测试集进行采样，并使用您的选择。您将需要使用将在列车集上训练算法的方法，以及将返回从testset进行的预测的方法：accuracy  metricfit()test()</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import train_test_split</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset (download it if needed),</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># sample random trainset and testset #  随机测试集和训练集</span><br><span class="line"># test set is made of 25% of the ratings. # 将25%的数据设置成测试集</span><br><span class="line">trainset, testset = train_test_split(data, test_size=.25)</span><br><span class="line"></span><br><span class="line"># We&apos;ll use the famous SVD algorithm.</span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line"># Train the algorithm on the trainset, and predict ratings for the testset # 在训练集中训练算法，并预测数据</span><br><span class="line">algo.fit(trainset)</span><br><span class="line">predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line"># Then compute RMSE</span><br><span class="line">accuracy.rmse(predictions)</span><br></pre>      </td>    </tr>  </table></figure><p>执行结果：</p><p>RMSE: 0.9461</p><p>（3）、训练整个训练集和predict()方法</p><p>  显然，我们也可以简单地将算法拟合到整个数据集，而不是运行交叉验证。这可以通过使用build_full_trainset()将构建trainset对象的方法来完成  ：<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre>      </td>      <td class="code">        <pre><span class="line">from surprise import KNNBasic</span><br><span class="line">from surprise import Dataset</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># Retrieve the trainset.</span><br><span class="line"># 检索训练集</span><br><span class="line">trainset = data.build_full_trainset()</span><br><span class="line"></span><br><span class="line"># Build an algorithm, and train it.</span><br><span class="line"># 构建算法并训练</span><br><span class="line">algo = KNNBasic()</span><br><span class="line">algo.fit(trainset)</span><br><span class="line"></span><br><span class="line">uid = str(196)  # raw user id (as in the ratings file). They are **strings**!</span><br><span class="line">iid = str(302)  # raw item id (as in the ratings file). They are **strings**!</span><br><span class="line"></span><br><span class="line"># get a prediction for specific users and items.</span><br><span class="line"># ＃获取特定用户和项目的预测。</span><br><span class="line">pred = algo.predict(uid, iid, r_ui=4, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>预测结果：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">user: 196        item: 302        r_ui = 4.00   est = 4.06   &#123;&apos;actual_k&apos;: 40, &apos;was_impossible&apos;: False&#125;</span><br><span class="line"># est表示预测值</span><br></pre>      </td>    </tr>  </table></figure><p> 以上都是使用内置的数据集。</p><p>2、使用自定义数据集</p><p>Surprise有一组内置  数据集，但您当然可以使用自定义数据集。加载评级数据集可以从文件（例如csv文件）或从pandas数据帧完成。无论哪种方式，您都需要Reader为Surprise定义一个对象，以便能够解析文件或数据帧。<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># 要从文件（例如csv文件）加载数据集，您将需要以下 load_from_file()方法：</span><br><span class="line"></span><br><span class="line">from surprise import BaselineOnly</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"># path to dataset file</span><br><span class="line"># 数据集路径</span><br><span class="line">file_path = os.path.expanduser(r&apos;C:/Users/FELIX/.surprise_data/ml-100k/ml-100k/u.data&apos;)</span><br><span class="line"></span><br><span class="line"># As we&apos;re loading a custom dataset, we need to define a reader. In the</span><br><span class="line"># movielens-100k dataset, each line has the following format:</span><br><span class="line"># &apos;user item rating timestamp&apos;, separated by &apos;\t&apos; characters.</span><br><span class="line"># ＃当我们加载自定义数据集时，我们需要定义一个reader。在</span><br><span class="line"># ＃movielens-100k数据集中，每一行都具有以下格式：</span><br><span class="line"># ＃&apos;user item rating timestamp&apos;，以&apos;\ t&apos;字符分隔。</span><br><span class="line">reader = Reader(line_format=&apos;user item rating timestamp&apos;, sep=&apos;\t&apos;)</span><br><span class="line"></span><br><span class="line">data = Dataset.load_from_file(file_path, reader=reader)</span><br><span class="line"></span><br><span class="line"># We can now use this dataset as we please, e.g. calling cross_validate</span><br><span class="line"># ＃我们现在可以随意使用这个数据集，例如调用cross_validate</span><br><span class="line">cross_validate(BaselineOnly(), data, verbose=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 要从pandas数据框加载数据集，您将需要该 load_from_df()方法。您还需要一个Reader对象，但只能rating_scale指定参数。数据框必须有三列，对应于用户（原始）ID，项目（原始）ID以及此顺序中的评级。因此，每行对应于给定的评级。这不是限制性的，因为您可以轻松地重新排序数据框的列</span><br><span class="line"></span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">from surprise import NormalPredictor</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise.model_selection import cross_validate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Creation of the dataframe. Column names are irrelevant.</span><br><span class="line"># ＃创建数据帧。列名无关紧要。</span><br><span class="line">ratings_dict = &#123;&apos;itemID&apos;: [1, 1, 1, 2, 2],</span><br><span class="line">                &apos;userID&apos;: [9, 32, 2, 45, &apos;user_foo&apos;],</span><br><span class="line">                &apos;rating&apos;: [3, 2, 4, 3, 1]&#125;</span><br><span class="line">df = pd.DataFrame(ratings_dict)</span><br><span class="line"></span><br><span class="line"># A reader is still needed but only the rating_scale param is requiered.</span><br><span class="line"># ＃仍然需要一个reader，但只需要rating_scale param。</span><br><span class="line">reader = Reader(rating_scale=(1, 5))</span><br><span class="line"></span><br><span class="line"># The columns must correspond to user id, item id and ratings (in that order).</span><br><span class="line"># ＃列必须对应于用户ID，项目ID和评级（按此顺序）。</span><br><span class="line">data = Dataset.load_from_df(df[[&apos;userID&apos;, &apos;itemID&apos;, &apos;rating&apos;]], reader)</span><br><span class="line"></span><br><span class="line"># We can now use this dataset as we please, e.g. calling cross_validate</span><br><span class="line"># ＃我们现在可以随意使用这个数据集，例如调用cross_validate </span><br><span class="line">cross_validate(NormalPredictor(), data, cv=2)</span><br></pre>      </td>    </tr>  </table></figure><p>3、使用交叉验证迭代器</p><p>  对于交叉验证，我们可以使用cross_validate()为我们完成所有艰苦工作的功能。但是为了更好地控制，我们还可以实现交叉验证迭代器，并使用split()迭代器的test()方法和算法的  方法对每个拆分进行预测 。这是一个例子，我们使用经典的K-fold交叉验证程序和3个拆分：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import KFold</span><br><span class="line"></span><br><span class="line"># Load the movielens-100k dataset</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># define a cross-validation iterator</span><br><span class="line"># define一个交叉验证迭代器</span><br><span class="line">kf = KFold(n_splits=3)</span><br><span class="line"></span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">for trainset, testset in kf.split(data):</span><br><span class="line"></span><br><span class="line">    # train and test algorithm.</span><br><span class="line">    #训练和测试算法。</span><br><span class="line">    algo.fit(trainset)</span><br><span class="line">    predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line">    # Compute and print Root Mean Squared Error</span><br><span class="line">    # 计算并打印输出</span><br><span class="line">    accuracy.rmse(predictions, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>  可以使用其他交叉验证迭代器，如LeaveOneOut或ShuffleSplit。在这里查看所有可用的迭代器。Surprise的交叉验证工具的设计源于优秀的scikit-learn  API。</p><p>交叉验证的一个特例是当折叠已经被某些文件预定义时。例如，movielens-100K数据集已经提供了5个训练和测试文件（u1.base，u1.test …  u5.base，u5.test）。惊喜可以通过使用surprise.model_selection.split.PredefinedKFold  对象来处理这种情况：<br>复制代码</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre>      </td>      <td class="code">        <pre><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise import Reader</span><br><span class="line">from surprise import accuracy</span><br><span class="line">from surprise.model_selection import PredefinedKFold</span><br><span class="line"></span><br><span class="line"># path to dataset folder</span><br><span class="line">files_dir = os.path.expanduser(&apos;~/.surprise_data/ml-100k/ml-100k/&apos;)</span><br><span class="line"></span><br><span class="line"># This time, we&apos;ll use the built-in reader.</span><br><span class="line">reader = Reader(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line"># folds_files is a list of tuples containing file paths:</span><br><span class="line"># [(u1.base, u1.test), (u2.base, u2.test), ... (u5.base, u5.test)]</span><br><span class="line">train_file = files_dir + &apos;u%d.base&apos;</span><br><span class="line">test_file = files_dir + &apos;u%d.test&apos;</span><br><span class="line">folds_files = [(train_file % i, test_file % i) for i in (1, 2, 3, 4, 5)]</span><br><span class="line"></span><br><span class="line">data = Dataset.load_from_folds(folds_files, reader=reader)</span><br><span class="line">pkf = PredefinedKFold()</span><br><span class="line"></span><br><span class="line">algo = SVD()</span><br><span class="line"></span><br><span class="line">for trainset, testset in pkf.split(data):</span><br><span class="line"></span><br><span class="line">    # train and test algorithm.</span><br><span class="line">    algo.fit(trainset)</span><br><span class="line">    predictions = algo.test(testset)</span><br><span class="line"></span><br><span class="line">    # Compute and print Root Mean Squared Error</span><br><span class="line">    accuracy.rmse(predictions, verbose=True)</span><br></pre>      </td>    </tr>  </table></figure><p>当然，也可以对单个文件进行训练和测试。但是folds_files参数仍然要列表的形式。</p><p>4、使用GridSearchCV调整算法参数</p><p>该cross_validate()函数报告针对给定参数集的交叉验证过程的准确度度量。如果你想知道哪个参数组合能产生最好的结果，那么这个  GridSearchCV类就可以解决了。给定一个dict参数，该类详尽地尝试所有参数组合并报告任何精度测量的最佳参数（在不同的分裂上取平均值）。它受到scikit-learn的GridSearchCV的启发。</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre>      </td>      <td class="code">        <pre><span class="line"></span><br><span class="line">from surprise import SVD</span><br><span class="line">from surprise import Dataset</span><br><span class="line">from surprise.model_selection import GridSearchCV</span><br><span class="line"></span><br><span class="line"># Use movielens-100K</span><br><span class="line">data = Dataset.load_builtin(&apos;ml-100k&apos;)</span><br><span class="line"></span><br><span class="line">param_grid = &#123;&apos;n_epochs&apos;: [5, 10], &apos;lr_all&apos;: [0.002, 0.005],</span><br><span class="line">              &apos;reg_all&apos;: [0.4, 0.6]&#125;</span><br><span class="line">gs = GridSearchCV(SVD, param_grid, measures=[&apos;rmse&apos;, &apos;mae&apos;], cv=3)</span><br><span class="line"></span><br><span class="line">gs.fit(data)</span><br><span class="line"></span><br><span class="line"># best RMSE score</span><br><span class="line">print(gs.best_score[&apos;rmse&apos;]) # 输出最高的准确率的值</span><br><span class="line"></span><br><span class="line"># combination of parameters that gave the best RMSE score</span><br><span class="line">print(gs.best_params[&apos;rmse&apos;]) # 输出最好的批次，学习率参数</span><br></pre>      </td>    </tr>  </table></figure><p>通过上面操作得到最佳参数后就可以使用该参数的算法：</p><figure class="highlight plain">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># We can now use the algorithm that yields the best rmse:</span><br><span class="line">algo = gs.best_estimator[&apos;rmse&apos;]</span><br><span class="line">algo.fit(data.build_full_trainset())</span><br></pre>      </td>    </tr>  </table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sklearn/surprise&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/f2deaa2d8bcb907b31c759089e262f09.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python机器学习笔记1</title>
    <link href="http://javastar.club/archives/3012948c.html"/>
    <id>http://javastar.club/archives/3012948c.html</id>
    <published>2019-08-08T07:09:03.000Z</published>
    <updated>2019-08-23T03:20:50.885Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19LdBhqaiTw4P2RHUPJ/XqThwEa3S+5QmJ87b450Iy2m4jXgp2fTkJT4rfDHUsMxAUC+hs6Q6LsHKdDlQg6BH2tjtAzGuQgnjQre9fjE/JBeQDIfo1n3QWFUSSJ0WkLS9mePSFaDCikuAo5napxwKmZOWXJYvSUhSRs9mpwUWJothw9dOlPrWoGtirSFpJT3PTj+/ajNoLLYQx6tYJQeaxzuB1qU5i67qFc1eNrCt+jx6eM1rnYQAJkzal4Oy3oepqoOsf5/OxpoPcIQPOOk+LrCPBmprFxqa6E38phsNaJ3UKHBLXuULX+jkZkEUxtV0qagzTfO5yf2zSCQbdbbvcvo46ABrvuC0qYyhWzgrgZu77HY2U0tDichNq1OliYuXxJGGaw8WZhHHhr283MbS2JGBh3tdvuEImWWBvm2CqNp8bvPuG1uF/7ZOXU3P+MdXIPLeK33SbTvCokiRTEXtNnNmy0l/nzJlj0LZwUh68KPPtb3RSfzryi11xq4R0vcYfqbXgNezgdSKn1II2uk82rxDvbZp4samyX3Zrvsdx3pUZANVFtYcuqhDwkpgv31ZtDsUENfhqlbJ1w3DaAoqZ4WRyMjI+7jhKj6X44MZxmXjJ+5euZdQOr9YkPRWTq1swnxZZayy+/+GcnMxlfXMjkZsiZjupXVKPvuJjnrGCrf/Bfgl946CKV2ps75NAC7CfyHuCDugJkVq6kiwoqPUTIyPXVeM5CHJSHOZL2MUadlvmbe5udnA+I8U9XjD0XjFkhA5iCT/f6GjimlNNuHXmhI/CZjapHM3pcPo8NyVT9SWMuGt2lpgyhUgalcZsVoCNqjFq9v4oEkiUCOUsZl0PouzVpExtzyAm9FnTPTLc8w6S9sIPQYi0V5t48c6imQ0UlUXQOSECM+2lYiibl2i9c3T2wNk54wntyRj6W/HKYXiO4t2JCYqCze7YNySAvW1Z4hngjzXHR1TmaBwh5glyuVP7EJUNvEoGgYdt2bXXRV4n5ueec6xR94/a5RlZ+j7JpeCOmdfuRlggrvAXfK9/qV/OA/nJGjTMeRmVl5siRxTnNXOc0mN7fGBRiKsccPbTT4eg034ctJVGwtiPWS9nlHrUCagT2+BOlqT/eFqcmjmKlRaOXkLC6xp3phvcRxiraIpLy9pn1xanBFBuLd6UBZKzicBg/kZi10oP3ngul0hzBk8PrtQg4eOGg4zyy+njDwOoqv2Hj+ehPj0eMD29mJz2x/aGtjg+rKgr8k+O0lQxDREZEB/jACIkM3k7dXhvNWAZwB03KSjpa39Zqp7xznYe99NMd+Q1ZByM8v030agnaJIwn5toXfHh3YuOpd7adpUuB63CZzlzxXgmTrHzhUevLzTfohKGT7FusiCsagSkws4DjqlUx5sMgjMfblxI0fXT9D5LZDzMJlQroMb0gNvBqkUNzTM3A23apJI/BlY/1gxxC6fUvOTLb3DkkMbdIkv0zRdb/sHCcr7diZ2GEfeoR2i5A4p1m6bIX/CBT68GLnpa3P06W4sGam3+NO3S6CGd71CAl2Q==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python机器学习笔记</title>
    <link href="http://javastar.club/archives/a80115f8.html"/>
    <id>http://javastar.club/archives/a80115f8.html</id>
    <published>2019-08-08T07:08:46.000Z</published>
    <updated>2019-08-16T03:11:33.474Z</updated>
    
    <content type="html"><![CDATA[<p>随机森林算法，参考：<a href="https://www.cnblogs.com/wj-1314/p/9628303.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/wj-1314/p/9628303.html</a><br><img src="https://github.com/starstarb/clouding/raw/master/head/e7f428d6ca1cf376e564c5a45b13e431.jpg" alt></p><a id="more"></a><h3 id="随机森林算法的理论知识"><a href="#随机森林算法的理论知识" class="headerlink" title="随机森林算法的理论知识"></a>随机森林算法的理论知识</h3><p>  　　随机森林是一种有监督学习算法，是以决策树为基学习器的集成学习算法。随机森林非常简单，易于实现，计算开销也很小，但是它在分类和回归上表现出非常惊人的性能，因此，随机森林被誉为“代表集成学习技术水平的方法”。</p><h4 id="一，随机森林的随机性体现在哪几个方面？"><a href="#一，随机森林的随机性体现在哪几个方面？" class="headerlink" title="一，随机森林的随机性体现在哪几个方面？"></a>一，随机森林的随机性体现在哪几个方面？</h4><p><strong>1，数据集的随机选取</strong></p><p>  　　从原始的数据集中采取有放回的抽样（bagging），构造子数据集，子数据集的数据量是和原始数据集相同的。不同子数据集的元素可以重复，同一个子数据集中的元素也可以重复。</p><p><strong>2，待选特征的随机选取</strong></p><p>  　　与数据集的随机选取类似，随机森林中的子树的每一个分裂过程并未用到所有的待选特征，而是从所有的待选特征中随机选取一定的特征，之后再在随机选取的特征中选取最优的特征</p><h4 id="二，为什么使用随机森林？"><a href="#二，为什么使用随机森林？" class="headerlink" title="二，为什么使用随机森林？"></a>二，为什么使用随机森林？</h4><p>1，随机森林既可以用于分类问题，也可以用于回归问题</p><p>2，过拟合是个关键的问题，可能会让模型的结果变得糟糕，但是对于随机森林来说，如果随机森林的树足够多，那么分类器就不会过拟合模型</p><p>3，随机森林分类器可以处理缺失值</p><p>4，随机森林分类器可以用分类值建模</p><h4 id="三，随机森林的构建过程"><a href="#三，随机森林的构建过程" class="headerlink" title="三，随机森林的构建过程"></a>三，随机森林的构建过程</h4><p>1，从原始训练集中使用Bootstraping方法随机有放回采样取出m个样本，共进行n_tree次采样。生成n_tree个训练集</p><p>2，对n_tree个训练集，我们分别训练n_tree个决策树模型</p><p>3，对于单个决策树模型，假设训练样本特征的个数为n，那么每次分裂时根据信息增益/信息增益比/基尼指数 选择最好的特征进行分裂</p><p>4，每棵树都已知这样分裂下去，知道该节点的所有训练样例都属于同一类。在决策树的分裂过程中不需要剪枝</p><p>5，将生成的多颗决策树组成随机森林。对于分类问题，按照多棵树分类器投票决定最终分类结果；对于回归问题，由多颗树预测值的均值决定最终预测结果</p><p>注意：OOB（out-of-bag ）：每棵决策树的生成都需要自助采样，这时就有1/3的数据未被选中，这部分数据就称为袋外数据。<br><img src="https://github.com/starstarb/clouding/raw/master/python/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97.png" alt></p><h4 id="四，随机森林优缺点总结"><a href="#四，随机森林优缺点总结" class="headerlink" title="四，随机森林优缺点总结"></a>四，随机森林优缺点总结</h4><p><strong>优点</strong></p><ul>  <li>由于采用了集成算法，本身精度比大多数单个算法要好，所以准确性高</li>  <li>在测试集上表现良好，由于两个随机性的引入，使得随机森林不容易陷入过拟合（样本随机，特征随机）</li>  <li>在工业上，由于两个随机性的引入，使得随机森林具有一定的抗噪声能力，对比其他算法具有一定优势</li>  <li>由于树的组合，使得随机森林可以处理非线性数据，本身属于非线性分类（拟合）模型</li>  <li>它能够处理很高维度（feature很多）的数据，并且不用做特征选择，对数据集的适应能力强：既能处理离散型数据，也能处理连续型数据，数据集无需规范化  </li>  <li>训练速度快，可以运用在大规模数据集上</li>  <li>可以处理缺省值（单独作为一类），不用额外处理</li>  <li>由于有袋外数据（OOB），可以在模型生成过程中取得真实误差的无偏估计，且不损失训练数据量</li>  <li>在训练过程中，能够检测到feature间的互相影响，且可以得出feature的重要性，具有一定参考意义</li>  <li>由于每棵树可以独立、同时生成，容易做成并行化方法</li>  <li>由于实现简单、精度高、抗过拟合能力强，当面对非线性数据时，适于作为基准模型</li></ul><p><strong>缺点</strong></p><p>  当随机森林中的决策树个数很多时，训练时需要的空间和时间会比较大<br>随机森林中还有许多不好解释的地方，有点算是黑盒模型<br>在某些噪音比较大的样本集上，RF的模型容易陷入过拟合</p><h4 id="五，特征重要性评估"><a href="#五，特征重要性评估" class="headerlink" title="五，特征重要性评估"></a>五，特征重要性评估</h4><p>  　　现实情况下，一个数据集中往往有成百上千个特征，如何在其中选择比结果影响最大的那几个特征，以此来缩减建立模型时特征数是我们比较关心的问题。这样的方法其实很多，比如主成分分析，lasso等等。不过这里我们学习的是用随机森林来进行特征筛选。</p><p>　　用随机森林进行特征重要性评估的思想就是看每个特征在随机森林中的每棵树上做了多大的贡献，然后取个平均值，最后比一比特征之间的贡献大小。</p><p>　　贡献大小通常使用基尼指数（Gini index）或者袋外数据（OOB）错误率作为评估指标来衡量。这里我们再学习一下基尼指数来评价的方法。</p><p>　　我们将变量重要性评分（variable importance  measures）用VIM来表示，将Gini指数用GI来表示，假设m个特征X1，X2，X3，……Xc，现在要计算出每个特征Xj的Gini指数评分VIMj（Gini）,亦即第j个特征在RF所有决策树中节点分裂不纯度的平均改变量。</p><p>　　Gini指数的计算公式为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/Gini.png" alt><br>其中，K表示有K个类别。Pmk表示节点m中类列k所占的比例。</p><p>　　直观的说，就是随便从节点m中随机抽取两个样本，其类别标记不一致的概率。</p><p>　　特征Xj在节点m的重要性，即节点m分支前后的Gini指数变化量为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIM.png" alt><br>其中，GIl和GIr分别表示分枝后两个新节点的Gini指数。</p><p>　　如果，特征Xj在决策树i中出现的节点在集合M中，那么Xj在第i颗树的重要性为：<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMIT.png" alt><br>假设RF中共有n颗树，那么<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMij.png" alt><br>　最后，把所有求得的重要性评分做一个归一化处理即可。<br><img src="https://github.com/starstarb/clouding/raw/master/python/VIMsum.png" alt></p><h5 id="5-1-特征选择"><a href="#5-1-特征选择" class="headerlink" title="5.1 特征选择"></a>5.1  特征选择</h5><p><strong>5.1.1 特征选择的步骤</strong></p><p>　　在特征重要性的基础上，特征选择的步骤如下：</p><ul>  <li>计算每个特征的重要性，并按降序排序</li>  <li>确定要剔除的比例，依据特征重要性剔除相应比例的特征，得到一个新的特征集</li>  <li>用新的特征集重复上述过程，直到剩下m个特征（m为提前设定的值）</li>  <li>根据上述代码中得到的各个特征集合特征集对应的袋外误差率，选择袋外误差率最低的特征集</li>  <li><em>5.1.2 特征重要性的估计方法*</em></li></ul><p>  　　特征重要性的估计通常有两种方法：一是使用uniform或者gaussian抽取随机值替换原特征；一是通过permutation的方式将原来的所有N个样本的第i个特征值重新打乱分布，第二种方法更加科学，保证了特征替代值与原特征的分布是近似的。这种方法叫做permutation  test ，即在计算第i个特征的重要性的时候，将N 个特征的第i个特征重新洗牌，然后比较D和表现的差异性，如果差异很大，则表明第i个特征是重要的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随机森林算法，参考：&lt;a href=&quot;https://www.cnblogs.com/wj-1314/p/9628303.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/wj-1314/p/9628303.html&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/starstarb/clouding/raw/master/head/e7f428d6ca1cf376e564c5a45b13e431.jpg&quot; alt&gt;
&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://javastar.club/categories/python/"/>
    
    
      <category term="python" scheme="http://javastar.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>debug技巧总结</title>
    <link href="http://javastar.club/archives/fe81e267.html"/>
    <id>http://javastar.club/archives/fe81e267.html</id>
    <published>2019-08-08T03:41:29.000Z</published>
    <updated>2019-08-23T03:28:34.442Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+/B/nZsljibZojdEhux3T4ejBS5EYUGbltlSXB/8ucDW2ecb63YB3ujiIUYI3M4zvyX6E8ANIKsQ==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
  </entry>
  
</feed>
